%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: asq-2016.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Siggi Bethke
%%CreationDate: 26.08.16
%%BoundingBox: 0 0 560 460
%%HiResBoundingBox: 0 0 559.0918 459.7105
%%CropBox: 0 0 559.0918 459.7105
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font TimesNewRomanPSMT
%%+ font MyriadPro-Regular
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: Symbol
%%+ Times-Bold
%%+ Times-Roman
%%+ TimesNewRomanPSMT
%%+ MyriadPro-Regular
%%DocumentNeededFonts: Symbol
%%+ Times-Bold
%%+ Times-Roman
%%+ TimesNewRomanPSMT
%%+ MyriadPro-Regular
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                            
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stMfs="http://ns.adobe.com/xap/1.0/sType/ManifestItem#">
         <xmpMM:DocumentID>xmp.did:0380117407206811822A9BBD0D5643A0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0380117407206811822A9BBD0D5643A0</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:018011740720681197A5AC097429004A</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8ec565d2-bc8b-894e-a3ad-614286915865</stRef:instanceID>
            <stRef:documentID>xmp.did:0580117407206811822AA6F8A81B4A8B</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:018011740720681197A5AC097429004A</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:018011740720681197A5AC097429004A</stEvt:instanceID>
                  <stEvt:when>2013-10-16T22:26:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:028011740720681197A5AC097429004A</stEvt:instanceID>
                  <stEvt:when>2013-10-17T00:37:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681189CBE7837BD2FFDC</stEvt:instanceID>
                  <stEvt:when>2013-10-22T09:38:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681189CBE7837BD2FFDC</stEvt:instanceID>
                  <stEvt:when>2013-10-22T09:54:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811822A87499591F878</stEvt:instanceID>
                  <stEvt:when>2015-08-24T15:06:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0380117407206811822A9BBD0D5643A0</stEvt:instanceID>
                  <stEvt:when>2016-08-26T12:58:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:Manifest>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/alphas-3.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/as2015curves.1177.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/Documents/as2015curves.1181.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/Documents/Private-PB/Drawings II/alphas plots/qcd-la-211+-14.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/Documents/Private-PB/Drawings II/alphas plots/qcd-la-211+-14.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:Manifest>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">asq-2013-RPP</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2016-08-26T12:58:10+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2016-08-26T12:58:10+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-08-26T12:58:10+02:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoXt&#xA;/Y2Fu1zfXMVrbqQGmndY0BJoKsxA3OKpb/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jX&#xA;yb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8V&#xA;d/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P&#xA;+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/&#xA;6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1&#xA;ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jX&#xA;yb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8V&#xA;d/jXyb/1ftO/6S4P+a8Vd/jXyb/1ftO/6S4P+a8VWR+evJEnL0/MOmPxNG43luaHwNHxVPMVdirs&#xA;VSLzW6INILsFB1O1AJNN2LAD6SaYq84/PbUvM+jaxol/pGo3dvFcxyRm0gmkSOS6gcLaR8FbifWm&#xA;u19Sq7pHQ7YCyi9c03ULXUtOtdRtG52t5DHcW7+Mcqh0P0g4WKuyqwowBB6g7jFVn1e3/wB9J/wI&#xA;xV31e3/30n/AjFXfV7f/AH0n/AjFXfV7f/fSf8CMVd9Xt/8AfSf8CMVd9Xt/99J/wIxV31e3/wB9&#xA;J/wIxV31e3/30n/AjFXfV7f/AH0n/AjFXfV7f/fSf8CMVd9Xt/8AfSf8CMVd9Xt/99J/wIxVxtbZ&#xA;gQ0SEHqCoxVZ+j7D/lmi/wCAX+mKu/R9h/yzRf8AAL/TFXfo+w/5Zov+AX+mKu/R9h/yzRf8Av8A&#xA;TFXfo+w/5Zov+AX+mKu/R9h/yzRf8Av9MVd+j7D/AJZov+AX+mKu/R9h/wAs0X/AL/TFWAa3+X/n&#xA;abWLq40XzDHp1tqEomnBtYZvQESuiJDHKrrSSP0g+4+IM/7VAqhr/wDKXXr2yhgk15Fmju3uZLlI&#xA;ZY2ePhEiQFIpo4uDek3qfBQ8vhC4qnXl38v77TPMc+p3eprfWMkLxRWLxV4s8okEnN3f4qbHiBXb&#xA;wxVO/OxRPJevE0VF027qegAED4q8V0r81fNlz5y8u2d95kayOpa3fWmvaF9TgkNhHBcelYWZcQ+q&#xA;DdmimV271XjxOKsj/NLz35m0+38/z6O0kVz5U03Tv0eqVK+pqUji4unQbP6MKjhyqFKse+yqS6v+&#xA;nbPzV5e8s+WdVutet/Nfl+5m1C21HUrySMPHEHt74T8pZYFmk+FljojD4aCuKp9YXevaT5m0Hyfq&#xA;krXDJY6XfyyPPJdFLmOWS0lAmkCs4kVEboByDMAOWBKffnhoraj5Emuon9GfSZVvEuOJb0Y2Vre4&#xA;nIG/7m3uJJR7qMSob/JHXF1LyPFbFDDJpUrWn1csW9KFlW4toanf9zbzxxH/AClIxCln2FDsVdir&#xA;sVdirsVdirsVdiqjei8NlOLJkW8Mbi2aUExiTieBcDfjy65GV0a5s8fDxDi+m967klC+cpvJberJ&#xA;FbeantpHHoqhjW4IZo4x6hkTY8VYmo65V+88P+m5t6YanYE4OIc+fD1O1HzCA8wWnmy4h0eG2iac&#xA;RNa3F27vByE8NxC7eqyiIceAf+6UVPam2U5o5Dw0O49Of47nI0mTTxOQyNXxAc+RjLlz619RUop/&#xA;zDFmpmike49GRwqJaIfXAH7mSsjrw6+m67/zDxgDnr+zn+ruZSjo+LYirH87l3jbn3g/DyQtb7z1&#xA;LM9obgfXYoJXuIeFuzxMssiW5IX4f38bo/2usbeNMiJ5jte9b8vh8/0M54tKBxV6SRR9W+w4v9KQ&#xA;Ry/iCPvX82tYWMX72O7eBzLJEEci5WaLhzIEacfS5tTYHod6DJzOXhHO6+2x+hoxjT8cjtw2Od/T&#xA;RvvPOu+kCNF8zQ3v6cmD/XmuFhntrVg3O2FyrFuTsPg9NTxXrRqHcZDwcglxnnfTutv/ADOAx8If&#xA;Tw2DLpLh+++Z8la8m84mT6zbw3MczXLN6UhiaA2xH7iMKjMVf1OHqHsOe9OOSkcvMCV35VXT9vxY&#xA;Y46auGRiRw+d8X8R91XXnw+bNM2DpXYq7FXYq7FXYq7FXYqk3nX/AJQ3Xv8AtnXf/Jh8VTO+t2ub&#xA;K4tlf02mieNZKE8S6kVorIdq9mHzxVhn5f8A5WWflOyeGS8a/lmR7e4rGiRS2x3ihlRvULiHk/Bi&#xA;1fjYGuKt+Uvyg8s+UfMl/rfl2a40+PU3Ml5pMa2ptGJDUVOUBuIkVm5BI5lWtNqbYqjvMWi2UWo2&#xA;eosDNd3mpWKSSS0PGK3MjQxIAAAqO7uO/Jjv0oEskvbO1vrOeyu4xNa3Ubw3ETdHjkUq6mnipphQ&#xA;8K/JS9uPL3n3UvK19JyknEtq7Hcvc2kksiSE7fHdf6XOaivpiP2wBkXveFi7FXYq7FXYq7FXYq7F&#xA;XYqo3ty1tZzXCxPO0SM6wxgs7kCoVQATU9MEjQtSkmu63eweTrjVYw1jeRopIkWnBxIEYUlUVU78&#xA;SV3G+VZJkQvkWJO1pHqHmrVYNSNpb6hE9rH9Y9LUJFT05SlqZuMhjVh+5cDk0YGx3FRlUspBoHbv&#xA;+DEyKP8A8U3Vt5bGo3ImkkivoraUJ6LSFXmRSFZFaKUEPSqhaj+Vsn4pEbPeplQtL3/M+4QJMdOi&#xA;9GS3E0aC5V2Zi5+y0avyAjFWAXkDtTIfmj3fajxE51TzdLaXscMNr68XOFZQp/ess0E0xaJNuXBY&#xA;enVtwN+tks1HkyMqS7TPzBa70uKaRrSO8uLmKCNTIVjRJYI5vVkBJagMnD3anSuQjqLHS0DJYTry&#xA;x5jfWRdLJCscls1A8bFo5E5PGJEJA2cxFl/ySp75biycVsoytPMtZOxV2KuxV2KuxV2KuxVJfO6q&#xA;3kzX1YAqdNuwQdwQYHxVOsVdirsVSLzWiONIDqGA1O1IBFd1LEH6CK4qnuKvAvzw0iTRPO2n+Z7d&#xA;AIb8K0hILKbu24KYzTvcxxwRbdIlmPjlWUgRJLlaSBlkjEGiSHtflq9tr7QNPvLWFoLaeBJIYnUI&#xA;QjCqnipIHIbjDhNwBqkazGYZZRkbIKZZY4zsVdirsVdirsVdirsVUby4NvbSTBQxjFaE8R9JoaD6&#xA;MWcI8RASzUtXkTy5caikcTtFyohJljbhLwqCOBYGlRhpvxacHKIHkfh0QVp5rtvr09rcQMzw3DQ2&#xA;wigdWSFYoXeWUOaooNyoJ8N+mPC3T0B4RIfzb3I53LYd/wBKm/mHQdSNkDY3U0iGSeztlAUGS1da&#xA;jgJFR2T4XWtR3G+ROMHn0Yz7OkLsxoV39eXT8FHjzBaXOm2t3ZxVjvZo4LZ5QOAMlDzPEnZSKU/m&#xA;FPfJUwOkMZmMv4QSfh+PluhG80adbau1nf29b+OT0PrkaKIyqrE4NWbkoH1sCm9DXHg6tn5CUocc&#xA;eVX5/wAXl/RKGvPOmlixkurSyb1Cpad5o04pGsyxv6nF+R67ca9seBsx9mS46kR8Ou1933o3/Fmj&#xA;WyTSi2ljJo0vBYiWlEUb8CVcgsIXQ1rxpsD2xEWodnzJoEfb3kXy7xXf5NDztpgjNw4kMLejxjCK&#xA;HX1UdiW/eHlx9M14jb3xpl/J87ra9/sry8/7ETqHmmysp5Y3R2jgk9CeYfYjk9ETgP1IXg61boK+&#xA;FaNNeLRymAR1FjzF1+vbyatvMhnt4WS0P1i4na3hh5ihKRGVmLkCg4qe2NLLScJO+wF/bSM0jWbf&#xA;U4neJGjaPjyR6V+JQw3BI8R8x4UOJDVnwHGd0fgaHYq7FXYqkvndVbyZr6sAVOm3YIO4IMD4qnWK&#xA;uxVivlz8y/K3mOz1W70iWW5TSDW4RYyXeNgxjkiUVLLJ6bceh23AxVDt5i03zR5f8ua3pwlWyvdS&#xA;t3iEqmKQenI6kMAf5kPchh4g4EsywoYp+Z/lVvMvk+7soYzJfQUubFVPFjLGCGjVqinrRM8JPYOc&#xA;jIbM8ZAkCWI/84/ebV1DRrvQZpOVxp7/AFm1LAKXt7pjI1E248ZWLhP2I5IhjDknLvIl6zkmt2Ku&#xA;xV2KuxV2KuxV2KqV1cw2ttJczHjFEpdyATsPYYJSAFlnCBlIRHMoDUtQ0h9Blvb1PW04qDJEycix&#xA;DABOPc86Ae+QOUCPF0b8OHIMojHaf4/Qx641O3hv1nm0GNob5RLYKYybr6yOSztPH6RMYRAgcjlQ&#xA;Upy/ZqOoIPLY8vx+Pi7COAmFDIbjtLf08P8ADwm97N1y866m17HFpmgSym2h02VSEVrJRL6frusX&#xA;NCywfFQjt9+WzyGMbP6/1OJjJyZQLMx/S2ut9/q/HclkfnLQksIbddPu3017Z5kkkjVecaPAokAY&#xA;rVXNyG57Ab+9Kjqhzo05J7OymRPFHj4q59alt8OGqQur6lo2lQaPFBZx38LlZ1FyqTSwwzjmiq23&#xA;xTNGwRmYlnAG/UOXU1VdW3T4MmUzJkYnltsCRz+Eb3AAqKYa/deXtGthF+io0uLi2kaFDFEIgYwJ&#xA;AkhDKD8aKaISdq++Sy6jg97j6XHlzSvjNCQvc3vtY+B6pfB5q8mJpsXq6Zw9S2m9aFIYqKLQStJH&#xA;Tl0/0V+PY065EasHvunIloNSZmp/xCjZ/i4aPL+kLV/015MZJIjokjiFT9YjFqkgiMbSRKjkFkBP&#xA;F+JrSnfH82O4sPy2psHxBvy9R35Hbr3X1R91r/lmNYNSuICVvIY5zJw9agnKW0YKx+oC8hlCfDUU&#xA;G56ZP8wNvdbRDSZyTAH6SR3crkedbCrWaTfeRdWvfq1jBHJcywtdANA6Vj9QRl1Z1UbsB07YYZ4y&#xA;NApz4dVijxTJoHh59atQtfOOjWkxiisngBfjeBQeUQjPpKwQD4ouCVBXaldqgjKfzYvkzn2dkkLM&#xA;r7vPrz79+vXyRunec4b6ymuI7U847qKzhjWRWEkk8MU6kPsAvCcVPzpXas457jdNWbs4wkAT/CZc&#xA;uQBI+dhH6P5gg1Kae3ETQXNtX1Y2II+GR4Wow2NHhb6KfLJ48okSOocfUaU4wJXcT+oH7iE0y1xX&#xA;YqkvndQ3kzX1NaHTbsGhIP8AcP3GKp1irsVee6L+S+jaBFeR6Bq2o6YL0kTek1s4MSo6wxFZoZAU&#xA;hMjFe5r8ROKoqbybo3l/yzoflzTxLHp8WpxEFJXik5SySTOQ8JjKVdzslAOg2wJZxhQ7FXzz5ztp&#xA;/wAtvzat/MdmrfonVHa5MCAnkJXpfQKB1ZnkEir1eRoVHwxnAzG4fQNrdW13aw3VrIs1tcIssEyG&#xA;qujgMrKR1BBqMLBVxV2KuxV2KuxV2KuxVD6hfWVhZT3l9KkFnAheeaQgIqAbk1wEgDdlGJJoc0JB&#xA;qXl3VPLy38c1vcaDcQljK/H6uYaUYPzooC0owbp0OD0keTZWSE+omD8bUL678mwWtib6fT4rUgT6&#xA;aZ3hVCBxHqQljQj96oqv8w8ciYwoXVM4SzWeHis8+f2r9Zk0O90n6xeahHDpMcqtPcCaNIWMcnH0&#xA;5JWqAPVABoQeQpXHJESG52RgnPHP0j1V9/X5IIXX5clUgFxpNBR4oxJbgj6wVdWUA7epRCKddvbI&#xA;8OPls2+Jqbu5/b0/Vu7UbzyM1zHb3a6fN6IktZHd7XjbLEnJo5FdwygD9lVNO9BjIQJ3ARjnnAJi&#xA;ZC9+u/mvXUfJmoEQyNYvEGjs7NnktmScSxJIiQBXYkFZQApAPgKUJJEDzpAOaG4Mu88/mUu1dfy6&#xA;/wAK6lqUf1OTTYIpYZr3T/QlkQyqyskcg5BZG+sHqf2qnrkJY8fCW/DqdSMsRcrsGpXW1cx3bD5O&#xA;std/L2SkV4LKxvLeAiRLx7T1EiWXiS8kTyRr++J2515V2xAx8iAxmdR0MiCenFz/ALPsTa/byil3&#xA;ZWd2bZbisaWVuaUqxM0ICj4d2ti0de6/DvkzGFhphkzUSCd+f3H7Dv790m8s+YPy/vtWFlplilpe&#xA;RUWxY26xiaIp66ywFK/u2X4gW418MhDw72G7fqDqOG5yJB57/DdM7DU/I13dw21nLaPdQyUtlUAN&#xA;yrI9YiQOQqshBWo65IDHe1NMznAJPFR5/Zz+xHL5X8uKWK6bbrzoWAjUCoUKDSlKhVAB9sPgw7kH&#xA;W5j/ABy+aKs9L0+zd3tYFhZ1VG47DghYqoHQCrsdu5J75KMBHk1ZM05ipG/x+wIrJtTsVSHz7bR3&#xA;HkrXUkLqosLlwY5HiNVhYj4oypptuOh6HFU+xV2KuxVIvNaBhpANafpO1OxI6Fj2xVPcVdirFvzL&#xA;8lxeb/Klzpg4rfx/6RpkzEqEuEUgAsvxKsis0bEbhWJG9MUgsB/IDzvK0M/knVuUN/pxkNgkwVH4&#xA;I5E9uVGytDJWijZRyjWvoscATIPZ8LF2KuxV2KuxV2KuxVRvbKzvrSWzvIUuLWdSk0EihkZT2IOA&#xA;i0xkQbHNKdR8m6Jd+Vz5ahi+o6YBGIUtgq+mYpFmQgMGVv3iAtyB5b1rXImAIpthnlGfHzLE9e8v&#xA;+VryybQ9QW+aPSp+FqbWH0UVJ7ZFeMS28CwIGaT1FjYgl+NPhKrln5TiA3+5lHXyhIkDf4n8dyf+&#xA;YPKN1c+T7nQdOuQzyPbm1N0VVY1hkidgXjjLMW9JnqysSzbmnSmWP00GWLUAZBOQ7+XxSc/lF5Yh&#xA;njQ3F0zSzLMgeOKeOqQNFKJBJFJFSVWZviAo32KdMA04bD2hPu+9fN+U+g3SRWv6SuHj09pFSEi2&#xA;cxrKGZYnPpcyF9WqljypTfvidOFjr5C9hv7/ANa1fyu8s2rzCfVblkZAt0k8sRLW6x2qMjsVDAH6&#xA;lCeVeQ8d8I0996nXy7h+L/WW9N/Lzy5YeU9S0lNZd7HW5Iy16zwbPEqRgRkLwJIhHj3wjTmjHdE9&#xA;cZTE6Hpbvfyh0HULq7vXv7rlfSyzSGMw0/fSmUBG4Fl4F24srA+NcgcAtlDXyiAKGyZ6p+Xmnalq&#xA;Bnup3ktXMDywMAXaS3gmt1b1Oq/BccgVoVdQwOSOIEtcNWYigN9/tIP6FOH8ttOsYdLTRbuTTJ9M&#xA;jaM3cccLyzl4lhMkxdCC/Fa1pSp6Y+ENq2U6wyviHFf2LLf8tLSCfSm/SE80Oj+hFYxSrHWO1tmE&#xA;kcKsioT+8jj5M1SVWncnHwtxuk6wkHYern7yzLLXDdirsVdiqS+d1DeTNfU1odNuwaEg/wBw/cYq&#xA;nWKuxV2KpF5rQMNIBrT9J2p2JHQse2Kp7irsVdirwv8APPyVf6LqkP5keW6wXNrJHJqvpAEo6EKl&#xA;3xJAIKUjlFQCtKkIZSQWQL1D8vvO+n+cfLcGq21I7gUiv7WtTDcBQWXehKkMGRiN1INB0woIZJih&#xA;2KuxV2KuxV2Kqd1ALi2mt2d4xMjRmSJikihhSqOu6sK7EdMING1KST6LfxeS77SzO+pahNaXKerI&#xA;xrJLMj0VTK7cVq3FQzbDvloyA5BLkLDGtqYpoH5cahZ+YNOu5qxW9rbxztIgjHCf1HZrWMK7Mi0f&#xA;4yAVareOZOTUgxI/HvYRhuyXWfJa6kzFtSuAHlMhWXjMIq1NbYNQRSLWiv8AFQVFMx4Z+HoPx3sz&#xA;G0t81+TtT1dtK0u0nnitbKOVptUnk9Vn5DiInAdZX58fj6DiTvXLMOcRsnmejGUCdkPb/lX9X1WC&#xA;8hvo0ihuLe69L0XZgbdIE4K8kslU/wBG+HkCy8jRvGR1dxqun6/1oGLdX1X8u7rUri7d7/6v6hvx&#xA;DPGC0jLf+hVZQSqsipE0XE124sCCBQQ1IiBt3fZayx26LyLrQtraCW8spI7SC5tYYpLZ5Iyt44aS&#xA;RlMo+NeChfYsP2tgdRGzsd669yeAp/5S0OfRNIFjLMZiJZHQkluKu1QCTSrH7TbfaJynNk45WyiK&#xA;Cc5UydirsVdirsVdirsVSXzuobyZr6mtDpt2DQkH+4fuMVTrFXYq7FUi82LyGjipH+5S1NRt0LGn&#xA;04qnuKuxV2KrJoYZ4ZIJ41lhlUpLE4DKysKMrKdiCOoxV8565p+s/kn54h1nSo3ufJeqN6MsBYcV&#xA;UlpDbyO5orx1aSKRjQjkGpWV2DLm+gdD1zStd0q31bSbhbqwul5QzLUdDRlZTRlZWBVlYVU7HfCx&#xA;R2KuxV2KuxV2KqV5FPLaTxW8xtp5I2WK4Cq5jdlIVwrVVuJ3odsMTR3UsdtrbzXbeQbqPWLw33mP&#xA;6ncs89ooQ+qUcxrCsSxmq/CBQVJy8mByDhFRsMADw782OaBo/nYeYNO+s312LVLeO7l9WS5aJUaR&#xA;+Vu/qDjJKykVD7oDt9kZfknj4TQF8unzYxBtkus6F5ou2P1bWOKtKXhHFofQBrxasJBn4jbg5Ct1&#xA;PTKIZIDmPx+hmQUu83eTvMOrRacLe/8AWmtreaG7leWS1MrvJBKrcYFK7+gyEf5XemTw54xux19/&#xA;ewlAlW17QvM9/raTWlx9XhjaGaGYvWJQlvcRyQtFT41eWVOewqvQ1UUGPJAR3/G4TKJJY8fy+85J&#xA;YW0Yuopvq8sLm0eZ6ViWFXaOXjUCUI/JGHWh7tl/5nHZ2/G7HgKYa15c85XhvbyKNYdRmlM1pcRX&#xA;bl4YxD6UVsFKxpT1QJWPQbmjMBWuGXGKHT3fb+hJiWfxhxGochnAHJgKAmm5pmEW1dirsVdirsVd&#xA;irsVdiqS+dxXyZr4qRXTbsVHX+4fFU6xV2KpHbeePKV1Yajf2+qQSWeksyahOG+GMr36fED+yVqG&#xA;/ZriqA1DWtK17SfL+q6PeLdadd6jbSW91DurqrMGHxDbdSrAio36HFWV4q7FXYq7FUHrOjabrWl3&#xA;OlanAtzY3aGOeFq7jqCCKFWUgMrDdTQjfFXz3cWPnX8i9cN1p6Sax5EvZF9aIAV5FeCh6bRTjZUZ&#xA;Rwk+zt8Cxhlze7+UvOHl/wA26LFrGh3S3NpJs46SRPQExyp1VgCD7ihFVIOFij5budNSgtFiRo5Y&#xA;5JWlLkMvplVICcTX+8H7QyJJukIrJJdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS&#xA;XzuCfJmvgEqTpt2AwpUfuH33riqdYq7FXlnlH8nNb8mwainlzX4UkvwsfK8sjOEjgSQWhFJk+OOS&#xA;YsxpRqDYYqmlv5UvNA8meXPL8l+Dc22oRL9es4I4AOcskgKRSfWFrRqMX5FjVjucCWfKCFAJLECh&#xA;Y0qffamFDeKuxV2KuxVSurW1u7aW1u4UuLWdGjnglUPG6MKMrqwIYEbEHFXg/mj8ofOHkPWX83fl&#xA;VcSNEKtf+XpC0vOMEtwVSSZ03NEP7xd+DMSOIZWn35f/AJ0ad541qzh5JomtWsM0V5pd2x3kJ+NY&#xA;uQT1d41YLVXXg9RShyBviDGvUHq2m3Elxp9tcSsjSSxq7GMELVhXYEt+vLGzLERmQOhROLW7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh8/QyTeSddSOd7dhYXLepGELELCxK/vFkFG6Ha&#xA;vgRiqfYq7FXYqkXmwMRo4VuJ/Slqa0rsCxI+kbYqnuKuxV2KuxV2KuxV2KsK83fld5a1rV4PMoCa&#xA;d5gsGWe31FUQoZYv7trpPgMyr0oXBpsCMFb2zxyIlY3/AGvOZPzU/NH8vruS586aHHrHkq6czW+t&#xA;6Kv+8yynkQ6E9mbdZOPxE8XYADCWzUfWfLb5PR/L/wCZWh+arvTZPK2p21/pt2JPrJEUnqxNGvLg&#xA;9WT03YVorJWm+4ymUyJgDqxxiJEr6C/tA/SzTLmp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxVJfO4J8ma+AaE6bd0PWn7h8VTrFXYq7FUi81hyNI4EA/pO1qSK7VavcdsVT3FXYq7FXYq7FXY&#xA;q7FXYq0yqylWAZWFGU7gg4q8u8x/k3pa3kj+VHbyxc6gHWG6sZ7iNILsK0qTx2kbxwrtGVYKQGDG&#xA;o61oyRPGC5OAxEZ2N6/T+uj8K6pFB5m/PTy5z0XzxpUGr6XLG6xectKma3EHFCwkuo4lDqAabhEH&#xA;+tk8pPCXGlyZ/wCTvzT8j+aYHTRtTgnvrcMJNNMyi6AjFT8MhUsKD7dSv+VhjKxdM8kOE0DbJtM1&#xA;KDUdOg1CEFYLhBJGG4k8T0rwLD8cMZWLawbVLW8truIy28gkjDFCwr9pTQjfwOEEHklWwq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqkvnfl/gzX+JAb9G3dCRUV9B+22Kp1irsVdiqReaw5GkcCAf0na1J&#xA;FdqtXuO2Kp7irsVdirsVdirsVdirsVdiqHurP6xNbS+tJF9WkMgROFHJUpRuSsacWP2SMjKNkeTZ&#xA;DJwgigeIN31na3lpLbXUQnglUq8RpuCO1aUPgcZRBFFhE0Xnmq/kd5D8x2aXWp6R9T8wRsXi1aHh&#xA;FdJIrVjdvq5EUgUAAK4Ip2yvFCoUXI1eQTmTYPz/AE7pZD5K/M/ypPJPH5suPMehMXl/RL2vC7Fy&#xA;55LxngdSY2ckycmUUJO7ZHJEiND9LLQxjxVKuR51/vuvd5+VteX/AM1dO8twXdv5h0rUrWGEfXNQ&#xA;1ZLVZ7WFncJOkkts83P0ZGFWQEUbYAZXp5CO3m3Z8BlEEE+mPW/s2+zoOqL1D8zvLms67pzaFq1r&#xA;d6TJbGa4vYdTe3WMrPHVZoU3jIRty9DxYn9gV2Xh3iJ68QHLv8/x9rq5HemeaB5jsNU0nTrz17ZJ&#xA;NQjLwwxXCzglSQyo9ELshFH+HY1GRyYjEkb7M7TfK1dirsVdirsVdirsVdirsVdirsVSXzvy/wAG&#xA;a/xIDfo27oSKivoP22xVOsVdiqhDf2MyTvDcxSpbO0VyyOrCOSPd0cg/Cy9wemKpN5knjuINEntZ&#xA;Ukil1K1eOZSHRkNTVSpoar0NcUsgxQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgZdD0mWaCZrZQ9sx&#xA;eLhVAGbqSqkK1adxlZxRsGuTdHUTjExB2lzeeecPyu8nv5it9SsdLi067mtpLeW6tLFDGZJ5Y4Uk&#xA;fjHw5iOWam4Y7b/Zy814dH+cPe4042WEp5D/ADM8s2OkXeha/fMLe0nu5LG9SZ7SzeBeRt1TjHUS&#xA;j4BzIFRyFARmeZwmZ/0iKYiwAt8u/mN+YvlzWLqe+s21Ty69lHqKWsbwQrEly8arMrhHenN+PpbE&#xA;VqQApzA0+hmDwnYWQ7ftDU4JxEofVt38mV2H/OQGmXMsUt5Y3Gm2yMYNQjlAf0X+L94XHE8VC/EK&#xA;A9elPinn004ZOEbx4bcfDCEsJmT6hKvx+OnyPvKn5leXpNEib6+dREfrNNdpKkoVEDSBmkZxyBQV&#xA;BG3b3zAjMwqMrMvn+ly82l8WRnChDboQO7uZVpvmry/qFjbXkN9Asd0VWJWmi5c26R/CzDn7A5kQ&#xA;PFyH7Pe4GfBLHKpfPofcjI9U0+Q3AW4T/RZPSuCTxCPQHiSab0IyZiWlFAgio6ZFXYq7FXYq7FXY&#xA;qkvnfl/gzX+JAb9G3dCRUV9B+22Kp1irsVeNeSfyn86+V9M1/T3msdTg1qFrZzLNKrKIYZhDMFMT&#xA;qXlkmHqAn4QKgtgSyLTtE13Qfy88naJOLcavpktjaPR2kgLwqU5cgqNRgK9MVD0JeXEcqcqb06Vw&#xA;obxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVD31mLuERGV4aOkgePjWsbB1+2rj7QB6ZGUbUogbCla&#xA;++SVCXmkaTeljeWUFwzqEdpYkclQahSWB2rvkhOQ5FaY9/yqryD9aW6GlATJIJlImuAvNTUHgJOJ&#xA;+VKZYdRM8ymMiAQOR/QxW4/5x28o3V5fXc8rc7l55beKKMQxRPOaqSqMCwhbdFBUdiCMsGrnyO42&#xA;+xlIxoUKIu/O1DWfyGnn0ewtLDXZlmsXQiFgsNq/HrI0caufVp9liT92Q0+XgySmf423UZ/EjGNV&#xA;wBLrz8mfzJtNP1aHTfNVveHVrkXV6stoLeeaQOX9Q3EDoEPI1KCMruemWQ1PqiTyiKcalrav+cPl&#xA;/XY7zUNLfUap6MkFnMiW1wYYWlEUDTQzTbJGzF3KlqceRPEtaIwlj6cSk7pnpP8AzkGLm5EV95Wv&#xA;bdeHKRree2umUluKjgGjJDGlO5qKDcZWdHKkCVp9bfnl+Xs7ek1xd293VQLS4sbuOQlqcR8UfCp5&#xA;bDlXKfAldUm060v8yvIeppGbbXbMSSEAW80yQzAsKgGKQq/00oe2RlilE0Qm04j1vSHsvrwvIls+&#xA;Rj9d2CJzU8StWpvUUyPAbqt1RuRVIPP31v8AwTrv1X0/V+oXNfV5ceHoty+zvXj0xVP8VdirsVSL&#xA;zWXA0jgAT+k7WoJptVq9j2xVPcVUL25a3gMiqrkEDizrGN/8ptsVQMetTPIiGCIBiBUXMRO58B1x&#xA;VAefdavtK0qz+pzpZvf39rYSahIqutslxJxMvFvg5fsJy+HkwqD0KrDZPNHmeLziPJB11jbvdIn+&#xA;JnitPrQL2sk/1EKsQtfrHJAQTD9g/ZLb4qi9Tl8yx61qlunnea2tdO0366J2t9NMCSLPLGVua25Y&#xA;hVjAk4um9acemKpiPzHvItB8uXc+mL+kdZ0uTVrq3kl+rpDFawRS3ADMklXrOoRWp35MtMVdH+Yf&#xA;6X0SxSwB0/WtTa0jdGVpls1vQJFYyFFheVYd+FTR9jUYqxrUPPHm/S/L3mTSH1FrjzFYtd3WlarJ&#xA;DCHOmwyyp6skaRJA0kb25hNEpyZGIo1MKsov/PVojFdLvZ7qXQb+007XoLi1kh9X65cLaclleKGN&#xA;nR29QeieLDtRlOBV2t+ete0/zI+lW+h/WrRXiQXvDWDUSKrMa2+k3Vt8JYja4I2+IqagKqF15l1x&#xA;PPLW63Xp2MOp2+krpRSMieO40/6410H4+sGR6qKNw4o1RXcKojUdR1tfMvmrT4tTmit4NEs9QsAs&#xA;dsTbTyveRyGMtE3IN9URqS8960oNgqk/+LPMT+ZtAi/SYjsJbTTH1BFSAx+vfeqCtyCnrB5yiiD0&#xA;WCqQ3qbceSqb6D5ruNP8k6hrGuXL6gdM1HUrRriR7K1d4rXUpbSHm8jWVorcEWpJUH54ql1j+aJ1&#xA;zyBqWtaaqW19aCOKSUTWV1HE0zhDNxtbi74iJW58ZePTpTFVdtf19PLtxa/pJjdR64mirrrxweoI&#xA;ZJ0QylBGLf1V9QxD93w5/s/s4qkvl/zv5pv7+F578iO11KLRzZCKEC9illuIvr5PDmrMsIkQIQlF&#xA;aqnsVTjTNb8wto/li4m1SWaabW7vTr52jth9Zgjmuo09QJEoVlFuu8XD3wK9BxV2Koa902zvWha5&#xA;QyegxeNebqtWUoeSqQrVViKMDsT45KMiOSoRvKvlhliVtHsmWBQkKm2iIRQ3MKvw/COW9B3yXiz7&#xA;yqEn8h+VLiNoprIujSXEzqZp/ie7ULOWo+4kUUIO2EZ5jr+AikIfyt8gNCsMujRTxhuTCdpJjINv&#xA;3cpkZjLF8I/dPVP8nE5pG/PZSGOyfkV5ZWx5QxxrrIkHDUYzPBSD1OXpemJZEJWOsasRUfa+1vk/&#xA;HHHxEJWr+Wepp5je2tPM3mSx0lLZZIpl1GS5/wBILEGMG8F0Cqrv8QPX2NYHh4PO1Zl5yV4/I+uI&#xA;GMrppl0ObkAsRbtuxUU370GVKnmKuxV2Kse85XKQDRORAMurWkSA13LFvAN2rirIcVdirSyIxZVY&#xA;MUPFwDUqaBqHw2IOKqGoWun3lpJZ6hFFcWl0PSlt51V45A37DI9Q1fDFWO6R+XPlDRdHuNEFtHce&#xA;XriYSR6PexwTWsUjv/usPHzbm7D+8Zu1KYqipvIf5ftcW803l3STcx8I7WR7O2Lr6QqixkpUcFWo&#xA;A6UxVM9QsdE1BVXUbe2u1tpV4C4SOQRzMAFpzB4uQ4p3398VSS58heS3uL2WG3WxvbwRRvNbStE0&#xA;ckchnheGOpijkEvx1VPiP2q74qiLLyn5FuNHOn2+i6dLpQeSGS1+pwCEyQzcZQYvTVKiaLf4eori&#xA;qGsPy08p6ffC7soZ4VNwLuS0NzPJbNOlDG/oyvIiemQCix8V2Xb4Voqyh5I0482C8iFWppUnoB74&#xA;qgbrQNCu7tr26061uLx4GtWuZYY3lNvJ9uEuylvTau61ocVUT5b8rXEtzcHS7GaW7hNleTGCFmlg&#xA;T4DBK3El0XhTg223TFVsHlfyktxaXMGkWAudLX0LCdLeHnbKtf3cLBaxAcj8K0xVEaXp2g6VaiPS&#xA;rW1sLS5k9YJaxxwxySSgfHSMKrM4A36nFUTcGymhmguPTkhb9xPFJxZT6gA9N1O3xhx8J61xVJpd&#xA;N8j2wtdEbT7BIr5JdPtrFbaMxPHGrXElvwVCgQBS5U7V98VTCPQNCju7W8j021S7sovq9lcLDGJI&#xA;YSKelE4Xkif5K7YqhovJvlCG2tbWHQ9PjtrKb61ZQJawKkNxWvrRKFokm32l3xVNYpoZlLxOsihm&#xA;QshDAMjFHWo7qykHwOKrmkRSqswUueKAmhY0LUHjsCcVc8kacebBeRCrU0qT0A98VcZEDiMsBIwL&#xA;KldyFoCQPbkMVW+vBw5+ovDl6fKopz5cONfHn8NPHbFXCeAkKJFJLGMDkKlwCxX5gAmmKrLO8try&#xA;2S5tnEkEleDgEVoSp607jFVbFUj89SpH5M12rKrPp92sYZuIZjA9FxVPMVdirsVYZ+YutRWl35Z0&#xA;e70u01TTfMWqJp95FeKJFQek8yOsTKyMQ0X7XT9SqY/8q4/Lz/qV9I/6QLb/AKp4q7/lXH5ef9Sv&#xA;pH/SBbf9U8Vd/wAq3/Lz/qV9I/6QLb/qnirv+Vb/AJef9SvpH/SBbf8AVPFXf8q3/Lz/AKlfSP8A&#xA;pAtv+qeKu/5Vv+Xn/Ur6R/0gW3/VPFXf8q3/AC7/AOpW0j/pAtv+qeKsW/M3Q/JPlLyRqXmKy8na&#xA;Hdz2Co3ozWUCqQ8ix1+GIk059NvniqS+TbvyH5g/MPXvKr+SNHgt9M+s/VrgWNvyP1O4W2l9SsdP&#xA;3jvzSlKDx64q9D/5Vx+Xn/Ur6R/0gW3/AFTxV3/Kt/y8/wCpX0j/AKQLb/qnirv+Vcfl5/1K+kf9&#xA;IFt/1TxV3/Kt/wAvP+pX0j/pAtv+qeKu/wCVb/l5/wBSvpH/AEgW3/VPFXf8q3/Lv/qVtI26f6Bb&#xA;f9U8VUL38vfIENncTReVNGeWON3jR7K2VWZVqoZhExAqOtDirwuP8zfJaWVheTfl3orLLpi3tzHH&#xA;ZQ1M0tte3KCImM/u1/R/FiQT8RP7NGCvTPyv0/yL5w8uzajdeTtGtrm1vbmxmEdhb+m5gegdAyEg&#xA;FWG1TvXCrL/+Vcfl5/1K+kf9IFt/1TxVXj8jeSo0CR+X9NRB0VbOAAfQExVd/gryb/1YdO26f6JB&#xA;/wA0Yq7/AAT5NPXQdO/6RIP+aMVd/grybWv6B06v/MJB/wA0Yq1/gnyZ0/QGnU6/7yQfP+TFXkfn&#xA;Lzlovl+98y2a+T9Gkl0i/sLGyk+rIysL20kvDJN8CdEi40WnxHqcCWKv+eHlyX1Ba+Q9Mi+s8f0f&#xA;61tGfS9P+9+sUReXL9jjxp3rir3fy9oPkvWdA0zWF8uWEC6laQXawNawFkE8aycCeA3XlTChHt5I&#xA;8lsKNoGmsPA2kB6in8mKp1irsVdiqA1PQNE1Sezn1KxgvJtPk9aykmRXMMhp8aV+yduuKo/FXYq7&#xA;FXYq7FXYq7FUFrGi6RrNi9hq1nFfWUhBktp0EkbFTUVVtjTFWrDQdE0+5mubGwt7W5uFRJ5oY0R3&#xA;WMUQMygEhR0rirzP85Xtl85+RB5lMY/L9rm8GtfWa/Uzd+h/oIvK/u/T9SvHn8Na8tsVQH5WtcHQ&#xA;fzFXT2LeSFuroeVCN4PS9F/XFqT/ALo504cfg68e+KsR0e08v6dqPkdfM9lp0XlCbybDcaNHqHG2&#xA;0l9dkSOSaS6kZGiWeSP/AHYyMdwQC2KF0P5h/mJb2fk+y0KKDyhpmrJfXtp+mbiW7W5YXhk+ryzy&#xA;WRmZpULmKOMB2Do3qE/CVLIdI/L7TLD8xte8ivoVrN5c1a6tPNMFw1vCVihhLLJbVI7XQVI0ptE8&#xA;nSpxVmn5SWNlYT+d7Sxt4rW1i8y3Ait4EWONQbK0NFRQFG5xVnlxbwXNvLbzoJYJkaOWNhVWRhRl&#xA;I8CDiqU2nknyfZrAtroljEttE9vAFt4xwhk5B41+H7LCRhTwY+JxVMtP03T9OtEtNPtorO1jJKQQ&#xA;IsaAsSzEKoAqWJJ98VRGKuxV2KuxV2KuxVJZvJXlGaW9mm0azlk1JlfUGeBGM7Iaq0lR8RXsTiq+&#xA;fyf5Tn+s+to1lJ9c4fW+VvEfV9L+751X4uPauKpsiIiKiKFRQAqgUAA2AAGKt4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FULqml6dqunXGm6lbpdWF3G0VzbyjkjowoQRiqV+X/ACN5b8v6RNo+lwzx&#xA;6XMnpGzlu7u5jSMggpCJ5ZfRUhjtHxxVG+X/AC/pfl/SYNJ0tZY7C1UJbxTTz3JRAAFRXuHlcIoF&#xA;FWtAOmKpjirsVSry95Y0by/DdxaXFKgvrlr28eeee6kkuHREZ2kuHlf7MailabYqmuKuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.102;PS 2.000;hotconv 1.0.67;makeotf.lib2.5.33168</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.008</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbo; Symbol</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>10.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>10.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -459.71 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 459.71 li
559.092 459.71 li
559.092 0 li
cp
clp
gsave
25.6295 42.1549 mo
557.963 42.1549 li
557.963 401.822 li
25.6295 401.822 li
cp
clp
[.959159 0 0 -.905962 6.44629 580.296 ]gset
[
] set_spot_normalization_ary
%%BeginDocument: 
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 197 575 594
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, May 5, 2016 2:51:45 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
774 551 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
774.000 0 l
774.000 551.000 l
0 551.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 774 551 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 764 541 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
53.0000 9.01423 709.999 486.985 rc
newpath
79.7373 10.9328 m
79.8080 11.2272 l
79.8787 11.5211 l
79.9494 11.8148 l
80.0202 12.1080 l
80.0909 12.4009 l
80.1616 12.6934 l
80.2323 12.9855 l
80.3030 13.2773 l
80.3737 13.5687 l
80.4444 13.8598 l
80.5151 14.1504 l
80.5858 14.4407 l
80.6565 14.7307 l
80.7272 15.0203 l
80.7979 15.3095 l
80.8686 15.5983 l
80.9393 15.8869 l
81.0100 16.1750 l
81.0808 16.4628 l
81.1515 16.7502 l
81.2222 17.0373 l
81.2929 17.3240 l
81.3636 17.6103 l
81.4343 17.8963 l
81.5050 18.1820 l
81.5757 18.4673 l
81.6464 18.7522 l
81.7171 19.0368 l
81.7878 19.3210 l
81.8585 19.6049 l
81.9292 19.8885 l
81.9999 20.1716 l
82.0707 20.4545 l
82.1414 20.7370 l
82.2121 21.0192 l
82.2828 21.3009 l
82.3535 21.5824 l
82.4242 21.8635 l
82.4949 22.1442 l
82.5656 22.4247 l
82.6363 22.7048 l
82.7070 22.9845 l
82.7777 23.2639 l
82.8484 23.5429 l
82.9191 23.8216 l
82.9898 24.1000 l
83.0606 24.3780 l
83.1313 24.6557 l
83.2020 24.9331 l
83.2727 25.2101 l
83.3434 25.4868 l
83.4141 25.7631 l
83.4848 26.0391 l
83.5555 26.3148 l
83.6262 26.5902 l
83.6969 26.8652 l
83.7676 27.1399 l
83.8383 27.4142 l
83.9090 27.6882 l
83.9797 27.9619 l
84.0505 28.2353 l
84.1212 28.5083 l
84.1919 28.7811 l
84.2626 29.0534 l
84.4040 29.5972 l
84.4747 29.8686 l
84.5454 30.1397 l
84.6161 30.4104 l
84.6868 30.6808 l
84.7575 30.9509 l
84.8282 31.2207 l
84.8989 31.4902 l
84.9696 31.7594 l
85.1111 32.2967 l
85.1818 32.5648 l
85.2525 32.8327 l
85.3232 33.1003 l
85.3939 33.3675 l
85.4646 33.6344 l
85.5353 33.9010 l
85.6060 34.1673 l
85.6767 34.4332 l
85.7474 34.6989 l
85.8888 35.2292 l
85.9595 35.4939 l
86.0302 35.7583 l
86.1010 36.0224 l
86.1717 36.2862 l
86.2424 36.5497 l
86.3131 36.8129 l
86.3838 37.0757 l
86.4545 37.3382 l
86.5252 37.6005 l
86.5959 37.8624 l
86.6666 38.1240 l
86.7373 38.3853 l
86.8080 38.6463 l
86.8787 38.9071 l
86.9494 39.1675 l
87.0202 39.4276 l
87.0909 39.6874 l
87.1616 39.9469 l
87.2323 40.2061 l
87.3030 40.4650 l
87.3737 40.7236 l
87.4444 40.9819 l
87.5858 41.4975 l
87.6565 41.7549 l
87.7272 42.0120 l
87.7979 42.2688 l
87.9393 42.7816 l
88.0100 43.0375 l
88.0808 43.2931 l
88.1515 43.5484 l
88.2222 43.8035 l
88.2929 44.0582 l
88.3636 44.3127 l
88.4343 44.5668 l
88.5050 44.8207 l
88.5757 45.0743 l
88.6464 45.3275 l
88.7171 45.5805 l
88.7878 45.8332 l
88.9292 46.3378 l
89.0706 46.8412 l
89.1414 47.0925 l
89.2121 47.3435 l
89.2828 47.5942 l
89.4242 48.0947 l
89.5656 48.5941 l
89.6363 48.8434 l
89.7070 49.0924 l
89.7777 49.3411 l
89.8484 49.5896 l
89.9191 49.8377 l
89.9898 50.0856 l
90.0605 50.3332 l
90.1313 50.5805 l
90.2020 50.8275 l
90.3434 51.3208 l
90.4848 51.8129 l
90.5555 52.0586 l
90.6262 52.3039 l
90.7676 52.7939 l
90.8383 53.0384 l
90.9090 53.2827 l
91.0504 53.7705 l
91.1919 54.2572 l
91.2626 54.5001 l
91.3333 54.7427 l
91.4040 54.9851 l
91.4747 55.2272 l
91.5454 55.4691 l
91.6161 55.7106 l
91.6868 55.9520 l
91.7575 56.1930 l
91.8989 56.6743 l
92.0403 57.1545 l
92.1111 57.3942 l
92.2525 57.8729 l
92.3232 58.1118 l
92.3939 58.3504 l
92.4646 58.5889 l
92.5353 58.8270 l
92.6060 59.0648 l
92.6767 59.3024 l
92.7474 59.5398 l
92.8181 59.7769 l
92.8888 60.0137 l
93.0302 60.4866 l
93.1010 60.7227 l
93.1717 60.9585 l
93.2424 61.1940 l
93.3131 61.4293 l
93.3838 61.6643 l
93.4545 61.8991 l
93.5252 62.1336 l
93.5959 62.3679 l
93.7373 62.8356 l
93.8080 63.0692 l
93.8787 63.3024 l
93.9494 63.5354 l
94.0201 63.7681 l
94.1616 64.2329 l
94.3030 64.6966 l
94.3737 64.9281 l
94.4444 65.1593 l
94.5858 65.6211 l
94.6565 65.8516 l
94.7979 66.3118 l
94.9393 66.7711 l
95.0100 67.0003 l
95.0808 67.2293 l
95.1515 67.4581 l
95.2929 67.9149 l
95.3636 68.1430 l
95.4343 68.3707 l
95.5050 68.5983 l
95.5757 68.8256 l
95.7171 69.2795 l
95.8585 69.7324 l
95.9999 70.1844 l
96.0706 70.4100 l
96.2121 70.8605 l
96.3535 71.3101 l
96.4949 71.7587 l
96.6363 72.2064 l
96.7070 72.4299 l
96.8484 72.8761 l
96.9898 73.3215 l
97.1313 73.7658 l
97.2727 74.2093 l
97.3434 74.4306 l
97.4141 74.6518 l
97.5555 75.0934 l
97.6969 75.5341 l
97.7676 75.7541 l
97.8383 75.9739 l
97.9797 76.4127 l
98.1212 76.8506 l
98.2626 77.2876 l
98.4040 77.7238 l
98.4747 77.9415 l
98.6161 78.3762 l
98.6868 78.5933 l
98.8282 79.0267 l
98.9696 79.4592 l
99.0403 79.6752 l
99.1818 80.1063 l
99.3232 80.5366 l
99.4646 80.9660 l
99.5353 81.1804 l
99.6767 81.6085 l
99.7474 81.8222 l
99.8888 82.2490 l
100.030 82.6749 l
100.171 83.1000 l
100.313 83.5241 l
100.383 83.7359 l
100.525 84.1588 l
100.595 84.3699 l
100.666 84.5808 l
100.808 85.0020 l
100.878 85.2122 l
100.949 85.4223 l
101.020 85.6321 l
101.090 85.8418 l
101.161 86.0512 l
101.303 86.4694 l
101.444 86.8867 l
101.515 87.0951 l
101.656 87.5112 l
101.727 87.7189 l
101.868 88.1337 l
102.010 88.5477 l
102.080 88.7544 l
102.222 89.1672 l
102.363 89.5792 l
102.434 89.7848 l
102.575 90.1955 l
102.646 90.4006 l
102.787 90.8100 l
102.929 91.2187 l
103.000 91.4227 l
103.070 91.6266 l
103.212 92.0336 l
103.282 92.2369 l
103.353 92.4399 l
103.424 92.6427 l
103.565 93.0477 l
103.707 93.4520 l
103.777 93.6538 l
103.919 94.0568 l
103.989 94.2580 l
104.131 94.6599 l
104.272 95.0610 l
104.343 95.2612 l
104.414 95.4612 l
104.555 95.8607 l
104.697 96.2594 l
104.767 96.4585 l
104.909 96.8560 l
104.979 97.0545 l
105.121 97.4509 l
105.262 97.8465 l
105.404 98.2413 l
105.545 98.6354 l
105.686 99.0287 l
105.828 99.4213 l
105.899 99.6173 l
106.040 100.008 l
106.111 100.204 l
106.252 100.594 l
106.393 100.983 l
106.535 101.372 l
106.606 101.566 l
106.747 101.954 l
106.888 102.341 l
106.959 102.534 l
107.101 102.920 l
107.242 103.305 l
107.383 103.689 l
107.454 103.881 l
107.595 104.264 l
107.737 104.647 l
107.878 105.029 l
107.949 105.219 l
108.090 105.600 l
108.232 105.980 l
108.303 106.170 l
108.444 106.548 l
108.585 106.927 l
108.656 107.115 l
108.798 107.493 l
108.868 107.681 l
109.010 108.057 l
109.080 108.245 l
109.151 108.432 l
109.292 108.807 l
109.363 108.994 l
109.505 109.367 l
109.646 109.740 l
109.787 110.112 l
109.858 110.298 l
110.000 110.669 l
110.141 111.040 l
110.282 111.409 l
110.424 111.778 l
110.565 112.147 l
110.707 112.515 l
110.777 112.698 l
110.919 113.065 l
110.989 113.248 l
111.131 113.613 l
111.272 113.978 l
111.343 114.161 l
111.484 114.525 l
111.555 114.706 l
111.697 115.069 l
111.767 115.250 l
111.909 115.612 l
112.050 115.974 l
112.121 116.154 l
112.262 116.514 l
112.333 116.694 l
112.474 117.054 l
112.616 117.412 l
112.757 117.770 l
112.899 118.127 l
113.040 118.484 l
113.181 118.840 l
113.252 119.018 l
113.393 119.373 l
113.535 119.727 l
113.606 119.904 l
113.747 120.258 l
113.818 120.434 l
113.959 120.787 l
114.101 121.139 l
114.242 121.490 l
114.313 121.665 l
114.454 122.015 l
114.525 122.190 l
114.666 122.540 l
114.808 122.888 l
114.949 123.236 l
115.090 123.584 l
115.232 123.931 l
115.373 124.277 l
115.515 124.623 l
115.656 124.968 l
115.798 125.312 l
115.868 125.484 l
116.010 125.827 l
116.151 126.170 l
116.222 126.341 l
116.363 126.683 l
116.434 126.854 l
116.505 127.025 l
116.646 127.365 l
116.717 127.535 l
116.858 127.875 l
117.000 128.214 l
117.070 128.384 l
117.212 128.722 l
117.282 128.891 l
117.424 129.229 l
117.565 129.565 l
117.707 129.902 l
117.848 130.237 l
117.989 130.572 l
118.131 130.907 l
118.202 131.074 l
118.343 131.407 l
118.414 131.574 l
118.626 132.073 l
118.767 132.405 l
118.909 132.736 l
119.050 133.067 l
119.191 133.397 l
119.333 133.726 l
119.474 134.055 l
119.616 134.384 l
119.757 134.712 l
119.899 135.039 l
120.040 135.366 l
120.181 135.692 l
120.323 136.017 l
120.464 136.343 l
120.535 136.505 l
120.676 136.829 l
120.818 137.153 l
120.959 137.476 l
121.101 137.798 l
121.242 138.120 l
121.383 138.442 l
121.525 138.763 l
121.666 139.083 l
121.808 139.403 l
121.949 139.722 l
122.090 140.041 l
122.232 140.359 l
122.303 140.518 l
122.444 140.835 l
122.585 141.152 l
122.656 141.310 l
122.798 141.626 l
122.939 141.942 l
123.080 142.257 l
123.222 142.571 l
123.363 142.885 l
123.434 143.042 l
123.575 143.355 l
123.717 143.668 l
123.858 143.980 l
124.070 144.447 l
124.282 144.913 l
124.424 145.223 l
124.565 145.533 l
124.707 145.841 l
124.848 146.150 l
124.989 146.458 l
125.131 146.765 l
125.272 147.072 l
125.484 147.532 l
125.697 147.990 l
125.838 148.295 l
125.909 148.447 l
126.050 148.751 l
126.191 149.055 l
126.333 149.358 l
126.474 149.661 l
126.616 149.963 l
126.757 150.265 l
126.899 150.566 l
127.040 150.867 l
127.181 151.167 l
127.323 151.466 l
127.464 151.766 l
127.606 152.064 l
127.747 152.363 l
127.888 152.660 l
128.030 152.958 l
128.171 153.254 l
128.242 153.403 l
128.383 153.699 l
128.525 153.994 l
128.595 154.142 l
128.808 154.584 l
128.878 154.731 l
129.090 155.172 l
129.232 155.465 l
129.373 155.758 l
129.515 156.050 l
129.656 156.342 l
129.798 156.633 l
129.939 156.924 l
130.080 157.215 l
130.222 157.505 l
130.434 157.939 l
130.575 158.227 l
130.787 158.660 l
131.000 159.091 l
131.070 159.235 l
131.212 159.521 l
131.353 159.808 l
131.494 160.093 l
131.636 160.379 l
131.848 160.806 l
131.989 161.090 l
132.131 161.374 l
132.272 161.657 l
132.414 161.940 l
132.555 162.223 l
132.696 162.505 l
132.838 162.786 l
133.050 163.208 l
133.191 163.488 l
133.262 163.628 l
133.474 164.048 l
133.616 164.327 l
133.757 164.606 l
133.828 164.745 l
133.969 165.023 l
134.181 165.439 l
134.323 165.716 l
134.464 165.993 l
134.676 166.407 l
134.888 166.820 l
135.030 167.095 l
135.171 167.369 l
135.313 167.643 l
135.454 167.917 l
135.595 168.190 l
135.737 168.463 l
135.878 168.735 l
136.020 169.007 l
136.161 169.279 l
136.303 169.550 l
136.444 169.820 l
136.585 170.090 l
136.798 170.495 l
136.939 170.764 l
137.151 171.167 l
137.292 171.436 l
137.434 171.703 l
137.646 172.104 l
137.787 172.371 l
138.000 172.770 l
138.141 173.036 l
138.282 173.302 l
138.424 173.567 l
138.565 173.831 l
138.707 174.095 l
138.848 174.359 l
138.989 174.622 l
139.131 174.885 l
139.272 175.148 l
139.414 175.410 l
139.626 175.803 l
139.767 176.064 l
139.979 176.455 l
140.121 176.715 l
140.262 176.975 l
140.404 177.234 l
140.545 177.493 l
140.686 177.752 l
140.828 178.010 l
140.969 178.268 l
141.111 178.526 l
141.323 178.911 l
141.464 179.168 l
141.606 179.424 l
141.747 179.680 l
141.888 179.935 l
142.030 180.191 l
142.242 180.572 l
142.383 180.827 l
142.525 181.080 l
142.666 181.334 l
142.808 181.587 l
143.020 181.965 l
143.161 182.218 l
143.373 182.595 l
143.585 182.972 l
143.798 183.347 l
143.939 183.597 l
144.151 183.972 l
144.292 184.221 l
144.434 184.470 l
144.575 184.718 l
144.858 185.214 l
145.070 185.585 l
145.212 185.832 l
145.424 186.201 l
145.494 186.324 l
145.707 186.693 l
145.919 187.060 l
146.131 187.427 l
146.272 187.671 l
146.414 187.915 l
146.626 188.280 l
146.838 188.645 l
146.979 188.887 l
147.121 189.129 l
147.191 189.250 l
147.404 189.612 l
147.474 189.733 l
147.616 189.974 l
147.757 190.214 l
147.969 190.574 l
148.181 190.934 l
148.323 191.173 l
148.464 191.412 l
148.747 191.888 l
148.888 192.126 l
149.101 192.482 l
149.242 192.719 l
149.383 192.956 l
149.525 193.192 l
149.666 193.428 l
149.808 193.664 l
149.949 193.899 l
150.161 194.251 l
150.373 194.603 l
150.585 194.954 l
150.797 195.304 l
151.010 195.653 l
151.080 195.770 l
151.292 196.118 l
151.434 196.350 l
151.575 196.582 l
151.646 196.697 l
151.787 196.928 l
151.929 197.159 l
152.070 197.389 l
152.212 197.620 l
152.353 197.849 l
152.565 198.193 l
152.777 198.537 l
152.919 198.765 l
153.060 198.994 l
153.202 199.222 l
153.484 199.676 l
153.555 199.790 l
153.767 200.130 l
153.979 200.469 l
154.191 200.808 l
154.333 201.033 l
154.474 201.259 l
154.616 201.483 l
154.828 201.820 l
155.040 202.156 l
155.181 202.380 l
155.393 202.714 l
155.606 203.048 l
155.747 203.271 l
155.818 203.382 l
156.030 203.715 l
156.171 203.936 l
156.383 204.268 l
156.525 204.488 l
156.737 204.819 l
156.878 205.039 l
157.090 205.368 l
157.303 205.697 l
157.444 205.916 l
157.656 206.243 l
157.797 206.462 l
157.939 206.679 l
158.080 206.897 l
158.292 207.222 l
158.363 207.331 l
158.505 207.547 l
158.646 207.764 l
158.858 208.088 l
159.070 208.411 l
159.282 208.734 l
159.424 208.948 l
159.636 209.270 l
159.777 209.484 l
159.989 209.805 l
160.202 210.124 l
160.343 210.337 l
160.555 210.656 l
160.767 210.974 l
160.909 211.186 l
161.121 211.503 l
161.262 211.714 l
161.474 212.030 l
161.545 212.136 l
161.686 212.346 l
161.828 212.556 l
161.969 212.766 l
162.111 212.975 l
162.323 213.289 l
162.464 213.497 l
162.606 213.706 l
162.818 214.018 l
162.959 214.226 l
163.101 214.433 l
163.313 214.744 l
163.454 214.951 l
163.595 215.158 l
163.737 215.364 l
163.949 215.673 l
164.161 215.981 l
164.373 216.289 l
164.585 216.596 l
164.727 216.801 l
164.939 217.107 l
165.151 217.412 l
165.363 217.717 l
165.505 217.920 l
165.717 218.224 l
165.858 218.427 l
166.000 218.629 l
166.212 218.932 l
166.353 219.133 l
166.494 219.334 l
166.636 219.535 l
166.848 219.836 l
166.989 220.036 l
167.131 220.237 l
167.414 220.636 l
167.555 220.835 l
167.696 221.034 l
167.838 221.233 l
167.979 221.432 l
168.191 221.729 l
168.404 222.026 l
168.616 222.322 l
168.757 222.519 l
168.969 222.814 l
169.181 223.109 l
169.323 223.305 l
169.464 223.501 l
169.606 223.697 l
169.818 223.990 l
170.030 224.282 l
170.242 224.574 l
170.454 224.866 l
170.595 225.060 l
170.666 225.157 l
170.878 225.447 l
171.090 225.737 l
171.373 226.122 l
171.585 226.411 l
171.797 226.699 l
171.939 226.890 l
172.151 227.177 l
172.292 227.369 l
172.505 227.655 l
172.787 228.035 l
172.929 228.226 l
173.141 228.510 l
173.353 228.794 l
173.494 228.983 l
173.636 229.172 l
173.848 229.455 l
173.989 229.643 l
174.272 230.019 l
174.555 230.394 l
174.696 230.581 l
174.909 230.862 l
175.121 231.141 l
175.404 231.514 l
175.616 231.792 l
175.828 232.070 l
175.969 232.255 l
176.181 232.533 l
176.393 232.809 l
176.535 232.994 l
176.676 233.178 l
176.888 233.453 l
177.171 233.820 l
177.313 234.003 l
177.525 234.277 l
177.666 234.459 l
177.808 234.641 l
178.020 234.914 l
178.303 235.277 l
178.444 235.459 l
178.656 235.730 l
178.797 235.911 l
178.939 236.091 l
179.222 236.452 l
179.434 236.721 l
179.646 236.990 l
179.717 237.080 l
179.929 237.349 l
180.000 237.438 l
180.141 237.617 l
180.353 237.884 l
180.494 238.062 l
180.707 238.329 l
180.919 238.595 l
181.131 238.861 l
181.343 239.127 l
181.484 239.303 l
181.696 239.568 l
181.909 239.832 l
182.121 240.096 l
182.333 240.359 l
182.616 240.709 l
182.828 240.971 l
183.040 241.233 l
183.252 241.494 l
183.464 241.755 l
183.747 242.102 l
183.888 242.275 l
184.030 242.448 l
184.171 242.621 l
184.383 242.879 l
184.666 243.224 l
184.737 243.310 l
184.949 243.567 l
185.232 243.910 l
185.444 244.166 l
185.656 244.422 l
185.797 244.593 l
186.010 244.848 l
186.151 245.018 l
186.434 245.358 l
186.646 245.612 l
186.787 245.781 l
187.070 246.118 l
187.282 246.371 l
187.424 246.539 l
187.494 246.869 l
187.777 247.168 l
188.060 247.467 l
188.272 247.691 l
188.484 247.915 l
188.696 248.138 l
188.838 248.286 l
188.979 248.435 l
189.191 248.657 l
189.474 248.953 l
189.686 249.175 l
189.899 249.396 l
190.111 249.617 l
190.393 249.911 l
190.676 250.205 l
190.888 250.424 l
191.101 250.644 l
191.313 250.863 l
191.595 251.155 l
191.878 251.446 l
192.020 251.591 l
192.303 251.881 l
192.515 252.098 l
192.727 252.315 l
193.010 252.604 l
193.292 252.892 l
193.575 253.180 l
193.787 253.395 l
193.929 253.539 l
194.212 253.825 l
194.494 254.111 l
194.777 254.396 l
195.060 254.681 l
195.343 254.965 l
195.555 255.178 l
195.838 255.461 l
196.050 255.673 l
196.262 255.884 l
196.545 256.166 l
196.686 256.307 l
196.828 256.448 l
197.111 256.728 l
197.393 257.008 l
197.676 257.288 l
197.818 257.428 l
197.959 257.567 l
198.313 257.915 l
198.595 258.193 l
198.737 258.332 l
199.161 258.747 l
199.373 258.954 l
199.585 259.161 l
199.868 259.437 l
200.151 259.712 l
200.363 259.918 l
200.575 260.123 l
200.929 260.465 l
201.000 260.534 l
201.212 260.738 l
201.494 261.011 l
201.777 261.283 l
202.131 261.622 l
202.272 261.757 l
202.414 261.893 l
202.626 262.095 l
202.909 262.365 l
203.050 262.500 l
203.262 262.702 l
203.545 262.971 l
203.828 263.239 l
204.040 263.440 l
204.252 263.640 l
204.535 263.907 l
204.747 264.107 l
204.959 264.307 l
205.242 264.573 l
205.454 264.772 l
205.595 264.904 l
205.949 265.235 l
206.232 265.499 l
206.444 265.697 l
206.797 266.025 l
206.868 266.091 l
207.151 266.353 l
207.363 266.550 l
207.575 266.746 l
207.858 267.007 l
208.070 267.203 l
208.282 267.398 l
208.494 267.593 l
208.777 267.853 l
208.848 267.918 l
209.060 268.112 l
209.343 268.371 l
209.484 268.500 l
209.767 268.758 l
209.979 268.951 l
210.121 269.080 l
210.333 269.272 l
210.616 269.529 l
210.898 269.785 l
211.111 269.976 l
211.323 270.168 l
211.606 270.423 l
211.959 270.741 l
212.101 270.868 l
212.313 271.058 l
212.595 271.311 l
212.808 271.501 l
212.878 271.564 l
212.949 271.627 l
213.232 271.879 l
213.444 272.068 l
213.727 272.320 l
213.868 272.445 l
214.151 272.696 l
214.434 272.946 l
214.717 273.196 l
214.929 273.383 l
215.141 273.570 l
215.353 273.756 l
215.636 274.005 l
215.848 274.191 l
216.202 274.500 l
216.343 274.624 l
216.696 274.932 l
216.979 275.178 l
217.262 275.424 l
217.616 275.731 l
217.898 275.975 l
218.111 276.159 l
218.252 276.281 l
218.535 276.525 l
218.747 276.707 l
218.888 276.829 l
219.030 276.950 l
219.242 277.132 l
219.525 277.375 l
219.666 277.496 l
219.878 277.677 l
220.020 277.798 l
220.161 277.918 l
220.444 278.159 l
220.797 278.460 l
221.010 278.640 l
221.363 278.939 l
221.434 278.999 l
221.646 279.178 l
221.929 279.417 l
222.212 279.655 l
222.424 279.833 l
222.707 280.071 l
222.989 280.308 l
223.202 280.486 l
223.484 280.722 l
223.838 281.017 l
224.121 281.252 l
224.333 281.429 l
224.616 281.663 l
224.828 281.839 l
225.040 282.015 l
225.323 282.248 l
225.606 282.482 l
225.959 282.773 l
226.242 283.005 l
226.595 283.295 l
226.878 283.526 l
227.161 283.757 l
227.373 283.930 l
227.515 284.046 l
227.797 284.276 l
227.868 284.333 l
227.939 284.391 l
228.222 284.620 l
228.434 284.792 l
228.787 285.078 l
228.858 285.135 l
228.929 285.192 l
229.000 285.250 l
229.353 285.535 l
229.636 285.762 l
229.777 285.876 l
229.989 286.046 l
230.343 286.329 l
230.484 286.443 l
230.696 286.612 l
230.979 286.838 l
231.050 286.894 l
231.121 286.951 l
231.404 287.176 l
231.686 287.401 l
231.969 287.625 l
232.252 287.849 l
232.393 287.961 l
232.464 288.017 l
232.535 288.073 l
232.888 288.352 l
233.171 288.574 l
233.313 288.686 l
233.525 288.852 l
233.808 289.074 l
234.020 289.241 l
234.232 289.407 l
234.444 289.572 l
234.797 289.848 l
235.010 290.013 l
235.363 290.288 l
235.787 290.617 l
236.141 290.891 l
236.424 291.109 l
236.707 291.328 l
236.919 291.491 l
237.131 291.654 l
237.343 291.817 l
237.626 292.034 l
237.696 292.088 l
237.767 292.142 l
238.121 292.413 l
238.404 292.629 l
238.757 292.898 l
238.969 293.059 l
239.252 293.274 l
239.393 293.382 l
239.676 293.596 l
240.101 293.917 l
240.383 294.130 l
240.595 294.290 l
240.949 294.556 l
241.232 294.768 l
241.373 294.874 l
241.656 295.086 l
241.939 295.298 l
242.222 295.509 l
242.575 295.772 l
242.787 295.930 l
243.141 296.193 l
243.424 296.403 l
243.565 296.507 l
243.848 296.716 l
243.919 296.769 l
244.131 296.925 l
244.414 297.134 l
244.696 297.342 l
245.050 297.602 l
245.404 297.861 l
245.616 298.016 l
245.969 298.274 l
246.252 298.481 l
246.676 298.789 l
246.888 298.943 l
247.101 299.097 l
247.242 299.200 l
247.454 299.353 l
247.737 299.558 l
248.090 299.813 l
248.232 299.915 l
248.515 300.119 l
248.797 300.322 l
248.939 300.424 l
249.222 300.626 l
249.505 300.829 l
249.787 301.031 l
249.929 301.132 l
250.282 301.384 l
250.636 301.635 l
250.848 301.786 l
251.131 301.987 l
251.484 302.237 l
251.767 302.437 l
251.979 302.587 l
252.121 302.686 l
252.333 302.836 l
252.545 302.985 l
252.969 303.283 l
253.181 303.432 l
253.252 303.481 l
253.323 303.531 l
253.535 303.679 l
253.606 303.728 l
253.676 303.778 l
253.818 303.877 l
254.101 304.074 l
254.313 304.222 l
254.666 304.467 l
255.020 304.713 l
255.444 305.007 l
255.868 305.300 l
256.080 305.446 l
256.292 305.592 l
256.575 305.787 l
256.646 305.835 l
256.858 305.981 l
257.141 306.175 l
257.353 306.320 l
257.565 306.465 l
257.848 306.658 l
258.131 306.851 l
258.414 307.044 l
258.555 307.140 l
258.838 307.332 l
258.979 307.428 l
259.262 307.620 l
259.545 307.811 l
259.757 307.955 l
260.181 308.241 l
260.393 308.384 l
260.464 308.431 l
260.676 308.574 l
261.101 308.858 l
261.383 309.048 l
261.737 309.284 l
262.090 309.520 l
262.232 309.614 l
262.444 309.756 l
262.515 309.803 l
262.656 309.897 l
262.939 310.085 l
263.080 310.178 l
263.292 310.319 l
263.434 310.413 l
263.505 310.459 l
263.575 310.506 l
263.858 310.693 l
263.999 310.786 l
264.212 310.926 l
264.494 311.113 l
264.636 311.206 l
264.919 311.391 l
264.989 311.438 l
265.060 311.484 l
265.343 311.670 l
265.555 311.808 l
265.767 311.947 l
265.979 312.086 l
266.191 312.224 l
266.545 312.454 l
266.757 312.592 l
267.181 312.868 l
267.323 312.959 l
267.464 313.051 l
267.535 313.097 l
267.818 313.280 l
268.030 313.417 l
268.313 313.599 l
268.737 313.872 l
269.020 314.054 l
269.161 314.145 l
269.373 314.281 l
269.656 314.462 l
269.939 314.643 l
270.292 314.869 l
270.575 315.049 l
270.717 315.139 l
271.141 315.408 l
271.494 315.633 l
271.848 315.857 l
271.919 315.901 l
271.989 315.946 l
272.414 316.214 l
272.696 316.392 l
272.838 316.481 l
272.979 316.570 l
273.191 316.703 l
273.474 316.881 l
273.828 317.102 l
274.111 317.279 l
274.252 317.367 l
274.606 317.588 l
274.818 317.720 l
274.959 317.808 l
275.313 318.028 l
275.666 318.247 l
275.737 318.291 l
275.808 318.335 l
275.878 318.379 l
276.020 318.466 l
276.373 318.685 l
276.656 318.859 l
276.797 318.946 l
277.080 319.120 l
277.222 319.207 l
277.292 319.251 l
277.434 319.338 l
277.858 319.598 l
278.212 319.814 l
278.494 319.987 l
278.777 320.160 l
278.989 320.289 l
279.343 320.504 l
279.555 320.633 l
279.838 320.805 l
279.909 320.848 l
279.979 320.891 l
280.262 321.062 l
280.474 321.190 l
280.616 321.276 l
280.969 321.489 l
281.181 321.617 l
281.252 321.659 l
281.323 321.702 l
281.676 321.914 l
281.818 321.999 l
281.959 322.084 l
282.313 322.296 l
282.383 322.338 l
282.454 322.381 l
282.808 322.592 l
283.161 322.803 l
283.232 322.845 l
283.303 322.887 l
283.585 323.056 l
283.797 323.182 l
284.010 323.308 l
284.292 323.475 l
284.363 323.517 l
284.434 323.559 l
284.717 323.727 l
284.787 323.768 l
284.858 323.810 l
285.212 324.019 l
285.424 324.144 l
285.494 324.186 l
285.565 324.227 l
285.707 324.310 l
285.777 324.352 l
285.989 324.477 l
286.343 324.684 l
286.555 324.809 l
286.626 324.850 l
286.696 324.891 l
286.909 325.016 l
287.191 325.181 l
287.616 325.428 l
287.969 325.634 l
288.323 325.840 l
288.676 326.045 l
288.818 326.127 l
289.242 326.372 l
289.454 326.494 l
289.595 326.576 l
289.878 326.739 l
290.090 326.861 l
290.161 326.902 l
290.232 326.943 l
290.303 326.983 l
290.373 327.024 l
290.515 327.105 l
290.868 327.308 l
290.939 327.348 l
291.010 327.389 l
291.434 327.632 l
291.646 327.753 l
291.858 327.874 l
291.929 327.914 l
291.999 327.954 l
292.353 328.156 l
292.707 328.357 l
293.060 328.557 l
293.272 328.677 l
293.696 328.917 l
293.909 329.037 l
294.050 329.117 l
294.333 329.276 l
294.616 329.436 l
294.686 329.475 l
294.757 329.515 l
294.969 329.634 l
295.252 329.793 l
295.535 329.951 l
295.676 330.030 l
295.818 330.110 l
295.888 330.149 l
295.959 330.189 l
296.313 330.386 l
296.454 330.465 l
296.525 330.504 l
296.666 330.583 l
297.020 330.780 l
297.232 330.897 l
297.515 331.054 l
297.727 331.172 l
297.868 331.250 l
298.151 331.407 l
298.434 331.563 l
298.575 331.641 l
298.646 331.680 l
298.717 331.719 l
298.858 331.797 l
299.070 331.913 l
299.141 331.952 l
299.212 331.991 l
299.494 332.147 l
299.565 332.185 l
299.636 332.224 l
299.919 332.379 l
300.343 332.611 l
300.626 332.766 l
300.909 332.920 l
301.262 333.113 l
301.616 333.305 l
301.969 333.497 l
302.252 333.650 l
302.535 333.803 l
302.888 333.994 l
303.242 334.185 l
303.666 334.414 l
303.878 334.528 l
304.090 334.642 l
304.161 334.680 l
304.232 334.718 l
304.515 334.869 l
304.585 334.907 l
304.656 334.945 l
304.868 335.058 l
305.222 335.247 l
305.505 335.398 l
305.717 335.511 l
306.070 335.699 l
306.353 335.850 l
306.636 336.000 l
306.989 336.187 l
307.131 336.262 l
307.626 336.523 l
308.050 336.747 l
308.333 336.896 l
308.474 336.970 l
308.545 337.007 l
308.616 337.044 l
308.898 337.193 l
309.111 337.304 l
309.181 337.341 l
309.252 337.378 l
309.535 337.526 l
309.959 337.748 l
310.313 337.932 l
310.737 338.153 l
311.161 338.373 l
311.232 338.410 l
311.585 338.593 l
312.010 338.812 l
312.151 338.885 l
312.434 339.031 l
312.717 339.177 l
313.070 339.359 l
313.282 339.468 l
313.353 339.504 l
313.424 339.540 l
313.777 339.722 l
314.060 339.867 l
314.414 340.047 l
314.838 340.264 l
315.121 340.408 l
315.545 340.624 l
315.898 340.803 l
316.181 340.947 l
316.252 340.982 l
316.393 341.054 l
316.676 341.197 l
316.818 341.268 l
317.030 341.376 l
317.313 341.518 l
317.454 341.589 l
317.525 341.625 l
317.595 341.661 l
317.666 341.696 l
317.737 341.732 l
317.808 341.767 l
318.090 341.909 l
318.161 341.945 l
318.232 341.980 l
318.444 342.087 l
318.515 342.122 l
318.727 342.228 l
318.868 342.299 l
319.222 342.476 l
319.505 342.617 l
319.929 342.828 l
320.282 343.004 l
320.636 343.180 l
320.919 343.320 l
321.131 343.425 l
321.555 343.635 l
321.767 343.739 l
321.838 343.774 l
321.909 343.809 l
322.333 344.018 l
322.616 344.157 l
322.969 344.331 l
323.181 344.435 l
323.252 344.470 l
323.323 344.504 l
323.393 344.539 l
323.464 344.574 l
323.959 344.816 l
324.101 344.885 l
324.171 344.919 l
324.454 345.057 l
324.737 345.195 l
324.949 345.298 l
325.302 345.470 l
325.656 345.641 l
325.939 345.778 l
326.363 345.984 l
326.434 346.018 l
326.505 346.052 l
326.787 346.188 l
327.141 346.359 l
327.353 346.461 l
327.636 346.597 l
328.060 346.800 l
328.484 347.003 l
328.838 347.172 l
329.050 347.274 l
329.191 347.341 l
329.545 347.510 l
329.828 347.644 l
329.969 347.711 l
330.040 347.745 l
330.535 347.980 l
331.030 348.214 l
331.525 348.448 l
331.949 348.648 l
332.302 348.814 l
332.656 348.981 l
333.080 349.180 l
333.222 349.246 l
333.292 349.279 l
333.363 349.312 l
333.646 349.444 l
333.999 349.609 l
334.212 349.708 l
334.494 349.840 l
334.636 349.906 l
334.848 350.004 l
335.060 350.103 l
335.272 350.202 l
335.767 350.431 l
336.191 350.627 l
336.616 350.823 l
336.969 350.986 l
337.181 351.083 l
337.464 351.213 l
337.888 351.408 l
338.030 351.473 l
338.525 351.700 l
338.949 351.893 l
339.161 351.990 l
339.232 352.022 l
339.444 352.119 l
339.727 352.248 l
340.010 352.376 l
340.434 352.569 l
340.646 352.665 l
340.717 352.697 l
340.787 352.729 l
341.141 352.889 l
341.424 353.017 l
341.636 353.112 l
341.989 353.272 l
342.343 353.431 l
342.696 353.589 l
342.909 353.685 l
343.191 353.811 l
343.333 353.875 l
343.545 353.970 l
343.686 354.033 l
343.757 354.064 l
343.828 354.096 l
343.898 354.128 l
344.252 354.285 l
344.464 354.380 l
344.747 354.506 l
345.030 354.631 l
345.100 354.663 l
345.171 354.694 l
345.595 354.882 l
345.737 354.945 l
346.090 355.101 l
346.444 355.258 l
346.515 355.289 l
346.585 355.320 l
346.868 355.445 l
346.939 355.476 l
347.010 355.507 l
347.151 355.569 l
347.363 355.663 l
347.858 355.880 l
348.282 356.066 l
348.494 356.159 l
348.777 356.283 l
349.201 356.468 l
349.767 356.714 l
349.909 356.776 l
349.979 356.807 l
350.050 356.837 l
350.121 356.868 l
350.262 356.929 l
350.616 357.083 l
350.898 357.205 l
350.969 357.236 l
351.040 357.267 l
351.323 357.389 l
351.464 357.450 l
351.747 357.572 l
352.171 357.755 l
352.242 357.785 l
352.313 357.816 l
352.454 357.877 l
352.737 357.998 l
352.808 358.029 l
352.878 358.059 l
353.161 358.180 l
353.302 358.241 l
353.373 358.271 l
353.656 358.392 l
353.727 358.423 l
353.797 358.453 l
354.151 358.604 l
354.292 358.664 l
354.646 358.815 l
354.717 358.845 l
354.787 358.875 l
355.070 358.996 l
355.424 359.146 l
355.494 359.176 l
355.565 359.206 l
355.707 359.266 l
355.777 359.296 l
355.848 359.326 l
356.201 359.476 l
356.484 359.595 l
356.767 359.715 l
357.050 359.834 l
357.191 359.894 l
357.404 359.983 l
357.686 360.102 l
357.969 360.221 l
358.040 360.251 l
358.181 360.310 l
358.393 360.399 l
358.535 360.458 l
358.606 360.488 l
358.676 360.518 l
358.747 360.547 l
358.818 360.577 l
359.100 360.695 l
359.383 360.813 l
359.595 360.902 l
359.808 360.990 l
360.090 361.108 l
360.302 361.196 l
360.444 361.255 l
360.515 361.285 l
360.585 361.314 l
360.656 361.343 l
361.010 361.490 l
361.080 361.519 l
361.151 361.549 l
361.222 361.578 l
361.292 361.607 l
361.434 361.666 l
361.505 361.695 l
361.646 361.753 l
361.717 361.783 l
361.787 361.812 l
361.858 361.841 l
361.929 361.870 l
362.212 361.987 l
362.282 362.016 l
362.353 362.045 l
362.636 362.162 l
362.989 362.308 l
363.343 362.453 l
363.555 362.540 l
363.909 362.685 l
363.979 362.714 l
364.121 362.772 l
364.262 362.830 l
364.404 362.887 l
364.474 362.916 l
364.898 363.089 l
364.969 363.118 l
365.252 363.234 l
365.535 363.349 l
365.606 363.377 l
365.676 363.406 l
366.030 363.550 l
366.383 363.693 l
366.454 363.722 l
366.525 363.751 l
366.878 363.894 l
367.232 364.037 l
367.373 364.094 l
367.444 364.122 l
367.515 364.151 l
367.585 364.179 l
367.868 364.293 l
368.151 364.407 l
368.363 364.493 l
368.434 364.521 l
368.505 364.549 l
368.787 364.663 l
369.141 364.805 l
369.494 364.946 l
369.565 364.975 l
369.707 365.031 l
370.201 365.229 l
370.484 365.342 l
370.555 365.370 l
370.626 365.398 l
370.696 365.426 l
370.767 365.454 l
370.909 365.511 l
370.979 365.539 l
371.050 365.567 l
371.191 365.623 l
371.616 365.792 l
371.686 365.820 l
371.828 365.876 l
372.252 366.044 l
372.606 366.183 l
372.747 366.239 l
372.818 366.267 l
372.888 366.295 l
372.959 366.323 l
373.100 366.379 l
373.171 366.407 l
373.313 366.462 l
373.666 366.601 l
373.878 366.685 l
374.373 366.879 l
374.797 367.045 l
374.868 367.073 l
375.151 367.184 l
375.222 367.211 l
375.292 367.239 l
375.363 367.267 l
375.434 367.294 l
375.575 367.349 l
375.717 367.405 l
375.787 367.432 l
375.858 367.460 l
375.929 367.487 l
375.999 367.515 l
376.070 367.542 l
376.282 367.625 l
376.353 367.653 l
376.424 367.680 l
376.494 367.707 l
376.777 367.817 l
377.060 367.927 l
377.131 367.955 l
377.201 367.982 l
377.343 368.037 l
377.696 368.174 l
378.191 368.365 l
378.545 368.501 l
378.616 368.529 l
378.686 368.556 l
378.828 368.610 l
378.898 368.638 l
378.969 368.665 l
379.111 368.719 l
379.252 368.774 l
379.676 368.937 l
379.747 368.964 l
379.818 368.991 l
380.171 369.126 l
380.383 369.208 l
380.454 369.235 l
380.525 369.262 l
380.808 369.370 l
380.878 369.397 l
380.949 369.424 l
381.020 369.451 l
381.232 369.532 l
381.302 369.559 l
381.373 369.586 l
381.444 369.613 l
381.585 369.666 l
381.797 369.747 l
381.939 369.801 l
382.010 369.828 l
382.151 369.882 l
382.222 369.909 l
382.292 369.935 l
382.363 369.962 l
382.434 369.989 l
382.929 370.177 l
383.212 370.284 l
383.565 370.417 l
383.707 370.471 l
383.777 370.498 l
383.848 370.524 l
384.201 370.658 l
384.272 370.684 l
384.414 370.737 l
384.838 370.897 l
385.191 371.030 l
385.616 371.189 l
385.828 371.268 l
385.969 371.321 l
386.040 371.348 l
386.181 371.401 l
386.252 371.427 l
386.323 371.453 l
386.393 371.480 l
386.464 371.506 l
386.535 371.533 l
386.959 371.691 l
387.030 371.717 l
387.100 371.744 l
387.242 371.796 l
387.313 371.823 l
387.525 371.902 l
387.595 371.928 l
387.666 371.954 l
387.737 371.980 l
387.878 372.033 l
388.090 372.112 l
388.515 372.269 l
388.797 372.374 l
388.868 372.400 l
388.939 372.426 l
389.080 372.478 l
389.151 372.504 l
389.222 372.530 l
389.363 372.583 l
389.504 372.635 l
389.575 372.661 l
389.646 372.687 l
389.787 372.739 l
389.858 372.765 l
389.929 372.791 l
390.141 372.869 l
390.212 372.895 l
390.282 372.921 l
390.424 372.973 l
390.777 373.103 l
390.848 373.129 l
390.919 373.155 l
391.060 373.207 l
391.131 373.233 l
391.555 373.388 l
391.626 373.414 l
391.696 373.440 l
391.909 373.518 l
391.979 373.543 l
392.050 373.569 l
392.121 373.595 l
392.191 373.621 l
392.333 373.672 l
392.616 373.776 l
392.686 373.801 l
392.757 373.827 l
392.828 373.853 l
392.898 373.879 l
393.181 373.981 l
393.464 374.084 l
393.747 374.187 l
394.030 374.289 l
394.100 374.315 l
394.171 374.341 l
394.242 374.366 l
394.313 374.392 l
394.383 374.417 l
394.454 374.443 l
394.525 374.469 l
394.808 374.571 l
395.232 374.724 l
395.373 374.775 l
395.444 374.801 l
395.727 374.902 l
395.797 374.928 l
395.868 374.953 l
395.939 374.979 l
396.010 375.004 l
396.151 375.055 l
396.504 375.182 l
396.929 375.334 l
396.999 375.359 l
397.141 375.410 l
397.494 375.536 l
397.919 375.688 l
397.989 375.713 l
398.060 375.738 l
398.131 375.764 l
398.201 375.789 l
398.272 375.814 l
398.484 375.890 l
398.555 375.915 l
398.979 376.066 l
399.262 376.166 l
399.686 376.317 l
399.898 376.392 l
400.323 376.542 l
400.464 376.592 l
400.535 376.617 l
400.818 376.717 l
400.959 376.767 l
401.030 376.792 l
401.100 376.817 l
401.313 376.891 l
401.525 376.966 l
401.595 376.991 l
401.737 377.041 l
401.808 377.065 l
401.878 377.090 l
402.020 377.140 l
402.090 377.165 l
402.232 377.214 l
402.444 377.289 l
402.727 377.388 l
402.797 377.413 l
402.868 377.438 l
402.939 377.462 l
403.010 377.487 l
403.151 377.537 l
403.292 377.586 l
403.363 377.611 l
403.646 377.709 l
403.929 377.808 l
403.999 377.833 l
404.070 377.857 l
404.353 377.956 l
404.707 378.079 l
404.989 378.177 l
405.343 378.300 l
405.626 378.398 l
405.979 378.520 l
406.262 378.618 l
406.403 378.667 l
406.474 378.691 l
406.828 378.813 l
406.898 378.838 l
406.969 378.862 l
407.040 378.886 l
407.111 378.911 l
407.181 378.935 l
407.252 378.959 l
407.323 378.984 l
407.393 379.008 l
407.535 379.057 l
407.606 379.081 l
407.676 379.105 l
407.959 379.202 l
408.242 379.300 l
408.383 379.348 l
408.454 379.372 l
408.808 379.493 l
408.878 379.517 l
408.949 379.542 l
409.090 379.590 l
409.232 379.638 l
409.585 379.759 l
409.939 379.880 l
410.222 379.976 l
410.575 380.096 l
410.717 380.144 l
410.787 380.168 l
410.929 380.216 l
411.070 380.264 l
411.212 380.312 l
411.282 380.336 l
411.353 380.360 l
411.494 380.408 l
411.565 380.432 l
411.848 380.528 l
411.919 380.552 l
411.989 380.576 l
412.343 380.695 l
412.484 380.743 l
412.555 380.767 l
412.626 380.790 l
412.767 380.838 l
412.838 380.862 l
413.050 380.933 l
413.191 380.981 l
413.333 381.029 l
413.404 381.052 l
413.616 381.124 l
413.686 381.147 l
413.757 381.171 l
413.828 381.195 l
413.898 381.219 l
413.969 381.242 l
414.252 381.337 l
414.323 381.361 l
414.393 381.385 l
414.535 381.432 l
414.959 381.574 l
415.313 381.692 l
415.454 381.739 l
415.525 381.763 l
415.595 381.786 l
415.666 381.810 l
415.737 381.834 l
415.808 381.857 l
415.878 381.881 l
416.020 381.928 l
416.302 382.022 l
416.373 382.045 l
416.444 382.069 l
416.585 382.116 l
416.656 382.139 l
416.797 382.186 l
417.010 382.257 l
417.080 382.280 l
417.151 382.304 l
417.292 382.351 l
417.363 382.374 l
417.434 382.397 l
417.646 382.468 l
417.717 382.491 l
417.787 382.514 l
418.070 382.608 l
418.141 382.631 l
418.212 382.655 l
418.777 382.841 l
418.919 382.888 l
418.989 382.911 l
419.060 382.934 l
419.131 382.958 l
419.201 382.981 l
419.272 383.004 l
419.484 383.074 l
419.838 383.190 l
419.909 383.213 l
420.191 383.306 l
420.474 383.399 l
420.545 383.422 l
420.616 383.445 l
420.828 383.514 l
420.898 383.537 l
420.969 383.561 l
421.323 383.676 l
421.535 383.745 l
421.888 383.860 l
422.100 383.930 l
422.171 383.952 l
422.383 384.022 l
422.454 384.044 l
422.525 384.067 l
422.595 384.090 l
422.737 384.136 l
422.949 384.205 l
423.090 384.251 l
423.161 384.274 l
423.302 384.320 l
423.373 384.343 l
423.444 384.366 l
423.656 384.434 l
423.727 384.457 l
423.868 384.503 l
424.080 384.572 l
424.151 384.594 l
424.222 384.617 l
424.292 384.640 l
424.504 384.708 l
424.787 384.800 l
424.858 384.822 l
424.929 384.845 l
424.999 384.868 l
425.070 384.891 l
425.212 384.936 l
425.565 385.050 l
425.848 385.141 l
425.919 385.163 l
425.989 385.186 l
426.272 385.277 l
426.626 385.390 l
426.696 385.413 l
426.767 385.435 l
426.909 385.481 l
426.979 385.503 l
427.050 385.526 l
427.404 385.639 l
427.686 385.729 l
427.757 385.751 l
427.828 385.774 l
427.969 385.819 l
428.040 385.841 l
428.181 385.887 l
428.464 385.976 l
428.959 386.134 l
429.171 386.201 l
429.313 386.246 l
429.383 386.268 l
429.454 386.291 l
429.525 386.313 l
429.595 386.335 l
429.666 386.358 l
429.737 386.380 l
429.808 386.403 l
429.878 386.425 l
430.020 386.470 l
430.302 386.559 l
430.444 386.604 l
430.515 386.626 l
430.656 386.671 l
430.797 386.715 l
431.151 386.826 l
431.292 386.871 l
431.363 386.893 l
431.504 386.938 l
431.858 387.049 l
432.141 387.137 l
432.212 387.160 l
432.282 387.182 l
432.565 387.270 l
432.636 387.293 l
432.777 387.337 l
432.848 387.359 l
432.919 387.381 l
433.060 387.425 l
433.272 387.492 l
433.414 387.536 l
433.484 387.558 l
433.626 387.602 l
433.696 387.624 l
433.767 387.646 l
433.838 387.668 l
433.909 387.690 l
434.121 387.756 l
434.474 387.866 l
434.545 387.888 l
434.686 387.932 l
434.969 388.020 l
435.040 388.042 l
435.111 388.064 l
435.181 388.086 l
435.323 388.130 l
435.606 388.217 l
435.747 388.261 l
435.818 388.283 l
435.888 388.305 l
436.030 388.349 l
436.313 388.436 l
436.383 388.458 l
436.454 388.480 l
436.737 388.567 l
436.808 388.589 l
436.878 388.611 l
437.302 388.741 l
437.444 388.785 l
437.515 388.807 l
437.656 388.850 l
437.868 388.915 l
437.939 388.937 l
438.010 388.959 l
438.363 389.067 l
438.787 389.197 l
439.070 389.284 l
439.141 389.305 l
439.212 389.327 l
439.494 389.413 l
439.565 389.435 l
439.636 389.457 l
439.989 389.564 l
440.272 389.651 l
440.414 389.694 l
440.484 389.715 l
440.626 389.758 l
440.696 389.780 l
440.767 389.801 l
441.191 389.930 l
441.474 390.016 l
441.616 390.059 l
441.757 390.102 l
441.828 390.123 l
441.898 390.145 l
441.969 390.166 l
442.252 390.252 l
442.393 390.294 l
442.464 390.316 l
442.606 390.358 l
442.676 390.380 l
442.747 390.401 l
443.100 390.508 l
443.171 390.529 l
443.242 390.550 l
443.383 390.593 l
443.454 390.614 l
443.525 390.636 l
443.737 390.699 l
443.808 390.721 l
443.949 390.763 l
444.020 390.784 l
444.232 390.848 l
444.302 390.869 l
444.373 390.891 l
444.656 390.975 l
444.727 390.997 l
444.797 391.018 l
445.080 391.102 l
445.151 391.124 l
445.222 391.145 l
445.434 391.208 l
445.505 391.229 l
445.575 391.251 l
445.929 391.356 l
446.070 391.398 l
446.141 391.419 l
446.212 391.440 l
446.353 391.483 l
446.848 391.630 l
447.131 391.714 l
447.201 391.735 l
447.272 391.756 l
447.484 391.819 l
447.555 391.840 l
447.626 391.861 l
447.979 391.966 l
448.403 392.092 l
448.757 392.196 l
448.828 392.217 l
448.898 392.238 l
449.181 392.321 l
449.323 392.363 l
449.393 392.384 l
449.464 392.405 l
449.535 392.426 l
449.606 392.446 l
449.676 392.467 l
449.747 392.488 l
450.030 392.571 l
450.171 392.613 l
450.242 392.634 l
450.313 392.654 l
450.383 392.675 l
450.525 392.717 l
450.808 392.800 l
450.878 392.821 l
450.949 392.841 l
451.302 392.945 l
451.727 393.069 l
452.151 393.193 l
452.575 393.317 l
452.999 393.440 l
453.353 393.543 l
453.424 393.564 l
453.494 393.584 l
453.777 393.666 l
453.848 393.687 l
453.919 393.707 l
454.201 393.790 l
454.343 393.830 l
454.484 393.871 l
454.626 393.912 l
454.696 393.933 l
454.767 393.953 l
455.050 394.035 l
455.121 394.056 l
455.191 394.076 l
455.403 394.137 l
455.474 394.158 l
455.616 394.198 l
455.757 394.239 l
455.969 394.300 l
456.464 394.443 l
456.888 394.565 l
457.171 394.646 l
457.242 394.666 l
457.313 394.687 l
457.595 394.768 l
457.666 394.788 l
457.808 394.828 l
458.020 394.889 l
458.090 394.909 l
458.161 394.929 l
458.585 395.051 l
459.010 395.172 l
459.434 395.293 l
459.575 395.333 l
459.646 395.353 l
459.717 395.373 l
459.787 395.393 l
459.858 395.413 l
459.929 395.433 l
459.999 395.453 l
460.212 395.514 l
460.282 395.534 l
460.424 395.574 l
460.565 395.614 l
460.636 395.634 l
460.777 395.674 l
461.201 395.794 l
461.343 395.834 l
461.414 395.854 l
461.484 395.874 l
461.626 395.914 l
461.696 395.934 l
461.767 395.954 l
461.979 396.014 l
462.050 396.034 l
462.121 396.054 l
462.262 396.094 l
462.333 396.114 l
462.403 396.134 l
462.545 396.173 l
462.969 396.293 l
463.111 396.333 l
463.181 396.352 l
463.252 396.372 l
463.323 396.392 l
463.818 396.531 l
463.888 396.551 l
463.959 396.571 l
464.242 396.650 l
464.313 396.670 l
464.383 396.690 l
464.737 396.788 l
464.808 396.808 l
464.878 396.828 l
464.949 396.848 l
465.020 396.867 l
465.090 396.887 l
465.232 396.927 l
465.444 396.986 l
465.515 397.006 l
465.585 397.025 l
465.656 397.045 l
465.727 397.065 l
465.797 397.084 l
466.010 397.143 l
466.080 397.163 l
466.151 397.183 l
466.222 397.202 l
466.292 397.222 l
466.434 397.261 l
466.504 397.281 l
466.575 397.301 l
466.646 397.320 l
466.717 397.340 l
466.858 397.379 l
466.929 397.399 l
467.070 397.438 l
467.494 397.556 l
467.919 397.673 l
467.989 397.692 l
468.060 397.712 l
468.272 397.771 l
468.343 397.790 l
468.555 397.849 l
468.767 397.907 l
468.909 397.946 l
468.979 397.966 l
469.262 398.043 l
469.333 398.063 l
469.403 398.082 l
469.686 398.160 l
469.757 398.180 l
469.898 398.218 l
470.181 398.296 l
470.323 398.335 l
470.393 398.354 l
470.535 398.393 l
470.605 398.412 l
470.747 398.451 l
471.171 398.567 l
471.313 398.606 l
471.383 398.625 l
471.454 398.644 l
471.525 398.664 l
471.595 398.683 l
471.666 398.702 l
471.808 398.741 l
471.878 398.760 l
471.949 398.780 l
472.090 398.818 l
472.302 398.876 l
472.373 398.895 l
472.585 398.953 l
473.080 399.088 l
473.504 399.203 l
473.999 399.337 l
474.141 399.375 l
474.212 399.394 l
474.282 399.413 l
474.424 399.452 l
474.494 399.471 l
474.565 399.490 l
474.848 399.566 l
474.919 399.585 l
474.989 399.604 l
475.131 399.643 l
475.201 399.662 l
475.272 399.681 l
475.414 399.719 l
475.555 399.757 l
475.696 399.795 l
475.767 399.814 l
475.909 399.852 l
476.333 399.966 l
476.403 399.985 l
476.474 400.004 l
476.757 400.080 l
476.828 400.099 l
476.898 400.118 l
477.323 400.232 l
477.464 400.270 l
477.818 400.364 l
478.242 400.478 l
478.313 400.496 l
478.383 400.515 l
478.666 400.591 l
478.737 400.610 l
478.878 400.647 l
478.949 400.666 l
479.020 400.685 l
479.090 400.704 l
479.232 400.741 l
479.302 400.760 l
479.444 400.798 l
479.656 400.854 l
479.727 400.873 l
479.797 400.892 l
480.222 401.004 l
480.363 401.042 l
480.434 401.061 l
480.504 401.079 l
480.717 401.136 l
480.858 401.173 l
480.929 401.192 l
480.999 401.210 l
481.070 401.229 l
481.141 401.248 l
481.212 401.267 l
481.282 401.285 l
481.353 401.304 l
481.565 401.360 l
481.636 401.379 l
481.707 401.397 l
481.777 401.416 l
481.848 401.435 l
481.919 401.453 l
481.989 401.472 l
482.060 401.491 l
482.201 401.528 l
482.696 401.658 l
482.838 401.695 l
482.909 401.714 l
482.979 401.733 l
483.121 401.770 l
483.191 401.788 l
483.262 401.807 l
483.616 401.900 l
483.686 401.918 l
483.757 401.937 l
484.111 402.029 l
484.181 402.048 l
484.252 402.066 l
484.605 402.159 l
484.676 402.177 l
484.747 402.196 l
485.171 402.306 l
485.242 402.325 l
485.313 402.343 l
485.595 402.417 l
485.666 402.436 l
485.737 402.454 l
486.161 402.564 l
486.656 402.693 l
486.797 402.730 l
486.868 402.748 l
486.939 402.766 l
487.010 402.785 l
487.080 402.803 l
487.222 402.840 l
487.646 402.950 l
487.787 402.986 l
487.858 403.004 l
487.999 403.041 l
488.070 403.059 l
488.212 403.096 l
488.353 403.132 l
488.707 403.224 l
488.848 403.260 l
488.919 403.278 l
488.989 403.296 l
489.060 403.315 l
489.201 403.351 l
489.272 403.369 l
489.343 403.387 l
489.414 403.406 l
489.555 403.442 l
489.626 403.460 l
489.696 403.478 l
489.767 403.497 l
489.838 403.515 l
490.121 403.587 l
490.191 403.606 l
490.333 403.642 l
490.545 403.696 l
490.616 403.714 l
490.757 403.751 l
490.828 403.769 l
490.898 403.787 l
490.969 403.805 l
491.040 403.823 l
491.111 403.841 l
491.252 403.877 l
491.393 403.913 l
491.464 403.931 l
491.605 403.968 l
491.676 403.986 l
491.818 404.022 l
492.242 404.130 l
492.313 404.148 l
492.383 404.166 l
492.737 404.256 l
492.808 404.274 l
492.878 404.292 l
493.302 404.400 l
493.444 404.436 l
493.515 404.454 l
493.585 404.472 l
493.656 404.490 l
493.868 404.543 l
494.010 404.579 l
494.080 404.597 l
494.363 404.669 l
494.434 404.687 l
494.504 404.705 l
494.787 404.776 l
494.929 404.812 l
494.999 404.830 l
495.424 404.937 l
495.989 405.079 l
496.414 405.186 l
496.484 405.204 l
496.555 405.222 l
496.909 405.311 l
496.979 405.328 l
497.050 405.346 l
497.121 405.364 l
497.191 405.382 l
497.262 405.399 l
497.403 405.435 l
497.474 405.452 l
497.545 405.470 l
497.616 405.488 l
497.686 405.506 l
497.969 405.576 l
498.040 405.594 l
498.111 405.612 l
498.323 405.665 l
498.393 405.682 l
498.464 405.700 l
498.605 405.735 l
499.242 405.894 l
499.595 405.982 l
499.666 406.000 l
499.737 406.017 l
499.808 406.035 l
499.878 406.053 l
500.090 406.105 l
500.232 406.140 l
500.373 406.176 l
500.444 406.193 l
500.515 406.211 l
500.585 406.228 l
500.727 406.263 l
500.797 406.281 l
500.868 406.298 l
501.080 406.351 l
501.222 406.386 l
501.292 406.403 l
501.363 406.421 l
501.787 406.526 l
501.858 406.543 l
501.929 406.561 l
502.282 406.648 l
502.353 406.666 l
502.424 406.683 l
502.565 406.718 l
502.636 406.735 l
502.777 406.770 l
502.848 406.788 l
502.989 406.822 l
503.414 406.927 l
503.555 406.961 l
503.626 406.979 l
503.909 407.048 l
503.979 407.066 l
504.050 407.083 l
504.121 407.100 l
504.191 407.118 l
504.333 407.152 l
504.474 407.187 l
504.616 407.222 l
504.686 407.239 l
504.828 407.274 l
504.898 407.291 l
504.969 407.308 l
505.111 407.343 l
505.252 407.377 l
505.323 407.395 l
505.464 407.429 l
505.535 407.446 l
505.676 407.481 l
505.818 407.515 l
505.888 407.533 l
506.100 407.584 l
506.171 407.602 l
506.383 407.653 l
506.595 407.705 l
506.666 407.722 l
506.808 407.757 l
506.949 407.791 l
507.020 407.808 l
507.161 407.843 l
507.232 407.860 l
507.373 407.894 l
507.868 408.014 l
507.939 408.031 l
508.010 408.048 l
508.151 408.083 l
508.363 408.134 l
508.434 408.151 l
508.504 408.168 l
508.575 408.185 l
508.646 408.202 l
508.929 408.271 l
509.070 408.305 l
509.141 408.322 l
509.565 408.424 l
509.706 408.458 l
509.777 408.475 l
509.848 408.493 l
509.919 408.509 l
510.201 408.578 l
510.626 408.680 l
510.696 408.697 l
510.838 408.731 l
511.121 408.798 l
511.191 408.815 l
511.262 408.832 l
511.333 408.849 l
511.403 408.866 l
511.828 408.968 l
511.969 409.002 l
512.040 409.019 l
512.252 409.069 l
512.323 409.086 l
512.464 409.120 l
512.606 409.154 l
512.676 409.171 l
512.888 409.221 l
512.959 409.238 l
513.100 409.272 l
513.525 409.373 l
513.666 409.407 l
513.949 409.474 l
514.020 409.491 l
514.090 409.507 l
514.232 409.541 l
514.656 409.642 l
514.727 409.659 l
514.797 409.675 l
515.010 409.726 l
515.080 409.742 l
515.151 409.759 l
515.292 409.793 l
515.434 409.826 l
515.504 409.843 l
515.646 409.876 l
515.787 409.910 l
515.929 409.943 l
516.141 409.993 l
516.212 410.010 l
516.494 410.077 l
516.989 410.193 l
517.060 410.210 l
517.131 410.227 l
517.201 410.243 l
517.272 410.260 l
517.414 410.293 l
517.626 410.343 l
517.767 410.376 l
517.838 410.393 l
518.050 410.443 l
518.121 410.459 l
518.262 410.492 l
518.403 410.526 l
518.474 410.542 l
518.545 410.559 l
518.616 410.575 l
518.686 410.592 l
518.828 410.625 l
518.898 410.642 l
519.181 410.708 l
519.252 410.724 l
519.393 410.757 l
519.535 410.790 l
519.606 410.807 l
519.888 410.873 l
519.959 410.889 l
520.030 410.906 l
520.100 410.922 l
520.383 410.988 l
520.454 411.005 l
520.525 411.021 l
520.595 411.038 l
520.737 411.071 l
520.949 411.120 l
521.020 411.137 l
521.090 411.153 l
521.232 411.186 l
521.797 411.317 l
522.080 411.383 l
522.151 411.399 l
522.222 411.416 l
522.363 411.448 l
522.504 411.481 l
522.575 411.497 l
522.858 411.563 l
522.929 411.579 l
522.999 411.595 l
523.070 411.612 l
523.141 411.628 l
523.494 411.710 l
523.636 411.742 l
523.706 411.759 l
523.777 411.775 l
523.848 411.791 l
523.919 411.808 l
523.989 411.824 l
524.060 411.840 l
524.131 411.857 l
524.201 411.873 l
524.272 411.889 l
524.414 411.922 l
524.484 411.938 l
524.555 411.954 l
524.767 412.003 l
524.838 412.019 l
524.908 412.035 l
525.333 412.133 l
525.403 412.149 l
525.474 412.165 l
525.969 412.279 l
526.040 412.295 l
526.111 412.311 l
526.535 412.408 l
526.606 412.424 l
526.676 412.440 l
526.818 412.473 l
526.888 412.489 l
527.030 412.521 l
527.100 412.537 l
527.242 412.570 l
527.383 412.602 l
527.454 412.618 l
527.737 412.682 l
527.808 412.699 l
527.878 412.715 l
527.949 412.731 l
528.090 412.763 l
528.232 412.795 l
528.302 412.811 l
528.444 412.843 l
528.515 412.859 l
528.585 412.875 l
529.010 412.972 l
529.080 412.988 l
529.151 413.004 l
529.292 413.036 l
529.363 413.052 l
529.504 413.084 l
529.575 413.100 l
529.717 413.132 l
529.858 413.164 l
529.929 413.180 l
529.999 413.196 l
530.070 413.212 l
530.141 413.228 l
530.212 413.244 l
530.353 413.276 l
530.494 413.308 l
530.565 413.324 l
530.636 413.340 l
530.706 413.356 l
530.777 413.372 l
530.919 413.404 l
530.989 413.420 l
531.060 413.435 l
531.201 413.467 l
531.272 413.483 l
531.343 413.499 l
531.484 413.531 l
531.555 413.547 l
531.626 413.563 l
531.767 413.595 l
531.838 413.611 l
532.050 413.658 l
532.121 413.674 l
532.191 413.690 l
532.262 413.706 l
532.333 413.722 l
532.757 413.817 l
532.828 413.833 l
532.898 413.849 l
533.040 413.880 l
533.111 413.896 l
533.181 413.912 l
533.252 413.928 l
533.323 413.944 l
533.393 413.796 l
533.818 413.881 l
533.888 413.896 l
533.959 413.910 l
534.030 413.924 l
534.100 413.939 l
534.242 413.967 l
534.313 413.981 l
534.383 413.996 l
534.454 414.010 l
534.525 414.024 l
534.737 414.067 l
534.808 414.081 l
534.878 414.095 l
534.949 414.109 l
535.020 414.124 l
535.090 414.138 l
535.515 414.223 l
535.656 414.252 l
535.727 414.266 l
535.868 414.294 l
535.939 414.308 l
536.010 414.323 l
536.292 414.379 l
536.434 414.408 l
536.504 414.422 l
536.575 414.436 l
536.646 414.450 l
536.787 414.479 l
536.858 414.493 l
536.929 414.507 l
536.999 414.521 l
537.070 414.535 l
537.353 414.592 l
537.424 414.606 l
537.777 414.677 l
537.848 414.691 l
537.919 414.705 l
537.989 414.719 l
538.060 414.733 l
538.131 414.747 l
538.201 414.761 l
538.555 414.832 l
538.767 414.874 l
538.838 414.888 l
539.050 414.930 l
539.121 414.944 l
539.191 414.958 l
539.262 414.972 l
539.474 415.015 l
539.545 415.029 l
539.616 415.043 l
539.757 415.071 l
539.828 415.085 l
540.111 415.141 l
540.181 415.155 l
540.323 415.183 l
540.393 415.197 l
540.464 415.211 l
540.747 415.267 l
540.818 415.281 l
540.888 415.295 l
541.030 415.323 l
541.100 415.337 l
541.171 415.351 l
541.242 415.365 l
541.313 415.379 l
541.808 415.477 l
541.878 415.491 l
542.020 415.519 l
542.161 415.547 l
542.232 415.561 l
542.515 415.617 l
542.585 415.631 l
542.656 415.644 l
542.727 415.658 l
542.797 415.672 l
542.868 415.686 l
543.010 415.714 l
543.080 415.728 l
543.292 415.770 l
543.363 415.784 l
543.504 415.812 l
543.575 415.825 l
543.646 415.839 l
543.787 415.867 l
543.858 415.881 l
544.282 415.964 l
544.424 415.992 l
544.494 416.006 l
544.565 416.020 l
544.636 416.034 l
545.060 416.117 l
545.131 416.131 l
545.201 416.144 l
545.272 416.158 l
545.343 416.172 l
545.908 416.283 l
545.979 416.297 l
546.121 416.324 l
546.828 416.462 l
546.969 416.490 l
547.040 416.503 l
547.606 416.614 l
547.676 416.627 l
547.888 416.669 l
548.383 416.765 l
548.525 416.792 l
548.595 416.806 l
548.666 416.820 l
548.737 416.833 l
549.232 416.929 l
549.302 416.943 l
549.373 416.957 l
549.444 416.970 l
549.515 416.984 l
550.080 417.093 l
550.222 417.121 l
550.363 417.148 l
550.858 417.243 l
550.929 417.257 l
550.999 417.271 l
551.070 417.284 l
551.141 417.298 l
551.282 417.325 l
551.353 417.339 l
551.636 417.393 l
551.706 417.407 l
551.777 417.420 l
551.848 417.434 l
551.989 417.461 l
552.272 417.516 l
552.343 417.529 l
552.414 417.543 l
552.555 417.570 l
552.626 417.583 l
552.767 417.611 l
552.909 417.638 l
553.050 417.665 l
553.262 417.705 l
553.333 417.719 l
553.545 417.760 l
553.616 417.773 l
553.686 417.787 l
554.323 417.908 l
554.393 417.922 l
554.464 417.935 l
554.535 417.949 l
554.606 417.962 l
554.747 417.989 l
554.818 418.003 l
554.888 418.016 l
555.100 418.057 l
555.171 418.070 l
555.242 418.084 l
555.313 418.097 l
555.383 418.111 l
555.525 418.138 l
555.595 418.151 l
555.878 418.205 l
555.949 418.218 l
556.090 418.245 l
556.232 418.272 l
556.302 418.286 l
556.444 418.312 l
556.515 418.326 l
556.585 418.339 l
556.656 418.353 l
556.868 418.393 l
557.010 418.420 l
557.080 418.433 l
557.717 418.554 l
557.787 418.567 l
557.858 418.581 l
557.929 418.594 l
557.999 418.607 l
558.212 418.647 l
558.282 418.661 l
558.353 418.674 l
558.424 418.688 l
558.494 418.701 l
558.565 418.714 l
558.636 418.728 l
558.777 418.754 l
558.848 418.768 l
558.919 418.781 l
558.989 418.794 l
559.060 418.808 l
559.131 418.821 l
559.272 418.848 l
559.343 418.861 l
559.484 418.888 l
559.555 418.901 l
559.626 418.914 l
559.696 418.928 l
559.767 418.941 l
560.333 419.047 l
560.403 419.061 l
560.474 419.074 l
560.545 419.087 l
560.616 419.101 l
560.686 419.114 l
561.181 419.207 l
561.252 419.220 l
561.393 419.247 l
561.747 419.313 l
561.818 419.326 l
561.888 419.339 l
562.171 419.392 l
562.313 419.419 l
562.383 419.432 l
562.454 419.445 l
562.525 419.458 l
562.949 419.538 l
563.020 419.551 l
563.090 419.564 l
563.161 419.577 l
563.232 419.590 l
563.868 419.709 l
563.939 419.722 l
564.009 419.735 l
564.222 419.775 l
564.292 419.788 l
564.646 419.854 l
564.717 419.867 l
564.787 419.880 l
564.858 419.893 l
564.929 419.906 l
564.999 419.920 l
565.070 419.933 l
565.565 420.025 l
565.636 420.038 l
565.848 420.077 l
565.989 420.103 l
566.060 420.116 l
566.343 420.169 l
566.414 420.182 l
566.555 420.208 l
566.626 420.221 l
566.767 420.247 l
567.403 420.365 l
567.474 420.378 l
567.545 420.391 l
567.616 420.404 l
567.686 420.417 l
568.464 420.560 l
568.606 420.586 l
568.676 420.599 l
569.100 420.677 l
569.171 420.690 l
569.313 420.716 l
569.454 420.742 l
569.525 420.755 l
569.666 420.781 l
569.737 420.794 l
569.807 420.807 l
569.878 420.820 l
569.949 420.833 l
570.090 420.859 l
570.161 420.872 l
570.302 420.898 l
570.515 420.937 l
570.585 420.950 l
570.868 421.001 l
570.939 421.014 l
571.151 421.053 l
571.292 421.079 l
571.363 421.092 l
571.787 421.169 l
571.858 421.182 l
571.999 421.208 l
572.070 421.221 l
572.141 421.234 l
572.212 421.247 l
572.282 421.260 l
572.848 421.363 l
572.989 421.388 l
573.060 421.401 l
573.131 421.414 l
573.201 421.427 l
573.696 421.517 l
573.767 421.530 l
573.909 421.555 l
574.121 421.594 l
574.191 421.607 l
574.545 421.671 l
574.616 421.684 l
574.828 421.722 l
574.969 421.748 l
575.040 421.760 l
575.605 421.863 l
575.747 421.888 l
575.818 421.901 l
575.888 421.914 l
575.959 421.926 l
576.525 422.029 l
576.595 422.041 l
576.666 422.054 l
576.737 422.067 l
576.807 422.080 l
576.949 422.105 l
577.020 422.118 l
577.090 422.130 l
577.515 422.207 l
577.656 422.232 l
577.727 422.245 l
577.797 422.258 l
577.868 422.270 l
578.292 422.346 l
578.363 422.359 l
578.434 422.372 l
578.504 422.384 l
578.646 422.410 l
578.929 422.461 l
578.999 422.473 l
579.070 422.486 l
579.141 422.499 l
579.212 422.511 l
579.353 422.537 l
579.424 422.549 l
579.494 422.562 l
579.565 422.574 l
579.636 422.587 l
580.343 422.713 l
580.484 422.739 l
580.555 422.751 l
580.696 422.777 l
580.767 422.789 l
581.262 422.877 l
581.333 422.890 l
581.403 422.903 l
581.474 422.915 l
581.545 422.928 l
582.181 423.041 l
582.252 423.053 l
582.323 423.066 l
582.393 423.079 l
582.464 423.091 l
582.747 423.141 l
582.818 423.154 l
582.888 423.166 l
583.100 423.204 l
583.171 423.216 l
583.242 423.229 l
583.313 423.242 l
583.383 423.254 l
583.454 423.267 l
583.525 423.279 l
584.020 423.367 l
584.090 423.379 l
584.161 423.392 l
584.232 423.404 l
584.302 423.417 l
584.444 423.442 l
584.515 423.454 l
584.868 423.517 l
584.939 423.529 l
585.009 423.542 l
585.151 423.567 l
585.292 423.591 l
585.363 423.604 l
585.504 423.629 l
585.575 423.641 l
585.787 423.679 l
585.858 423.691 l
585.999 423.716 l
586.070 423.728 l
586.212 423.753 l
586.353 423.778 l
586.424 423.791 l
586.848 423.865 l
586.919 423.877 l
587.060 423.902 l
587.201 423.927 l
587.272 423.940 l
587.343 423.952 l
587.414 423.964 l
587.838 424.039 l
587.908 424.051 l
587.979 424.063 l
588.050 424.076 l
588.121 424.088 l
588.262 424.113 l
588.333 424.125 l
588.898 424.224 l
588.969 424.236 l
589.040 424.249 l
589.111 424.261 l
589.181 424.274 l
589.464 424.323 l
589.535 424.335 l
589.676 424.360 l
589.747 424.372 l
589.959 424.409 l
590.100 424.434 l
590.171 424.446 l
590.242 424.458 l
590.313 424.471 l
590.807 424.557 l
590.878 424.569 l
590.949 424.581 l
591.020 424.594 l
591.090 424.606 l
591.232 424.630 l
591.302 424.643 l
591.727 424.716 l
591.797 424.729 l
591.868 424.741 l
591.939 424.753 l
592.009 424.765 l
592.080 424.778 l
592.151 424.790 l
592.222 424.802 l
592.787 424.900 l
592.858 424.912 l
592.929 424.925 l
592.999 424.937 l
593.070 424.949 l
593.212 424.973 l
593.282 424.986 l
593.707 425.059 l
593.777 425.071 l
593.989 425.108 l
594.131 425.132 l
594.201 425.144 l
594.767 425.242 l
594.838 425.254 l
594.979 425.278 l
595.121 425.302 l
595.191 425.315 l
595.403 425.351 l
595.474 425.363 l
595.616 425.387 l
595.686 425.400 l
595.757 425.412 l
595.828 425.424 l
595.969 425.448 l
596.040 425.460 l
596.111 425.472 l
596.323 425.509 l
596.393 425.521 l
596.464 425.533 l
596.535 425.545 l
596.676 425.569 l
596.747 425.581 l
596.888 425.606 l
597.030 425.630 l
597.100 425.642 l
597.171 425.654 l
597.807 425.763 l
597.878 425.775 l
597.949 425.787 l
598.020 425.799 l
598.090 425.811 l
598.232 425.835 l
598.302 425.847 l
598.727 425.920 l
598.797 425.932 l
598.939 425.956 l
599.080 425.980 l
599.222 426.004 l
599.787 426.100 l
599.858 426.112 l
599.929 426.124 l
599.999 426.136 l
600.070 426.148 l
600.141 426.160 l
600.212 426.172 l
600.424 426.208 l
600.494 426.220 l
600.565 426.232 l
600.848 426.280 l
601.060 426.316 l
601.201 426.340 l
601.272 426.352 l
601.838 426.448 l
601.908 426.460 l
602.050 426.484 l
602.191 426.507 l
602.262 426.519 l
602.403 426.543 l
602.474 426.555 l
602.616 426.579 l
602.686 426.591 l
602.969 426.639 l
603.040 426.651 l
603.111 426.663 l
603.181 426.674 l
603.252 426.686 l
603.959 426.805 l
604.030 426.817 l
604.100 426.829 l
604.171 426.841 l
604.242 426.853 l
604.383 426.877 l
604.454 426.889 l
604.666 426.924 l
604.737 426.936 l
604.878 426.960 l
604.949 426.972 l
605.090 426.995 l
605.232 427.019 l
605.302 427.031 l
605.373 427.043 l
605.444 427.055 l
605.939 427.138 l
606.009 427.149 l
606.080 427.161 l
606.151 427.173 l
606.292 427.197 l
606.434 427.220 l
606.504 427.232 l
606.575 427.244 l
606.646 427.256 l
606.787 427.279 l
606.858 427.291 l
606.929 427.303 l
606.999 427.315 l
607.141 427.338 l
607.282 427.362 l
607.353 427.374 l
607.424 427.386 l
607.494 427.397 l
607.848 427.456 l
607.919 427.468 l
608.131 427.503 l
608.272 427.527 l
608.414 427.550 l
608.696 427.597 l
608.767 427.609 l
608.908 427.633 l
608.979 427.644 l
609.121 427.668 l
609.191 427.680 l
609.333 427.703 l
609.403 427.715 l
609.474 427.727 l
609.616 427.750 l
609.686 427.762 l
610.111 427.832 l
610.181 427.844 l
610.252 427.856 l
610.323 427.867 l
610.464 427.891 l
610.605 427.914 l
610.676 427.926 l
611.171 428.008 l
611.242 428.019 l
611.383 428.043 l
611.454 428.054 l
611.525 428.066 l
611.666 428.089 l
611.807 428.113 l
612.232 428.183 l
612.302 428.194 l
612.444 428.218 l
612.515 428.229 l
612.585 428.241 l
612.656 428.252 l
612.727 428.264 l
613.363 428.369 l
613.434 428.380 l
613.504 428.392 l
613.575 428.404 l
613.646 428.415 l
613.717 428.427 l
614.494 428.554 l
614.565 428.566 l
614.636 428.578 l
614.706 428.589 l
614.777 428.601 l
614.919 428.624 l
614.989 428.635 l
615.414 428.705 l
615.484 428.716 l
615.626 428.739 l
615.696 428.751 l
615.838 428.774 l
616.121 428.820 l
616.191 428.832 l
616.333 428.855 l
616.403 428.866 l
616.686 428.913 l
616.757 428.924 l
616.969 428.959 l
617.111 428.982 l
617.181 428.993 l
617.464 429.039 l
617.535 429.051 l
617.818 429.097 l
617.959 429.120 l
618.030 429.131 l
618.100 429.143 l
618.171 429.154 l
618.737 429.246 l
618.807 429.257 l
618.878 429.269 l
618.949 429.280 l
619.090 429.303 l
619.232 429.326 l
619.302 429.338 l
619.727 429.406 l
619.797 429.418 l
619.939 429.441 l
620.009 429.452 l
620.151 429.475 l
620.363 429.509 l
620.434 429.521 l
620.646 429.555 l
620.717 429.566 l
620.929 429.600 l
620.999 429.612 l
621.141 429.635 l
621.282 429.657 l
621.353 429.669 l
621.494 429.692 l
621.565 429.703 l
621.989 429.771 l
622.060 429.783 l
622.201 429.805 l
622.272 429.817 l
622.343 429.828 l
622.414 429.840 l
622.484 429.851 l
623.191 429.964 l
623.262 429.976 l
623.333 429.987 l
623.403 429.998 l
623.474 430.010 l
623.616 430.032 l
623.686 430.044 l
623.969 430.089 l
624.040 430.100 l
624.111 430.112 l
624.252 430.134 l
624.323 430.146 l
624.464 430.168 l
624.605 430.191 l
624.676 430.202 l
624.747 430.214 l
625.383 430.315 l
625.454 430.326 l
625.525 430.338 l
625.595 430.349 l
625.737 430.372 l
625.949 430.405 l
626.020 430.417 l
626.373 430.473 l
626.444 430.484 l
626.585 430.507 l
626.656 430.518 l
626.797 430.540 l
627.009 430.574 l
627.080 430.585 l
627.646 430.675 l
627.717 430.686 l
627.787 430.698 l
627.858 430.709 l
627.929 430.720 l
627.999 430.731 l
628.070 430.743 l
628.212 430.765 l
628.282 430.776 l
628.353 430.787 l
628.424 430.799 l
628.494 430.810 l
628.565 430.821 l
628.636 430.832 l
628.777 430.855 l
628.848 430.866 l
628.989 430.888 l
629.060 430.899 l
629.131 430.910 l
629.272 430.933 l
629.343 430.944 l
629.626 430.989 l
629.696 431.000 l
629.838 431.022 l
629.908 431.033 l
630.050 431.056 l
630.121 431.067 l
630.191 431.078 l
630.333 431.100 l
630.403 431.111 l
631.111 431.223 l
631.181 431.234 l
631.252 431.245 l
631.323 431.256 l
631.393 431.267 l
631.535 431.290 l
631.605 431.301 l
632.100 431.378 l
632.171 431.390 l
632.313 431.412 l
632.383 431.423 l
632.454 431.434 l
632.525 431.445 l
632.595 431.456 l
632.737 431.478 l
632.807 431.489 l
632.878 431.500 l
632.949 431.512 l
633.090 431.534 l
633.161 431.545 l
633.232 431.556 l
633.302 431.567 l
633.444 431.589 l
633.515 431.600 l
633.585 431.611 l
633.656 431.622 l
633.727 431.633 l
633.939 431.666 l
634.009 431.677 l
634.292 431.722 l
634.363 431.733 l
634.575 431.766 l
634.646 431.777 l
634.717 431.788 l
634.787 431.799 l
634.858 431.810 l
634.999 431.832 l
635.070 431.843 l
635.636 431.931 l
635.706 431.942 l
635.777 431.953 l
635.848 431.964 l
635.919 431.975 l
635.989 431.986 l
636.060 431.997 l
636.201 432.019 l
636.272 432.030 l
636.626 432.085 l
636.696 432.096 l
636.767 432.107 l
636.908 432.129 l
636.979 432.140 l
637.050 432.151 l
637.121 432.162 l
637.191 432.173 l
637.333 432.195 l
637.403 432.206 l
637.898 432.283 l
637.969 432.293 l
638.111 432.315 l
638.181 432.326 l
638.252 432.337 l
638.323 432.348 l
638.393 432.359 l
638.605 432.392 l
638.676 432.403 l
639.030 432.457 l
639.100 432.468 l
639.242 432.490 l
639.313 432.501 l
639.383 432.512 l
639.454 432.523 l
639.525 432.534 l
639.666 432.556 l
639.737 432.567 l
640.302 432.654 l
640.373 432.665 l
640.444 432.675 l
640.515 432.686 l
640.585 432.697 l
640.656 432.708 l
640.727 432.719 l
640.797 432.730 l
640.868 432.741 l
641.504 432.839 l
641.575 432.849 l
641.646 432.860 l
641.717 432.871 l
641.787 432.882 l
641.858 432.893 l
641.929 432.904 l
641.999 432.914 l
642.070 432.925 l
642.636 433.012 l
642.706 433.023 l
642.848 433.044 l
642.989 433.066 l
643.060 433.077 l
643.131 433.088 l
643.201 433.099 l
643.979 433.217 l
644.050 433.228 l
644.121 433.239 l
644.262 433.261 l
644.333 433.271 l
644.403 433.282 l
644.474 433.293 l
644.969 433.368 l
645.040 433.379 l
645.181 433.401 l
645.252 433.411 l
645.323 433.422 l
645.393 433.433 l
645.464 433.444 l
645.535 433.454 l
645.606 433.465 l
645.676 433.476 l
646.313 433.573 l
646.383 433.583 l
646.525 433.605 l
646.666 433.626 l
646.737 433.637 l
646.949 433.669 l
647.020 433.680 l
647.373 433.733 l
647.444 433.744 l
647.656 433.776 l
647.797 433.798 l
647.868 433.808 l
647.939 433.819 l
648.009 433.830 l
648.787 433.947 l
648.858 433.958 l
648.929 433.968 l
648.999 433.979 l
649.070 433.990 l
649.212 434.011 l
649.282 434.022 l
649.424 434.043 l
649.494 434.054 l
649.848 434.107 l
649.919 434.118 l
650.060 434.139 l
650.131 434.150 l
650.201 434.160 l
650.272 434.171 l
650.343 434.181 l
650.414 434.192 l
650.484 434.203 l
651.121 434.298 l
651.191 434.309 l
651.333 434.330 l
651.403 434.341 l
651.474 434.351 l
651.545 434.362 l
651.616 434.373 l
651.898 434.415 l
651.969 434.426 l
652.040 434.436 l
652.111 434.447 l
652.181 434.457 l
652.252 434.468 l
652.464 434.500 l
652.535 434.510 l
652.605 434.521 l
652.676 434.531 l
652.747 434.542 l
652.888 434.563 l
652.959 434.574 l
653.242 434.616 l
653.312 434.626 l
653.595 434.669 l
653.666 434.679 l
653.807 434.700 l
653.878 434.711 l
653.949 434.721 l
654.020 434.732 l
654.090 434.742 l
654.373 434.785 l
654.444 434.795 l
654.515 434.806 l
654.585 434.816 l
654.656 434.827 l
654.939 434.869 l
655.009 434.879 l
655.080 434.890 l
655.151 434.900 l
655.222 434.911 l
655.363 434.932 l
655.434 434.942 l
656.141 435.047 l
656.212 435.058 l
656.282 435.068 l
656.353 435.079 l
656.424 435.089 l
656.494 435.100 l
656.565 435.110 l
656.706 435.131 l
656.777 435.142 l
657.201 435.205 l
657.272 435.215 l
657.484 435.246 l
657.555 435.257 l
657.626 435.267 l
657.696 435.278 l
657.767 435.288 l
657.908 435.309 l
657.979 435.319 l
658.545 435.403 l
658.616 435.413 l
658.757 435.434 l
658.828 435.445 l
658.898 435.455 l
658.969 435.466 l
659.040 435.476 l
659.252 435.507 l
659.323 435.518 l
659.747 435.580 l
659.818 435.590 l
659.959 435.611 l
660.030 435.622 l
660.171 435.642 l
660.313 435.663 l
660.383 435.674 l
660.454 435.684 l
660.525 435.694 l
661.020 435.767 l
661.090 435.777 l
661.232 435.798 l
661.302 435.808 l
661.444 435.829 l
661.585 435.850 l
661.656 435.860 l
661.939 435.902 l
662.009 435.912 l
662.151 435.933 l
662.222 435.943 l
662.292 435.953 l
662.504 435.984 l
662.575 435.995 l
662.646 436.005 l
662.717 436.015 l
662.787 436.026 l
662.929 436.046 l
662.999 436.057 l
663.282 436.098 l
663.353 436.108 l
663.424 436.119 l
663.706 436.160 l
663.777 436.170 l
663.919 436.191 l
663.989 436.201 l
664.060 436.211 l
664.201 436.232 l
664.272 436.242 l
664.979 436.345 l
665.050 436.355 l
665.191 436.376 l
665.262 436.386 l
665.333 436.396 l
665.403 436.407 l
665.474 436.417 l
665.545 436.427 l
665.828 436.468 l
665.898 436.479 l
665.969 436.489 l
666.323 436.540 l
666.393 436.550 l
666.464 436.561 l
666.535 436.571 l
666.605 436.581 l
666.676 436.591 l
666.747 436.601 l
666.888 436.622 l
666.959 436.632 l
667.454 436.704 l
667.525 436.714 l
667.666 436.734 l
667.737 436.745 l
667.807 436.755 l
667.878 436.765 l
667.949 436.775 l
668.020 436.785 l
668.090 436.796 l
668.373 436.836 l
668.444 436.847 l
668.656 436.877 l
668.727 436.887 l
668.939 436.918 l
669.009 436.928 l
669.080 436.938 l
669.151 436.948 l
669.222 436.959 l
669.292 436.969 l
669.363 436.979 l
669.575 437.009 l
669.646 437.020 l
670.070 437.081 l
670.141 437.091 l
670.282 437.111 l
670.353 437.121 l
670.424 437.131 l
670.494 437.142 l
670.565 437.152 l
670.636 437.162 l
670.706 437.172 l
670.919 437.202 l
670.989 437.213 l
671.272 437.253 l
671.343 437.263 l
671.555 437.294 l
671.626 437.304 l
671.767 437.324 l
671.908 437.344 l
671.979 437.354 l
672.121 437.374 l
672.191 437.385 l
672.757 437.465 l
672.828 437.476 l
672.969 437.496 l
673.040 437.506 l
673.110 437.516 l
673.181 437.526 l
673.252 437.536 l
673.464 437.566 l
673.535 437.576 l
674.030 437.647 l
674.100 437.657 l
674.313 437.687 l
674.383 437.697 l
674.454 437.707 l
674.595 437.727 l
674.666 437.737 l
674.807 437.757 l
674.878 437.768 l
675.373 437.838 l
675.444 437.848 l
675.585 437.868 l
675.656 437.878 l
675.727 437.888 l
675.797 437.898 l
675.868 437.908 l
675.939 437.918 l
676.009 437.928 l
676.222 437.958 l
676.292 437.968 l
676.646 438.018 l
676.717 438.028 l
676.858 438.048 l
676.929 438.058 l
677.070 438.078 l
677.212 438.098 l
677.282 438.108 l
677.424 438.128 l
677.494 438.138 l
678.131 438.228 l
678.201 438.238 l
678.272 438.248 l
678.343 438.258 l
678.414 438.268 l
678.484 438.278 l
678.555 438.288 l
678.626 438.298 l
678.767 438.318 l
678.838 438.328 l
679.403 438.407 l
679.474 438.417 l
679.616 438.437 l
679.686 438.447 l
679.828 438.467 l
679.969 438.487 l
680.040 438.497 l
680.181 438.516 l
680.252 438.526 l
680.676 438.586 l
680.747 438.596 l
680.959 438.625 l
681.030 438.635 l
681.100 438.645 l
681.171 438.655 l
681.242 438.665 l
681.313 438.675 l
681.383 438.685 l
681.595 438.715 l
681.666 438.724 l
682.020 438.774 l
682.090 438.784 l
682.161 438.794 l
682.373 438.823 l
682.444 438.833 l
682.515 438.843 l
682.585 438.853 l
682.656 438.863 l
682.797 438.883 l
682.868 438.892 l
683.575 438.991 l
683.646 439.001 l
683.787 439.021 l
683.858 439.030 l
683.929 439.040 l
683.999 439.050 l
684.070 439.060 l
684.212 439.080 l
684.282 439.089 l
684.919 439.178 l
684.989 439.188 l
685.131 439.207 l
685.201 439.217 l
685.272 439.227 l
685.343 439.237 l
685.413 439.247 l
685.555 439.266 l
685.626 439.276 l
686.333 439.374 l
686.403 439.384 l
686.545 439.403 l
686.616 439.413 l
686.686 439.423 l
686.757 439.433 l
686.828 439.442 l
686.969 439.462 l
687.040 439.472 l
687.676 439.560 l
687.747 439.569 l
687.959 439.599 l
688.100 439.618 l
688.171 439.628 l
688.242 439.638 l
688.313 439.647 l
688.525 439.677 l
688.595 439.686 l
689.020 439.745 l
689.090 439.754 l
689.232 439.774 l
689.302 439.784 l
689.373 439.793 l
689.444 439.803 l
689.515 439.813 l
689.585 439.823 l
689.656 439.832 l
689.797 439.852 l
689.868 439.861 l
690.504 439.949 l
690.575 439.958 l
690.717 439.978 l
690.787 439.988 l
690.858 439.997 l
690.929 440.007 l
690.999 440.017 l
691.070 440.026 l
691.141 440.036 l
691.212 440.046 l
691.989 440.152 l
692.060 440.162 l
692.131 440.171 l
692.201 440.181 l
692.272 440.191 l
692.343 440.200 l
692.413 440.210 l
692.484 440.220 l
692.555 440.229 l
693.403 440.345 l
693.474 440.355 l
693.545 440.364 l
693.616 440.374 l
693.757 440.393 l
693.898 440.412 l
693.969 440.422 l
694.181 440.451 l
694.252 440.461 l
694.323 440.470 l
694.535 440.499 l
694.605 440.509 l
694.818 440.537 l
694.888 440.547 l
695.030 440.566 l
695.100 440.576 l
695.171 440.585 l
695.242 440.595 l
695.313 440.605 l
695.525 440.633 l
695.595 440.643 l
696.090 440.710 l
696.161 440.720 l
696.373 440.748 l
696.444 440.758 l
696.515 440.768 l
696.585 440.777 l
696.656 440.787 l
696.797 440.806 l
696.868 440.815 l
697.151 440.854 l
697.222 440.863 l
697.363 440.882 l
697.434 440.892 l
697.717 440.930 l
697.787 440.939 l
697.929 440.959 l
697.999 440.968 l
698.070 440.978 l
698.141 440.987 l
698.212 440.997 l
698.282 441.006 l
698.565 441.044 l
698.636 441.054 l
698.706 441.063 l
698.777 441.073 l
698.848 441.082 l
699.131 441.121 l
699.201 441.130 l
699.343 441.149 l
699.413 441.159 l
699.484 441.168 l
699.555 441.178 l
699.626 441.187 l
699.838 441.216 l
699.908 441.225 l
700.474 441.301 l
700.545 441.310 l
700.686 441.329 l
700.757 441.339 l
700.828 441.348 l
700.898 441.358 l
700.969 441.367 l
701.040 441.377 l
701.111 441.386 l
701.252 441.405 l
701.323 441.415 l
701.818 441.481 l
701.888 441.490 l
701.959 441.500 l
702.100 441.519 l
702.171 441.528 l
702.313 441.547 l
702.383 441.557 l
702.454 441.566 l
702.595 441.585 l
702.666 441.594 l
702.878 441.623 l
702.949 441.632 l
703.020 441.641 l
703.090 441.651 l
703.161 441.660 l
703.232 441.670 l
703.302 441.679 l
703.515 441.707 l
703.585 441.717 l
703.727 441.736 l
703.797 441.745 l
703.868 441.755 l
704.009 441.773 l
704.080 441.783 l
704.222 441.802 l
704.292 441.811 l
704.858 441.886 l
704.929 441.896 l
704.999 441.905 l
705.070 441.914 l
705.141 441.924 l
705.211 441.933 l
705.282 441.943 l
705.353 441.952 l
705.424 441.961 l
705.494 441.971 l
705.636 441.989 l
705.706 441.999 l
706.343 442.083 l
706.413 442.092 l
706.555 442.111 l
706.626 442.121 l
706.767 442.139 l
706.838 442.149 l
706.908 442.158 l
706.979 442.167 l
707.050 442.177 l
707.121 442.186 l
707.191 442.195 l
707.828 442.279 l
707.898 442.289 l
708.111 442.317 l
708.181 442.326 l
708.252 442.335 l
708.323 442.345 l
708.393 442.354 l
708.535 442.373 l
708.605 442.382 l
709.030 442.438 l
709.100 442.447 l
709.171 442.456 l
709.454 442.494 l
709.525 442.503 l
709.666 442.522 l
709.807 442.540 l
709.878 442.549 l
709.949 442.559 l
710.020 442.568 l
710.232 442.596 l
710.302 442.605 l
710.727 442.661 l
710.797 442.670 l
710.868 442.679 l
711.009 442.698 l
711.080 442.707 l
711.151 442.716 l
711.222 442.726 l
711.292 442.735 l
711.363 442.744 l
711.434 442.753 l
711.504 442.763 l
711.575 442.772 l
711.858 442.809 l
711.929 442.818 l
711.999 442.827 l
712.070 442.837 l
712.141 442.846 l
712.424 442.883 l
712.494 442.892 l
712.636 442.911 l
712.706 442.920 l
712.777 442.929 l
712.848 442.938 l
712.919 442.948 l
713.060 442.966 l
713.131 442.975 l
713.343 443.003 l
713.413 443.012 l
713.626 443.040 l
713.696 443.049 l
713.979 443.086 l
714.050 443.095 l
714.191 443.114 l
714.262 443.123 l
714.333 443.132 l
714.403 443.141 l
714.474 443.150 l
714.686 443.178 l
714.757 443.187 l
715.393 443.270 l
715.464 443.279 l
715.605 443.297 l
715.676 443.306 l
715.747 443.316 l
715.818 443.325 l
715.888 443.334 l
715.959 443.343 l
716.030 443.352 l
716.171 443.371 l
716.242 443.380 l
716.949 443.471 l
717.020 443.480 l
717.161 443.499 l
717.232 443.508 l
717.302 443.517 l
717.373 443.526 l
717.444 443.535 l
717.515 443.544 l
717.585 443.554 l
717.797 443.581 l
717.868 443.590 l
718.363 443.654 l
718.434 443.663 l
718.646 443.690 l
718.717 443.700 l
718.787 443.709 l
718.858 443.718 l
718.929 443.727 l
718.999 443.736 l
719.070 443.745 l
719.141 443.754 l
719.211 443.763 l
719.565 443.809 l
719.636 443.818 l
719.706 443.827 l
719.777 443.836 l
720.131 443.882 l
720.201 443.891 l
720.343 443.909 l
720.484 443.927 l
720.555 443.936 l
720.626 443.945 l
720.696 443.954 l
720.908 443.981 l
720.979 443.991 l
721.545 444.063 l
721.616 444.072 l
721.757 444.090 l
721.828 444.099 l
721.969 444.117 l
722.111 444.135 l
722.181 444.144 l
722.252 444.154 l
722.323 444.163 l
722.959 444.244 l
723.030 444.253 l
723.242 444.280 l
723.313 444.289 l
723.454 444.307 l
723.525 444.316 l
723.595 444.325 l
723.737 444.343 l
723.807 444.352 l
723.949 444.370 l
724.020 444.379 l
724.727 444.469 l
724.797 444.478 l
724.939 444.496 l
725.009 444.505 l
725.151 444.523 l
725.292 444.541 l
725.363 444.550 l
725.504 444.568 l
725.575 444.577 l
726.282 444.667 l
726.353 444.676 l
726.494 444.694 l
726.565 444.703 l
726.706 444.721 l
726.777 444.729 l
726.848 444.738 l
726.919 444.747 l
727.060 444.765 l
727.131 444.774 l
727.414 444.810 l
727.484 444.819 l
727.555 444.828 l
727.626 444.837 l
727.696 444.846 l
727.979 444.882 l
728.050 444.890 l
728.191 444.908 l
728.262 444.917 l
728.333 444.926 l
728.403 444.935 l
728.474 444.944 l
728.686 444.971 l
728.757 444.980 l
729.535 445.078 l
729.605 445.087 l
729.747 445.104 l
729.818 445.113 l
729.888 445.122 l
729.959 445.131 l
730.030 445.140 l
730.171 445.158 l
730.242 445.167 l
730.525 445.202 l
730.595 445.211 l
730.666 445.220 l
730.878 445.247 l
730.949 445.256 l
731.232 445.291 l
731.302 445.300 l
731.444 445.318 l
731.585 445.335 l
731.656 445.344 l
731.727 445.353 l
731.797 445.362 l
732.080 445.397 l
732.151 445.406 l
732.504 445.451 l
732.575 445.459 l
732.858 445.495 l
732.929 445.504 l
732.999 445.512 l
733.070 445.521 l
733.141 445.530 l
733.211 445.539 l
733.282 445.548 l
733.353 445.557 l
733.424 445.565 l
733.636 445.592 l
733.706 445.601 l
733.777 445.610 l
733.848 445.618 l
734.201 445.662 l
734.272 445.671 l
734.414 445.689 l
734.484 445.698 l
734.626 445.715 l
734.696 445.724 l
734.767 445.733 l
734.838 445.742 l
734.908 445.751 l
735.050 445.768 l
735.121 445.777 l
735.333 445.803 l
735.403 445.812 l
735.828 445.865 l
735.898 445.874 l
736.040 445.891 l
736.111 445.900 l
736.252 445.918 l
736.323 445.926 l
736.393 445.935 l
736.464 445.944 l
736.535 445.953 l
736.676 445.970 l
736.747 445.979 l
736.888 445.996 l
736.959 446.005 l
737.383 446.058 l
737.454 446.067 l
737.737 446.102 l
737.807 446.110 l
737.878 446.119 l
737.949 446.128 l
738.020 446.137 l
738.090 446.145 l
738.161 446.154 l
738.232 446.163 l
738.302 446.171 l
738.515 446.198 l
738.585 446.206 l
739.080 446.268 l
739.151 446.276 l
739.434 446.311 l
739.504 446.320 l
739.575 446.329 l
739.646 446.337 l
739.717 446.346 l
739.787 446.355 l
739.858 446.363 l
739.999 446.381 l
740.070 446.390 l
740.424 446.433 l
740.494 446.442 l
740.565 446.450 l
740.989 446.503 l
741.060 446.511 l
741.131 446.520 l
741.201 446.529 l
741.272 446.537 l
741.343 446.546 l
741.414 446.555 l
741.484 446.563 l
741.555 446.572 l
741.696 446.589 l
741.767 446.598 l
742.050 446.633 l
742.121 446.641 l
742.191 446.650 l
742.616 446.702 l
742.686 446.711 l
742.757 446.719 l
742.828 446.728 l
742.898 446.737 l
742.969 446.745 l
743.040 446.754 l
743.111 446.763 l
743.252 446.780 l
743.323 446.789 l
743.464 446.806 l
743.535 446.815 l
744.100 446.884 l
744.171 446.892 l
744.383 446.918 l
744.454 446.927 l
744.595 446.944 l
744.666 446.953 l
744.737 446.961 l
744.878 446.978 l
744.949 446.987 l
745.090 447.004 l
745.161 447.013 l
745.939 447.108 l
746.009 447.116 l
746.151 447.133 l
746.222 447.142 l
746.292 447.151 l
746.363 447.159 l
746.434 447.168 l
746.504 447.176 l
746.575 447.185 l
746.646 447.194 l
746.717 447.202 l
746.787 447.211 l
747.636 447.314 l
747.706 447.322 l
747.848 447.339 l
747.919 447.348 l
747.989 447.356 l
748.060 447.365 l
748.131 447.374 l
748.201 447.382 l
748.272 447.391 l
748.414 447.408 l
748.484 447.416 l
749.333 447.519 l
749.403 447.527 l
749.545 447.545 l
749.616 447.553 l
749.686 447.562 l
749.757 447.570 l
749.828 447.579 l
749.898 447.587 l
749.969 447.596 l
750.110 447.613 l
750.181 447.621 l
750.393 447.647 l
750.464 447.655 l
750.535 447.664 l
750.605 447.672 l
750.676 447.681 l
750.747 447.689 l
751.030 447.723 l
751.100 447.732 l
751.242 447.749 l
751.312 447.757 l
751.454 447.774 l
751.595 447.791 l
751.666 447.800 l
751.737 447.808 l
751.807 447.817 l
752.090 447.851 l
752.161 447.859 l
752.515 447.902 l
752.585 447.910 l
752.868 447.944 l
752.939 447.953 l
753.009 447.961 l
753.080 447.970 l
753.222 447.987 l
753.363 448.003 l
753.434 448.012 l
753.575 448.029 l
753.646 448.037 l
753.929 448.071 l
753.999 448.080 l
754.141 448.097 l
754.212 448.105 l
754.494 448.139 l
754.565 448.147 l
754.706 448.164 l
754.777 448.173 l
754.919 448.189 l
755.060 448.206 l
755.131 448.215 l
755.201 448.223 l
755.272 448.232 l
755.555 448.265 l
755.626 448.274 l
755.696 448.282 l
755.908 448.307 l
755.979 448.316 l
756.333 448.358 l
756.403 448.366 l
756.474 448.375 l
756.545 448.383 l
756.686 448.400 l
756.828 448.417 l
756.898 448.425 l
757.040 448.442 l
757.110 448.450 l
757.393 448.484 l
757.464 448.492 l
757.535 448.501 l
757.605 448.509 l
757.676 448.518 l
757.959 448.551 l
758.030 448.559 l
758.171 448.576 l
758.242 448.585 l
758.383 448.601 l
758.525 448.618 l
758.595 448.627 l
758.666 448.635 l
758.737 448.643 l
758.949 448.668 l
759.020 448.677 l
759.373 448.719 l
759.444 448.727 l
759.585 448.744 l
759.656 448.752 l
759.868 448.777 l
759.939 448.785 l
760.009 448.794 l
760.080 448.802 l
760.222 448.819 l
760.363 448.835 l
760.434 448.844 l
760.575 448.861 l
760.646 448.869 l
760.999 448.911 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
q
53.0000 9.01423 709.999 486.985 rc
newpath
74.9292 11.0086 m
74.9999 11.3448 l
75.0707 11.6806 l
75.1414 12.0159 l
75.2121 12.3506 l
75.2828 12.6849 l
75.3535 13.0187 l
75.4242 13.3519 l
75.4949 13.6847 l
75.5656 14.0170 l
75.6363 14.3488 l
75.7070 14.6801 l
75.7777 15.0109 l
75.8484 15.3413 l
75.9191 15.6711 l
75.9898 16.0005 l
76.0606 16.3293 l
76.1313 16.6577 l
76.2020 16.9856 l
76.2727 17.3130 l
76.3434 17.6400 l
76.4141 17.9665 l
76.4848 18.2924 l
76.5555 18.6180 l
76.6262 18.9430 l
76.6969 19.2676 l
76.7676 19.5917 l
76.8383 19.9153 l
76.9090 20.2384 l
76.9797 20.5611 l
77.0505 20.8833 l
77.1212 21.2051 l
77.1919 21.5264 l
77.2626 21.8472 l
77.3333 22.1676 l
77.4040 22.4874 l
77.4747 22.8069 l
77.5454 23.1258 l
77.6161 23.4444 l
77.6868 23.7624 l
77.7575 24.0800 l
77.8282 24.3972 l
77.8989 24.7139 l
77.9696 25.0301 l
78.0404 25.3459 l
78.1111 25.6612 l
78.1818 25.9761 l
78.2525 26.2905 l
78.3232 26.6045 l
78.3939 26.9180 l
78.4646 27.0546 l
78.5353 27.3291 l
78.6060 27.6033 l
78.7474 28.1505 l
78.8181 28.4236 l
78.8888 28.6964 l
78.9595 28.9689 l
79.0303 29.2410 l
79.1010 29.5129 l
79.1717 29.7844 l
79.2424 30.0556 l
79.3131 30.3264 l
79.3838 30.5970 l
79.4545 30.8671 l
79.5252 31.1370 l
79.5959 31.4066 l
79.6666 31.6758 l
79.7373 31.9447 l
79.8080 32.2134 l
79.8787 32.4816 l
79.9494 32.7496 l
80.0202 33.0172 l
80.0909 33.2846 l
80.1616 33.5516 l
80.2323 33.8183 l
80.3030 34.0846 l
80.3737 34.3507 l
80.4444 34.6164 l
80.5151 34.8819 l
80.5858 35.1470 l
80.6565 35.4118 l
80.7272 35.6763 l
80.7979 35.9405 l
80.8686 36.2044 l
80.9393 36.4679 l
81.0100 36.7312 l
81.1515 37.2568 l
81.2222 37.5191 l
81.2929 37.7811 l
81.3636 38.0429 l
81.4343 38.3043 l
81.5050 38.5654 l
81.6464 39.0867 l
81.7171 39.3469 l
81.7878 39.6068 l
81.9292 40.1257 l
81.9999 40.3846 l
82.0707 40.6433 l
82.1414 40.9017 l
82.2121 41.1598 l
82.2828 41.4176 l
82.3535 41.6751 l
82.4949 42.1892 l
82.6363 42.7021 l
82.7070 42.9581 l
82.7777 43.2138 l
82.8484 43.4692 l
82.9191 43.7244 l
82.9898 43.9792 l
83.0606 44.2337 l
83.1313 44.4880 l
83.2020 44.7419 l
83.2727 44.9956 l
83.3434 45.2489 l
83.4848 45.7548 l
83.5555 46.0074 l
83.6262 46.2596 l
83.6969 46.5115 l
83.8383 47.0145 l
83.9090 47.2656 l
83.9797 47.5164 l
84.0505 47.7669 l
84.1212 48.0171 l
84.1919 48.2670 l
84.3333 48.7660 l
84.4040 49.0151 l
84.5454 49.5125 l
84.6868 50.0087 l
84.7575 50.2564 l
84.8282 50.5038 l
84.9696 50.9977 l
85.0404 51.2443 l
85.1111 51.4906 l
85.2525 51.9823 l
85.3232 52.2278 l
85.3939 52.4730 l
85.5353 52.9626 l
85.6060 53.2069 l
85.6767 53.4510 l
85.7474 53.6948 l
85.8181 53.9384 l
85.8888 54.1817 l
85.9595 54.4247 l
86.1010 54.9099 l
86.1717 55.1521 l
86.3131 55.6357 l
86.4545 56.1182 l
86.5959 56.5997 l
86.6666 56.8400 l
86.7373 57.0800 l
86.8080 57.3198 l
86.8787 57.5594 l
86.9494 57.7986 l
87.0202 58.0376 l
87.0909 58.2764 l
87.1616 58.5149 l
87.3030 58.9910 l
87.3737 59.2287 l
87.4444 59.4662 l
87.5151 59.7034 l
87.5858 59.9403 l
87.6565 60.1769 l
87.7979 60.6494 l
87.8686 60.8853 l
87.9393 61.1209 l
88.0100 61.3563 l
88.0808 61.5914 l
88.2222 62.0609 l
88.2929 62.2952 l
88.4343 62.7631 l
88.5050 62.9967 l
88.5757 63.2300 l
88.6464 63.4631 l
88.7878 63.9285 l
88.8585 64.1608 l
88.9292 64.3929 l
88.9999 64.6247 l
89.1414 65.0876 l
89.2828 65.5495 l
89.4242 66.0103 l
89.4949 66.2404 l
89.5656 66.4703 l
89.6363 66.6998 l
89.7070 66.9292 l
89.8484 67.3871 l
89.9191 67.6157 l
90.0605 68.0722 l
90.1313 68.3001 l
90.2727 68.7551 l
90.3434 68.9822 l
90.4848 69.4357 l
90.5555 69.6622 l
90.6969 70.1143 l
90.8383 70.5654 l
90.9090 70.7906 l
90.9797 71.0156 l
91.0504 71.2404 l
91.1919 71.6891 l
91.2626 71.9132 l
91.4040 72.3605 l
91.4747 72.5838 l
91.6161 73.0298 l
91.6868 73.2524 l
91.7575 73.4748 l
91.8989 73.9188 l
92.0403 74.3620 l
92.1111 74.5832 l
92.2525 75.0249 l
92.3939 75.4657 l
92.5353 75.9057 l
92.6767 76.3447 l
92.8181 76.7827 l
92.8888 77.0014 l
93.0302 77.4381 l
93.1010 77.6561 l
93.2424 78.0915 l
93.3131 78.3088 l
93.4545 78.7428 l
93.5959 79.1759 l
93.7373 79.6082 l
93.8787 80.0395 l
93.9494 80.2548 l
94.0909 80.6848 l
94.2323 81.1139 l
94.3737 81.5421 l
94.4444 81.7559 l
94.5151 81.9695 l
94.6565 82.3960 l
94.7979 82.8216 l
94.8686 83.0341 l
94.9393 83.2463 l
95.0100 83.4584 l
95.1515 83.8818 l
95.2222 84.0932 l
95.2929 84.3044 l
95.4343 84.7261 l
95.5050 84.9367 l
95.6464 85.3571 l
95.7171 85.5670 l
95.8585 85.9862 l
95.9292 86.1955 l
96.0706 86.6134 l
96.2121 87.0304 l
96.2828 87.2387 l
96.4242 87.6544 l
96.4949 87.8620 l
96.6363 88.2766 l
96.7070 88.4836 l
96.7777 88.6903 l
96.9191 89.1032 l
96.9898 89.3093 l
97.1313 89.7210 l
97.2020 89.9265 l
97.3434 90.3369 l
97.4141 90.5419 l
97.4848 90.7466 l
97.5555 90.9511 l
97.6969 91.3595 l
97.8383 91.7670 l
97.9797 92.1738 l
98.1212 92.5798 l
98.2626 92.9849 l
98.4040 93.3893 l
98.5454 93.7928 l
98.6161 93.9943 l
98.7575 94.3967 l
98.8282 94.5976 l
98.9696 94.9988 l
99.0403 95.1991 l
99.1818 95.5991 l
99.3232 95.9983 l
99.4646 96.3967 l
99.6060 96.7944 l
99.7474 97.1913 l
99.8888 97.5874 l
99.9595 97.7852 l
100.030 97.9827 l
100.171 98.3773 l
100.242 98.5743 l
100.383 98.9678 l
100.525 99.3604 l
100.595 99.5564 l
100.737 99.9480 l
100.808 100.143 l
100.878 100.338 l
101.020 100.728 l
101.090 100.923 l
101.232 101.312 l
101.303 101.506 l
101.444 101.894 l
101.585 102.281 l
101.727 102.667 l
101.868 103.053 l
101.939 103.245 l
102.080 103.630 l
102.222 104.013 l
102.363 104.396 l
102.434 104.588 l
102.575 104.969 l
102.646 105.160 l
102.787 105.541 l
102.929 105.921 l
103.000 106.111 l
103.141 106.490 l
103.282 106.868 l
103.353 107.057 l
103.494 107.434 l
103.565 107.622 l
103.707 107.998 l
103.777 108.186 l
103.919 108.561 l
104.060 108.936 l
104.202 109.309 l
104.343 109.682 l
104.414 109.869 l
104.555 110.240 l
104.697 110.612 l
104.838 110.982 l
104.979 111.352 l
105.121 111.721 l
105.262 112.090 l
105.333 112.274 l
105.474 112.641 l
105.616 113.008 l
105.757 113.374 l
105.899 113.739 l
105.969 113.922 l
106.111 114.286 l
106.252 114.650 l
106.393 115.013 l
106.535 115.375 l
106.606 115.556 l
106.747 115.918 l
106.818 116.098 l
106.888 116.278 l
107.030 116.638 l
107.101 116.818 l
107.242 117.177 l
107.313 117.357 l
107.454 117.715 l
107.525 117.893 l
107.595 118.072 l
107.737 118.429 l
107.808 118.607 l
107.949 118.963 l
108.020 119.140 l
108.161 119.495 l
108.303 119.849 l
108.444 120.203 l
108.585 120.556 l
108.727 120.908 l
108.868 121.260 l
108.939 121.435 l
109.080 121.786 l
109.222 122.136 l
109.363 122.486 l
109.505 122.834 l
109.646 123.183 l
109.787 123.530 l
109.929 123.877 l
110.070 124.223 l
110.141 124.396 l
110.282 124.742 l
110.424 125.086 l
110.565 125.431 l
110.707 125.774 l
110.848 126.117 l
110.989 126.459 l
111.131 126.801 l
111.272 127.142 l
111.343 127.312 l
111.484 127.653 l
111.555 127.823 l
111.697 128.162 l
111.838 128.501 l
111.979 128.839 l
112.050 129.008 l
112.191 129.345 l
112.333 129.681 l
112.474 130.017 l
112.616 130.353 l
112.757 130.688 l
112.899 131.022 l
113.040 131.356 l
113.181 131.689 l
113.252 131.855 l
113.393 132.187 l
113.535 132.519 l
113.676 132.850 l
113.818 133.181 l
113.959 133.511 l
114.101 133.840 l
114.242 134.169 l
114.383 134.497 l
114.525 134.825 l
114.666 135.152 l
114.808 135.478 l
114.949 135.804 l
115.020 135.967 l
115.161 136.292 l
115.303 136.617 l
115.444 136.941 l
115.656 137.426 l
115.798 137.748 l
115.939 138.070 l
116.080 138.392 l
116.222 138.713 l
116.292 138.873 l
116.505 139.353 l
116.646 139.673 l
116.787 139.991 l
116.929 140.310 l
117.070 140.627 l
117.212 140.945 l
117.353 141.261 l
117.494 141.577 l
117.565 141.735 l
117.707 142.051 l
117.848 142.365 l
117.989 142.680 l
118.131 142.993 l
118.272 143.307 l
118.414 143.619 l
118.555 143.931 l
118.626 144.087 l
118.767 144.399 l
118.909 144.710 l
119.050 145.020 l
119.191 145.330 l
119.333 145.639 l
119.545 146.102 l
119.757 146.564 l
119.899 146.871 l
120.040 147.178 l
120.181 147.484 l
120.323 147.790 l
120.393 147.943 l
120.535 148.248 l
120.676 148.552 l
120.888 149.008 l
121.030 149.311 l
121.171 149.614 l
121.242 149.765 l
121.383 150.067 l
121.525 150.369 l
121.666 150.670 l
121.808 150.970 l
121.949 151.270 l
122.090 151.570 l
122.161 151.719 l
122.303 152.018 l
122.444 152.316 l
122.515 152.465 l
122.656 152.763 l
122.798 153.060 l
122.939 153.357 l
123.080 153.653 l
123.151 153.801 l
123.363 154.244 l
123.505 154.538 l
123.646 154.833 l
123.787 155.126 l
123.929 155.420 l
124.070 155.712 l
124.212 156.005 l
124.353 156.297 l
124.494 156.588 l
124.707 157.024 l
124.848 157.315 l
124.919 157.460 l
125.131 157.894 l
125.272 158.183 l
125.484 158.615 l
125.626 158.903 l
125.767 159.190 l
125.909 159.477 l
126.050 159.763 l
126.191 160.049 l
126.333 160.334 l
126.474 160.619 l
126.616 160.904 l
126.757 161.188 l
126.969 161.613 l
127.111 161.896 l
127.252 162.179 l
127.393 162.461 l
127.535 162.743 l
127.676 163.024 l
127.818 163.305 l
127.959 163.585 l
128.101 163.865 l
128.313 164.284 l
128.454 164.563 l
128.595 164.841 l
128.808 165.258 l
129.020 165.673 l
129.161 165.950 l
129.303 166.226 l
129.444 166.502 l
129.585 166.777 l
129.727 167.052 l
129.868 167.327 l
130.080 167.738 l
130.222 168.011 l
130.363 168.284 l
130.575 168.693 l
130.717 168.965 l
130.858 169.236 l
131.000 169.508 l
131.141 169.778 l
131.282 170.049 l
131.424 170.318 l
131.565 170.588 l
131.707 170.857 l
131.848 171.126 l
131.989 171.394 l
132.131 171.662 l
132.272 171.929 l
132.484 172.330 l
132.696 172.729 l
132.909 173.128 l
133.121 173.525 l
133.262 173.790 l
133.474 174.186 l
133.616 174.450 l
133.757 174.713 l
133.969 175.107 l
134.111 175.369 l
134.252 175.631 l
134.393 175.893 l
134.535 176.154 l
134.676 176.414 l
134.818 176.675 l
135.030 177.064 l
135.171 177.324 l
135.313 177.583 l
135.454 177.841 l
135.595 178.099 l
135.737 178.357 l
135.878 178.615 l
136.090 179.000 l
136.303 179.384 l
136.373 179.512 l
136.515 179.768 l
136.727 180.151 l
136.939 180.533 l
137.080 180.787 l
137.222 181.041 l
137.363 181.294 l
137.505 181.547 l
137.646 181.800 l
137.858 182.178 l
138.000 182.430 l
138.141 182.682 l
138.353 183.058 l
138.494 183.309 l
138.707 183.684 l
138.919 184.058 l
139.060 184.307 l
139.202 184.555 l
139.343 184.804 l
139.555 185.176 l
139.626 185.299 l
139.838 185.670 l
139.979 185.917 l
140.121 186.163 l
140.333 186.532 l
140.545 186.900 l
140.686 187.145 l
140.828 187.389 l
141.040 187.756 l
141.181 187.999 l
141.393 188.364 l
141.535 188.607 l
141.747 188.971 l
141.888 189.212 l
142.101 189.575 l
142.171 189.695 l
142.313 189.936 l
142.525 190.297 l
142.737 190.657 l
142.878 190.897 l
143.020 191.136 l
143.232 191.494 l
143.444 191.851 l
143.585 192.089 l
143.798 192.445 l
144.010 192.801 l
144.151 193.037 l
144.363 193.391 l
144.575 193.745 l
144.717 193.980 l
144.858 194.215 l
145.070 194.567 l
145.282 194.918 l
145.494 195.268 l
145.707 195.617 l
145.848 195.850 l
145.989 196.082 l
146.202 196.430 l
146.343 196.661 l
146.484 196.892 l
146.626 197.123 l
146.696 197.239 l
146.838 197.469 l
146.979 197.699 l
147.121 197.929 l
147.262 198.158 l
147.404 198.387 l
147.616 198.730 l
147.828 199.072 l
147.969 199.300 l
148.111 199.527 l
148.323 199.868 l
148.535 200.208 l
148.606 200.321 l
148.818 200.660 l
149.030 200.999 l
149.101 201.111 l
149.313 201.449 l
149.454 201.673 l
149.595 201.897 l
149.808 202.233 l
149.949 202.457 l
150.090 202.680 l
150.303 203.014 l
150.444 203.236 l
150.656 203.569 l
150.797 203.791 l
151.010 204.123 l
151.222 204.454 l
151.363 204.675 l
151.575 205.005 l
151.787 205.334 l
151.929 205.554 l
152.141 205.882 l
152.353 206.210 l
152.494 206.428 l
152.636 206.646 l
152.848 206.972 l
153.060 207.297 l
153.202 207.514 l
153.414 207.838 l
153.555 208.054 l
153.696 208.270 l
153.909 208.593 l
154.050 208.808 l
154.262 209.130 l
154.474 209.451 l
154.686 209.771 l
154.899 210.091 l
155.040 210.304 l
155.181 210.517 l
155.323 210.729 l
155.535 211.047 l
155.747 211.365 l
155.888 211.576 l
156.101 211.892 l
156.242 212.103 l
156.383 212.313 l
156.595 212.628 l
156.737 212.838 l
156.878 213.047 l
157.090 213.361 l
157.303 213.674 l
157.515 213.986 l
157.656 214.194 l
157.797 214.401 l
158.010 214.712 l
158.151 214.919 l
158.292 215.126 l
158.505 215.435 l
158.717 215.744 l
158.787 215.847 l
159.000 216.155 l
159.212 216.462 l
159.424 216.769 l
159.636 217.075 l
159.777 217.279 l
159.919 217.483 l
160.131 217.787 l
160.343 218.092 l
160.555 218.395 l
160.767 218.699 l
160.909 218.900 l
161.050 219.102 l
161.262 219.404 l
161.474 219.705 l
161.686 220.005 l
161.828 220.206 l
162.040 220.505 l
162.181 220.705 l
162.323 220.904 l
162.464 221.103 l
162.676 221.401 l
162.888 221.698 l
163.101 221.995 l
163.313 222.291 l
163.454 222.488 l
163.737 222.882 l
163.949 223.177 l
164.161 223.471 l
164.373 223.764 l
164.585 224.057 l
164.797 224.349 l
164.939 224.544 l
165.151 224.836 l
165.292 225.030 l
165.505 225.320 l
165.717 225.610 l
165.929 225.900 l
166.141 226.189 l
166.424 226.573 l
166.636 226.861 l
166.777 227.052 l
166.989 227.339 l
167.202 227.625 l
167.414 227.911 l
167.626 228.196 l
167.767 228.386 l
167.979 228.670 l
168.121 228.859 l
168.404 229.237 l
168.616 229.520 l
168.828 229.802 l
169.040 230.084 l
169.181 230.271 l
169.464 230.646 l
169.676 230.926 l
169.888 231.206 l
170.030 231.392 l
170.313 231.763 l
170.595 232.134 l
170.737 232.319 l
170.949 232.596 l
171.232 232.965 l
171.444 233.241 l
171.585 233.425 l
171.868 233.791 l
172.151 234.157 l
172.434 234.522 l
172.505 234.613 l
172.717 234.886 l
172.787 234.977 l
173.000 235.249 l
173.212 235.521 l
173.494 235.883 l
173.707 236.153 l
173.848 236.334 l
174.060 236.604 l
174.272 236.873 l
174.484 237.142 l
174.696 237.410 l
174.838 237.589 l
174.979 237.767 l
175.191 238.035 l
175.404 238.302 l
175.616 238.568 l
175.828 238.834 l
175.969 239.011 l
176.181 239.276 l
176.464 239.629 l
176.747 239.981 l
176.959 240.244 l
177.101 240.419 l
177.313 240.682 l
177.454 240.857 l
177.666 241.119 l
177.878 241.380 l
178.090 241.641 l
178.303 241.901 l
178.444 242.075 l
178.656 242.335 l
178.868 242.594 l
179.080 242.853 l
179.222 243.025 l
179.434 243.283 l
179.646 243.541 l
179.858 243.798 l
180.070 244.054 l
180.212 244.225 l
180.353 244.396 l
180.565 244.652 l
180.777 244.907 l
180.989 245.162 l
181.131 245.331 l
181.343 245.585 l
181.626 245.923 l
181.838 246.176 l
182.121 246.513 l
182.333 246.765 l
182.474 246.933 l
182.616 247.100 l
182.757 247.268 l
183.040 247.602 l
183.252 247.852 l
183.535 248.185 l
183.747 248.434 l
183.888 248.600 l
184.030 248.766 l
184.313 249.097 l
184.525 249.344 l
184.666 249.509 l
184.949 249.838 l
185.232 250.167 l
185.515 250.494 l
185.656 250.658 l
185.868 250.903 l
186.080 251.147 l
186.292 251.391 l
186.575 251.716 l
186.858 252.040 l
187.070 252.283 l
187.282 252.525 l
187.424 252.686 l
187.494 252.677 l
187.707 252.893 l
187.989 253.181 l
188.272 253.468 l
188.484 253.683 l
188.696 253.898 l
188.979 254.183 l
189.191 254.397 l
189.474 254.682 l
189.616 254.824 l
189.828 255.037 l
190.111 255.320 l
190.323 255.533 l
190.606 255.815 l
190.888 256.097 l
191.101 256.308 l
191.383 256.589 l
191.595 256.799 l
191.878 257.079 l
192.161 257.359 l
192.373 257.568 l
192.656 257.847 l
192.939 258.125 l
193.222 258.402 l
193.434 258.610 l
193.646 258.817 l
193.929 259.093 l
194.141 259.300 l
194.424 259.575 l
194.636 259.782 l
194.919 260.056 l
195.060 260.193 l
195.343 260.466 l
195.626 260.739 l
195.838 260.944 l
196.050 261.148 l
196.404 261.487 l
196.474 261.555 l
196.757 261.826 l
197.111 262.164 l
197.323 262.366 l
197.464 262.501 l
197.676 262.703 l
197.959 262.972 l
198.101 263.106 l
198.313 263.307 l
198.454 263.441 l
198.666 263.641 l
199.020 263.975 l
199.161 264.108 l
199.444 264.374 l
199.797 264.706 l
200.080 264.971 l
200.292 265.170 l
200.434 265.302 l
200.787 265.632 l
201.141 265.961 l
201.494 266.289 l
201.777 266.551 l
202.131 266.878 l
202.484 267.204 l
202.555 267.269 l
202.909 267.594 l
203.121 267.789 l
203.333 267.983 l
203.545 268.178 l
203.828 268.436 l
204.040 268.630 l
204.393 268.952 l
204.606 269.145 l
204.818 269.337 l
205.030 269.530 l
205.313 269.786 l
205.525 269.977 l
205.737 270.169 l
206.020 270.424 l
206.161 270.551 l
206.373 270.742 l
206.656 270.995 l
206.939 271.249 l
207.151 271.439 l
207.505 271.754 l
207.717 271.943 l
208.000 272.195 l
208.282 272.446 l
208.494 272.634 l
208.707 272.822 l
208.919 273.009 l
209.202 273.259 l
209.484 273.508 l
209.767 273.757 l
209.979 273.944 l
210.333 274.253 l
210.545 274.439 l
210.757 274.624 l
211.111 274.933 l
211.393 275.179 l
211.676 275.425 l
211.818 275.548 l
212.101 275.793 l
212.383 276.037 l
212.454 276.099 l
212.595 276.221 l
212.666 276.282 l
212.737 276.343 l
213.020 276.586 l
213.232 276.769 l
213.515 277.012 l
213.585 277.072 l
213.797 277.254 l
214.010 277.436 l
214.222 277.617 l
214.505 277.859 l
214.646 277.979 l
215.000 278.280 l
215.212 278.460 l
215.424 278.640 l
215.707 278.880 l
215.989 279.119 l
216.131 279.239 l
216.272 279.358 l
216.555 279.596 l
216.838 279.834 l
217.121 280.072 l
217.474 280.368 l
217.686 280.546 l
217.969 280.782 l
218.111 280.900 l
218.252 281.018 l
218.535 281.253 l
218.888 281.547 l
219.030 281.664 l
219.242 281.840 l
219.454 282.015 l
219.808 282.307 l
220.020 282.482 l
220.373 282.773 l
220.585 282.948 l
220.939 283.238 l
221.292 283.527 l
221.505 283.700 l
221.787 283.931 l
222.070 284.162 l
222.282 284.334 l
222.494 284.506 l
222.777 284.736 l
222.989 284.908 l
223.131 285.022 l
223.414 285.250 l
223.696 285.478 l
223.979 285.706 l
224.333 285.990 l
224.474 286.104 l
224.828 286.387 l
225.111 286.613 l
225.252 286.726 l
225.464 286.895 l
225.747 287.120 l
226.030 287.345 l
226.242 287.514 l
226.383 287.626 l
226.666 287.850 l
226.949 288.073 l
227.161 288.241 l
227.444 288.464 l
227.656 288.631 l
227.939 288.853 l
228.080 288.964 l
228.363 289.186 l
228.646 289.407 l
228.858 289.573 l
229.141 289.794 l
229.424 290.014 l
229.777 290.289 l
230.060 290.509 l
230.272 290.673 l
230.696 291.001 l
231.050 291.274 l
231.333 291.492 l
231.616 291.709 l
232.040 292.035 l
232.111 292.089 l
232.181 292.143 l
232.535 292.414 l
232.747 292.576 l
233.030 292.791 l
233.313 293.007 l
233.525 293.168 l
233.808 293.382 l
234.090 293.597 l
234.444 293.864 l
234.515 293.918 l
234.585 293.971 l
234.656 294.024 l
234.939 294.238 l
235.151 294.397 l
235.505 294.663 l
235.575 294.716 l
235.717 294.822 l
235.787 294.875 l
235.858 294.928 l
236.212 295.193 l
236.565 295.457 l
236.777 295.615 l
237.060 295.826 l
237.414 296.089 l
237.626 296.246 l
237.696 296.299 l
237.909 296.456 l
238.191 296.665 l
238.333 296.769 l
238.616 296.978 l
238.757 297.082 l
238.969 297.239 l
239.393 297.550 l
239.606 297.706 l
239.888 297.913 l
240.171 298.120 l
240.525 298.378 l
240.878 298.636 l
241.161 298.841 l
241.373 298.996 l
241.444 299.047 l
241.515 299.098 l
241.868 299.354 l
242.222 299.610 l
242.505 299.814 l
242.858 300.069 l
243.212 300.323 l
243.636 300.627 l
243.919 300.830 l
244.060 300.931 l
244.202 301.032 l
244.343 301.133 l
244.696 301.385 l
245.050 301.636 l
245.474 301.937 l
245.757 302.138 l
246.040 302.338 l
246.111 302.388 l
246.181 302.438 l
246.535 302.687 l
246.747 302.836 l
247.101 303.085 l
247.383 303.284 l
247.595 303.432 l
247.878 303.630 l
248.232 303.877 l
248.515 304.075 l
248.868 304.321 l
248.939 304.370 l
249.010 304.419 l
249.292 304.615 l
249.505 304.763 l
249.787 304.958 l
250.212 305.252 l
250.424 305.398 l
250.636 305.544 l
250.707 305.593 l
250.777 305.642 l
251.131 305.885 l
251.414 306.079 l
251.838 306.369 l
252.050 306.514 l
252.333 306.707 l
252.474 306.804 l
252.545 306.852 l
252.616 306.900 l
253.040 307.189 l
253.393 307.429 l
253.606 307.573 l
253.888 307.764 l
254.171 307.955 l
254.454 308.146 l
254.595 308.241 l
254.949 308.479 l
255.020 308.527 l
255.303 308.717 l
255.585 308.907 l
255.939 309.143 l
256.080 309.238 l
256.222 309.332 l
256.575 309.568 l
256.858 309.756 l
256.999 309.850 l
257.141 309.944 l
257.494 310.179 l
257.636 310.273 l
257.919 310.460 l
258.202 310.647 l
258.414 310.787 l
258.626 310.927 l
258.838 311.067 l
259.191 311.299 l
259.474 311.485 l
259.545 311.531 l
259.757 311.670 l
259.898 311.763 l
260.040 311.855 l
260.393 312.086 l
260.676 312.271 l
260.959 312.455 l
261.171 312.593 l
261.454 312.777 l
261.737 312.960 l
261.878 313.052 l
262.232 313.280 l
262.515 313.463 l
262.585 313.509 l
262.656 313.554 l
262.727 313.600 l
262.797 313.645 l
263.080 313.828 l
263.292 313.964 l
263.434 314.055 l
263.717 314.236 l
263.929 314.372 l
264.282 314.598 l
264.494 314.734 l
264.565 314.779 l
264.636 314.824 l
264.848 314.959 l
264.919 315.004 l
265.202 315.184 l
265.343 315.274 l
265.555 315.409 l
265.696 315.499 l
265.838 315.589 l
266.121 315.768 l
266.333 315.902 l
266.616 316.081 l
266.757 316.170 l
266.828 316.214 l
266.898 316.259 l
267.252 316.482 l
267.535 316.659 l
267.676 316.748 l
267.818 316.837 l
267.888 316.881 l
267.959 316.926 l
268.171 317.059 l
268.313 317.147 l
268.454 317.236 l
268.595 317.324 l
268.666 317.368 l
268.737 317.412 l
269.161 317.677 l
269.444 317.853 l
269.656 317.985 l
269.797 318.072 l
270.151 318.292 l
270.292 318.379 l
270.575 318.554 l
270.717 318.642 l
270.787 318.685 l
270.858 318.729 l
271.212 318.947 l
271.636 319.208 l
271.848 319.338 l
272.060 319.469 l
272.343 319.642 l
272.555 319.772 l
272.838 319.945 l
272.979 320.031 l
273.191 320.161 l
273.474 320.333 l
273.686 320.462 l
274.111 320.720 l
274.393 320.891 l
274.747 321.105 l
275.030 321.276 l
275.383 321.490 l
275.666 321.660 l
275.878 321.788 l
275.949 321.830 l
276.020 321.873 l
276.232 322.000 l
276.444 322.127 l
276.797 322.339 l
276.939 322.424 l
277.292 322.635 l
277.363 322.677 l
277.434 322.719 l
277.505 322.761 l
277.575 322.804 l
277.999 323.056 l
278.353 323.266 l
278.707 323.476 l
278.848 323.560 l
278.919 323.602 l
279.202 323.769 l
279.555 323.978 l
279.838 324.145 l
280.191 324.353 l
280.545 324.560 l
280.757 324.685 l
280.969 324.809 l
281.040 324.851 l
281.111 324.892 l
281.323 325.016 l
281.535 325.140 l
281.747 325.264 l
281.959 325.388 l
282.242 325.552 l
282.454 325.676 l
282.808 325.881 l
283.020 326.004 l
283.373 326.209 l
283.727 326.413 l
284.010 326.577 l
284.292 326.740 l
284.434 326.821 l
284.787 327.024 l
284.999 327.146 l
285.141 327.227 l
285.424 327.389 l
285.707 327.551 l
286.131 327.794 l
286.272 327.874 l
286.626 328.076 l
286.909 328.237 l
287.050 328.317 l
287.121 328.357 l
287.262 328.437 l
287.616 328.638 l
287.898 328.798 l
288.040 328.878 l
288.111 328.918 l
288.181 328.958 l
288.393 329.078 l
288.464 329.117 l
288.535 329.157 l
288.888 329.357 l
289.171 329.516 l
289.454 329.674 l
289.878 329.912 l
290.090 330.031 l
290.373 330.189 l
290.656 330.347 l
290.939 330.505 l
291.292 330.702 l
291.505 330.819 l
291.717 330.937 l
291.999 331.094 l
292.353 331.290 l
292.636 331.446 l
293.060 331.680 l
293.272 331.797 l
293.696 332.031 l
293.979 332.186 l
294.333 332.380 l
294.616 332.535 l
294.757 332.612 l
295.040 332.767 l
295.323 332.921 l
295.676 333.113 l
295.888 333.229 l
296.030 333.306 l
296.313 333.459 l
296.666 333.651 l
296.949 333.804 l
297.020 333.842 l
297.090 333.880 l
297.232 333.957 l
297.515 334.110 l
297.585 334.148 l
297.656 334.186 l
297.939 334.338 l
298.151 334.452 l
298.222 334.490 l
298.363 334.566 l
298.717 334.756 l
298.929 334.870 l
298.999 334.908 l
299.070 334.945 l
299.353 335.097 l
299.494 335.172 l
299.565 335.210 l
299.636 335.248 l
299.919 335.399 l
300.202 335.549 l
300.414 335.662 l
300.838 335.888 l
301.050 336.000 l
301.474 336.225 l
301.545 336.262 l
301.616 336.300 l
301.686 336.337 l
302.040 336.524 l
302.252 336.636 l
302.393 336.710 l
302.606 336.822 l
302.888 336.971 l
303.030 337.045 l
303.313 337.193 l
303.666 337.379 l
303.878 337.490 l
304.020 337.563 l
304.373 337.748 l
304.656 337.896 l
304.939 338.043 l
305.292 338.227 l
305.363 338.263 l
305.434 338.300 l
305.717 338.447 l
306.070 338.630 l
306.424 338.813 l
306.636 338.922 l
306.989 339.105 l
307.484 339.359 l
307.696 339.468 l
308.050 339.650 l
308.121 339.686 l
308.262 339.759 l
308.474 339.867 l
308.828 340.048 l
309.252 340.264 l
309.606 340.444 l
309.959 340.624 l
310.242 340.768 l
310.383 340.840 l
310.808 341.054 l
311.161 341.233 l
311.515 341.412 l
311.868 341.590 l
312.151 341.732 l
312.222 341.768 l
312.434 341.874 l
312.575 341.945 l
312.999 342.158 l
313.424 342.370 l
313.565 342.441 l
313.636 342.476 l
313.707 342.512 l
314.060 342.688 l
314.131 342.723 l
314.202 342.758 l
314.272 342.794 l
314.343 342.829 l
314.696 343.005 l
314.767 343.040 l
314.838 343.075 l
315.191 343.250 l
315.404 343.355 l
315.757 343.530 l
315.898 343.600 l
316.252 343.775 l
316.393 343.845 l
316.535 343.914 l
316.606 343.949 l
316.888 344.088 l
317.101 344.193 l
317.171 344.227 l
317.454 344.366 l
317.525 344.401 l
317.595 344.436 l
317.808 344.540 l
318.090 344.678 l
318.161 344.713 l
318.232 344.747 l
318.585 344.920 l
319.010 345.127 l
319.222 345.230 l
319.292 345.264 l
319.363 345.299 l
319.575 345.402 l
319.929 345.573 l
320.212 345.710 l
320.494 345.847 l
320.919 346.052 l
321.202 346.189 l
321.484 346.325 l
321.909 346.529 l
322.050 346.597 l
322.191 346.665 l
322.262 346.699 l
322.474 346.801 l
322.616 346.869 l
322.969 347.038 l
323.323 347.207 l
323.606 347.342 l
323.959 347.510 l
324.030 347.544 l
324.313 347.678 l
324.383 347.712 l
324.454 347.746 l
324.949 347.980 l
325.161 348.081 l
325.232 348.114 l
325.656 348.315 l
325.939 348.449 l
326.010 348.482 l
326.080 348.515 l
326.292 348.615 l
326.646 348.782 l
326.929 348.915 l
327.353 349.114 l
327.636 349.246 l
327.919 349.379 l
328.131 349.478 l
328.484 349.643 l
328.696 349.742 l
328.838 349.808 l
329.050 349.906 l
329.262 350.005 l
329.333 350.038 l
329.404 350.071 l
329.686 350.202 l
330.040 350.366 l
330.393 350.530 l
330.959 350.791 l
331.242 350.921 l
331.313 350.954 l
331.383 350.986 l
331.808 351.181 l
331.878 351.214 l
331.949 351.246 l
332.302 351.409 l
332.727 351.603 l
333.080 351.765 l
333.363 351.894 l
333.434 351.926 l
333.505 351.958 l
333.858 352.119 l
334.282 352.312 l
334.494 352.409 l
334.707 352.505 l
334.989 352.633 l
335.272 352.761 l
335.626 352.921 l
335.979 353.081 l
336.050 353.113 l
336.121 353.145 l
336.474 353.304 l
336.686 353.399 l
337.040 353.558 l
337.252 353.653 l
337.676 353.843 l
338.100 354.033 l
338.383 354.160 l
338.737 354.317 l
338.949 354.412 l
339.090 354.475 l
339.161 354.506 l
339.302 354.569 l
339.515 354.663 l
339.797 354.789 l
339.868 354.820 l
339.939 354.851 l
340.010 354.883 l
340.080 354.914 l
340.222 354.977 l
340.434 355.071 l
340.575 355.133 l
340.929 355.289 l
341.353 355.476 l
341.707 355.632 l
341.777 355.663 l
342.060 355.787 l
342.131 355.818 l
342.201 355.850 l
342.484 355.974 l
342.555 356.005 l
342.626 356.036 l
342.696 356.067 l
342.767 356.098 l
342.979 356.190 l
343.050 356.221 l
343.121 356.252 l
343.333 356.345 l
343.545 356.437 l
343.828 356.561 l
344.111 356.684 l
344.606 356.899 l
344.959 357.053 l
345.171 357.145 l
345.454 357.267 l
345.808 357.420 l
346.161 357.573 l
346.232 357.603 l
346.302 357.634 l
346.444 357.695 l
346.585 357.755 l
346.727 357.816 l
346.797 357.847 l
347.151 357.999 l
347.292 358.059 l
347.363 358.090 l
347.434 358.120 l
347.505 358.151 l
347.575 358.181 l
347.646 358.211 l
347.787 358.272 l
348.070 358.393 l
348.212 358.453 l
348.282 358.484 l
348.353 358.514 l
348.494 358.574 l
348.565 358.604 l
348.636 358.635 l
348.707 358.665 l
348.777 358.695 l
348.919 358.755 l
349.201 358.876 l
349.484 358.996 l
349.626 359.056 l
349.696 359.086 l
349.838 359.146 l
350.050 359.236 l
350.121 359.266 l
350.191 359.296 l
350.333 359.356 l
350.404 359.386 l
350.545 359.446 l
350.969 359.626 l
351.040 359.655 l
351.111 359.685 l
351.323 359.775 l
351.606 359.894 l
351.888 360.013 l
352.383 360.221 l
352.454 360.251 l
352.525 360.281 l
352.808 360.400 l
353.020 360.488 l
353.090 360.518 l
353.161 360.548 l
353.232 360.577 l
353.302 360.607 l
353.373 360.636 l
353.444 360.666 l
353.797 360.814 l
353.939 360.873 l
354.010 360.902 l
354.222 360.991 l
354.505 361.108 l
354.787 361.226 l
354.858 361.256 l
354.929 361.285 l
355.070 361.344 l
355.141 361.373 l
355.212 361.402 l
355.353 361.461 l
355.494 361.520 l
355.565 361.549 l
355.707 361.608 l
355.777 361.637 l
355.848 361.666 l
356.131 361.783 l
356.272 361.842 l
356.343 361.871 l
356.484 361.929 l
356.696 362.017 l
356.979 362.133 l
357.262 362.250 l
357.333 362.279 l
357.474 362.337 l
357.898 362.511 l
358.323 362.685 l
358.464 362.743 l
358.535 362.772 l
358.606 362.801 l
358.747 362.859 l
358.818 362.888 l
359.242 363.061 l
359.383 363.119 l
359.454 363.147 l
359.595 363.205 l
359.949 363.349 l
360.302 363.493 l
360.373 363.522 l
360.444 363.550 l
360.797 363.694 l
360.868 363.722 l
360.939 363.751 l
361.292 363.894 l
361.434 363.951 l
361.575 364.008 l
361.646 364.037 l
361.858 364.123 l
361.929 364.151 l
361.999 364.180 l
362.282 364.294 l
362.353 364.322 l
362.424 364.351 l
362.494 364.379 l
362.636 364.436 l
362.919 364.550 l
362.989 364.578 l
363.131 364.635 l
363.201 364.663 l
363.272 364.692 l
363.343 364.720 l
363.555 364.805 l
363.979 364.975 l
364.050 365.003 l
364.191 365.060 l
364.333 365.116 l
364.404 365.145 l
364.474 365.173 l
364.545 365.201 l
364.686 365.258 l
364.757 365.286 l
365.040 365.398 l
365.393 365.539 l
365.676 365.652 l
365.959 365.764 l
366.030 365.792 l
366.101 365.820 l
366.313 365.904 l
366.383 365.932 l
366.525 365.988 l
366.595 366.016 l
366.666 366.044 l
367.020 366.184 l
367.090 366.212 l
367.161 366.240 l
367.585 366.407 l
367.656 366.435 l
367.727 366.463 l
368.080 366.602 l
368.151 366.630 l
368.222 366.658 l
368.646 366.824 l
369.070 366.990 l
369.141 367.018 l
369.212 367.046 l
369.282 367.074 l
369.353 367.101 l
369.424 367.129 l
369.707 367.239 l
370.131 367.405 l
370.201 367.433 l
370.272 367.460 l
370.414 367.515 l
370.696 367.625 l
370.767 367.653 l
370.909 367.708 l
370.979 367.735 l
371.050 367.763 l
371.121 367.790 l
371.191 367.818 l
371.333 367.873 l
371.757 368.037 l
371.828 368.065 l
371.898 368.092 l
371.969 368.119 l
372.040 368.147 l
372.323 368.256 l
372.393 368.283 l
372.535 368.338 l
372.606 368.365 l
372.747 368.420 l
372.818 368.447 l
372.888 368.475 l
372.959 368.502 l
373.030 368.529 l
373.100 368.556 l
373.242 368.611 l
373.383 368.665 l
373.525 368.720 l
373.595 368.747 l
373.666 368.774 l
373.737 368.801 l
373.808 368.828 l
373.949 368.883 l
374.090 368.937 l
374.161 368.964 l
374.232 368.991 l
374.373 369.046 l
374.444 369.073 l
374.515 369.100 l
374.585 369.127 l
374.797 369.208 l
374.868 369.235 l
374.939 369.262 l
375.080 369.316 l
375.434 369.451 l
375.717 369.559 l
375.787 369.586 l
375.929 369.640 l
375.999 369.667 l
376.070 369.694 l
376.141 369.721 l
376.212 369.748 l
376.282 369.775 l
376.565 369.882 l
376.777 369.963 l
377.060 370.070 l
377.414 370.204 l
377.626 370.284 l
378.050 370.445 l
378.121 370.471 l
378.262 370.525 l
378.404 370.578 l
378.474 370.605 l
378.757 370.711 l
378.828 370.738 l
378.898 370.764 l
378.969 370.791 l
379.040 370.818 l
379.111 370.844 l
379.252 370.897 l
379.323 370.924 l
379.393 370.951 l
379.464 370.977 l
379.535 371.004 l
379.888 371.136 l
379.959 371.163 l
380.030 371.189 l
380.100 371.216 l
380.313 371.295 l
380.383 371.322 l
380.525 371.375 l
381.020 371.560 l
381.090 371.586 l
381.161 371.612 l
381.302 371.665 l
381.373 371.691 l
381.515 371.744 l
381.939 371.902 l
382.222 372.007 l
382.575 372.138 l
382.787 372.217 l
382.858 372.243 l
382.929 372.269 l
382.999 372.295 l
383.141 372.348 l
383.353 372.426 l
383.424 372.452 l
383.494 372.479 l
383.919 372.635 l
383.989 372.661 l
384.060 372.687 l
384.272 372.766 l
384.343 372.792 l
384.414 372.818 l
384.484 372.844 l
384.838 372.974 l
384.909 373.000 l
384.979 373.026 l
385.050 373.052 l
385.121 373.078 l
385.262 373.130 l
385.404 373.181 l
385.474 373.207 l
385.686 373.285 l
385.757 373.311 l
385.828 373.337 l
386.040 373.415 l
386.393 373.544 l
386.606 373.621 l
386.676 373.647 l
386.747 373.673 l
386.959 373.750 l
387.030 373.776 l
387.100 373.802 l
387.171 373.827 l
387.242 373.853 l
387.313 373.879 l
387.383 373.905 l
387.525 373.956 l
387.878 374.085 l
388.161 374.187 l
388.515 374.315 l
388.727 374.392 l
388.797 374.418 l
388.868 374.443 l
389.010 374.495 l
389.151 374.546 l
389.222 374.571 l
389.292 374.597 l
389.363 374.622 l
389.504 374.673 l
389.858 374.801 l
389.929 374.826 l
390.070 374.877 l
390.212 374.928 l
390.282 374.954 l
390.424 375.004 l
390.919 375.182 l
391.060 375.233 l
391.131 375.258 l
391.272 375.309 l
391.414 375.360 l
391.484 375.385 l
391.555 375.410 l
391.838 375.512 l
392.191 375.638 l
392.333 375.688 l
392.404 375.714 l
392.474 375.739 l
392.545 375.764 l
392.686 375.814 l
392.828 375.865 l
392.898 375.890 l
392.969 375.915 l
393.111 375.966 l
393.393 376.066 l
393.676 376.167 l
394.030 376.292 l
394.313 376.392 l
394.666 376.517 l
394.949 376.617 l
395.232 376.717 l
395.373 376.767 l
395.444 376.792 l
395.727 376.892 l
395.797 376.917 l
395.868 376.941 l
395.939 376.966 l
396.010 376.991 l
396.151 377.041 l
396.292 377.091 l
396.363 377.116 l
396.434 377.140 l
396.575 377.190 l
396.858 377.289 l
397.141 377.388 l
397.282 377.438 l
397.353 377.463 l
397.424 377.487 l
397.494 377.512 l
397.636 377.562 l
397.707 377.586 l
397.777 377.611 l
397.848 377.636 l
397.919 377.660 l
398.060 377.710 l
398.201 377.759 l
398.272 377.784 l
398.484 377.858 l
398.767 377.956 l
399.050 378.055 l
399.121 378.079 l
399.191 378.104 l
399.686 378.276 l
399.828 378.325 l
399.898 378.349 l
399.969 378.374 l
400.111 378.423 l
400.323 378.496 l
400.464 378.545 l
400.535 378.569 l
400.676 378.618 l
401.030 378.740 l
401.171 378.789 l
401.242 378.814 l
401.666 378.960 l
401.737 378.984 l
401.808 379.008 l
401.878 379.033 l
402.020 379.081 l
402.373 379.203 l
402.656 379.300 l
403.010 379.421 l
403.292 379.518 l
403.434 379.566 l
403.504 379.590 l
403.575 379.615 l
403.717 379.663 l
403.929 379.735 l
403.999 379.759 l
404.070 379.784 l
404.282 379.856 l
404.424 379.904 l
404.494 379.928 l
404.565 379.952 l
404.707 380.000 l
404.919 380.072 l
404.989 380.097 l
405.060 380.121 l
405.272 380.193 l
405.414 380.241 l
405.484 380.265 l
405.555 380.289 l
405.979 380.432 l
406.403 380.576 l
406.757 380.695 l
406.969 380.767 l
407.040 380.791 l
407.111 380.815 l
407.252 380.862 l
407.323 380.886 l
407.393 380.910 l
407.606 380.981 l
407.676 381.005 l
407.747 381.029 l
408.030 381.124 l
408.313 381.219 l
408.454 381.266 l
408.525 381.290 l
408.595 381.314 l
408.737 381.361 l
409.020 381.456 l
409.090 381.480 l
409.232 381.527 l
409.444 381.598 l
409.515 381.621 l
409.656 381.669 l
409.727 381.692 l
409.797 381.716 l
410.010 381.787 l
410.222 381.857 l
410.292 381.881 l
410.363 381.905 l
410.434 381.928 l
410.575 381.975 l
410.646 381.999 l
410.717 382.022 l
410.787 382.046 l
410.999 382.116 l
411.070 382.140 l
411.424 382.257 l
411.494 382.280 l
411.565 382.304 l
411.707 382.351 l
411.777 382.374 l
411.848 382.398 l
412.131 382.491 l
412.484 382.608 l
412.626 382.655 l
412.696 382.678 l
412.767 382.702 l
412.979 382.772 l
413.050 382.795 l
413.121 382.818 l
413.191 382.841 l
413.262 382.865 l
413.333 382.888 l
413.404 382.911 l
413.474 382.935 l
413.898 383.074 l
414.040 383.121 l
414.111 383.144 l
414.181 383.167 l
414.252 383.190 l
414.606 383.306 l
414.818 383.376 l
414.888 383.399 l
415.313 383.538 l
415.595 383.630 l
415.666 383.653 l
415.737 383.676 l
415.949 383.746 l
416.020 383.769 l
416.232 383.838 l
416.302 383.861 l
416.444 383.907 l
416.656 383.976 l
417.010 384.091 l
417.151 384.137 l
417.222 384.160 l
417.292 384.183 l
417.363 384.206 l
417.504 384.251 l
417.717 384.320 l
417.787 384.343 l
417.858 384.366 l
418.141 384.458 l
418.494 384.572 l
418.565 384.595 l
418.777 384.663 l
418.848 384.686 l
418.919 384.709 l
419.201 384.800 l
419.272 384.823 l
419.343 384.846 l
419.484 384.891 l
419.555 384.914 l
419.626 384.937 l
419.979 385.050 l
420.333 385.164 l
420.686 385.277 l
421.040 385.390 l
421.111 385.413 l
421.323 385.481 l
421.464 385.526 l
421.535 385.549 l
421.747 385.616 l
421.818 385.639 l
421.888 385.662 l
422.030 385.707 l
422.100 385.729 l
422.242 385.774 l
422.525 385.864 l
422.595 385.887 l
422.666 385.909 l
422.808 385.954 l
422.878 385.977 l
422.949 385.999 l
423.161 386.067 l
423.232 386.089 l
423.373 386.134 l
423.515 386.179 l
423.585 386.201 l
423.656 386.224 l
424.010 386.336 l
424.363 386.448 l
424.434 386.470 l
424.504 386.492 l
424.646 386.537 l
424.717 386.559 l
424.787 386.582 l
425.212 386.715 l
425.494 386.805 l
425.848 386.916 l
425.919 386.938 l
425.989 386.960 l
426.131 387.005 l
426.201 387.027 l
426.414 387.093 l
426.484 387.116 l
426.555 387.138 l
426.696 387.182 l
427.050 387.293 l
427.121 387.315 l
427.191 387.337 l
427.757 387.514 l
427.898 387.558 l
427.969 387.580 l
428.040 387.602 l
428.181 387.646 l
428.464 387.735 l
428.535 387.757 l
428.606 387.779 l
428.818 387.845 l
428.888 387.867 l
428.959 387.889 l
429.242 387.976 l
429.313 387.998 l
429.383 388.020 l
429.666 388.108 l
430.090 388.240 l
430.373 388.327 l
430.444 388.349 l
430.515 388.371 l
430.727 388.436 l
430.797 388.458 l
430.939 388.502 l
431.080 388.546 l
431.151 388.567 l
431.292 388.611 l
431.504 388.676 l
431.575 388.698 l
431.646 388.720 l
431.999 388.829 l
432.353 388.937 l
432.636 389.024 l
432.707 389.046 l
432.777 389.068 l
432.989 389.133 l
433.060 389.154 l
433.201 389.198 l
433.555 389.306 l
433.696 389.349 l
433.767 389.371 l
433.838 389.392 l
433.909 389.414 l
433.979 389.435 l
434.050 389.457 l
434.333 389.543 l
434.757 389.673 l
435.040 389.759 l
435.111 389.780 l
435.181 389.802 l
435.252 389.823 l
435.323 389.845 l
435.393 389.866 l
435.464 389.888 l
435.535 389.909 l
436.030 390.059 l
436.242 390.123 l
436.313 390.145 l
436.383 390.166 l
436.666 390.252 l
436.737 390.273 l
436.808 390.295 l
437.090 390.380 l
437.161 390.401 l
437.232 390.423 l
437.373 390.465 l
437.444 390.487 l
437.585 390.529 l
437.868 390.615 l
438.010 390.657 l
438.080 390.678 l
438.222 390.721 l
438.292 390.742 l
438.363 390.763 l
438.717 390.870 l
439.070 390.976 l
439.141 390.997 l
439.212 391.018 l
439.353 391.060 l
439.424 391.082 l
439.565 391.124 l
439.636 391.145 l
439.777 391.187 l
439.919 391.230 l
440.484 391.399 l
440.696 391.462 l
441.191 391.609 l
441.333 391.651 l
441.403 391.672 l
441.474 391.693 l
441.545 391.714 l
441.616 391.735 l
441.757 391.777 l
441.898 391.819 l
441.969 391.840 l
442.040 391.861 l
442.323 391.945 l
442.393 391.966 l
442.464 391.987 l
442.818 392.092 l
443.242 392.217 l
443.666 392.342 l
443.737 392.363 l
443.808 392.384 l
443.878 392.405 l
443.949 392.426 l
444.090 392.468 l
444.161 392.488 l
444.444 392.572 l
444.515 392.592 l
444.585 392.613 l
444.656 392.634 l
444.727 392.655 l
444.797 392.676 l
444.939 392.717 l
445.222 392.800 l
445.363 392.842 l
445.434 392.862 l
445.646 392.924 l
445.717 392.945 l
445.787 392.966 l
446.141 393.069 l
446.565 393.193 l
446.777 393.255 l
446.989 393.317 l
447.343 393.420 l
447.414 393.441 l
447.484 393.461 l
447.767 393.543 l
447.909 393.585 l
447.979 393.605 l
448.191 393.667 l
448.262 393.687 l
448.333 393.708 l
448.616 393.790 l
448.686 393.810 l
448.828 393.851 l
448.969 393.892 l
449.040 393.913 l
449.111 393.933 l
449.181 393.954 l
449.252 393.974 l
449.464 394.035 l
449.606 394.076 l
449.676 394.097 l
449.818 394.138 l
449.888 394.158 l
450.030 394.199 l
450.313 394.280 l
450.454 394.321 l
450.525 394.341 l
450.737 394.402 l
450.808 394.423 l
450.878 394.443 l
451.232 394.545 l
451.515 394.626 l
451.585 394.646 l
451.727 394.687 l
451.797 394.707 l
452.010 394.768 l
452.080 394.788 l
452.151 394.808 l
452.292 394.849 l
452.363 394.869 l
452.434 394.889 l
452.575 394.930 l
452.929 395.031 l
452.999 395.051 l
453.070 395.071 l
453.353 395.152 l
453.424 395.172 l
453.494 395.192 l
453.777 395.273 l
453.848 395.293 l
453.919 395.313 l
454.272 395.414 l
454.555 395.494 l
454.626 395.514 l
454.767 395.554 l
455.121 395.654 l
455.191 395.674 l
455.262 395.694 l
455.545 395.775 l
455.616 395.795 l
455.686 395.815 l
455.757 395.835 l
456.040 395.914 l
456.535 396.054 l
456.818 396.134 l
456.888 396.154 l
457.030 396.194 l
457.313 396.273 l
457.454 396.313 l
457.525 396.333 l
457.666 396.373 l
457.808 396.412 l
458.020 396.472 l
458.090 396.492 l
458.161 396.512 l
458.302 396.551 l
458.727 396.670 l
459.222 396.808 l
459.717 396.947 l
459.999 397.025 l
460.070 397.045 l
460.141 397.065 l
460.494 397.163 l
460.565 397.183 l
460.636 397.203 l
460.919 397.281 l
460.989 397.301 l
461.060 397.321 l
461.343 397.399 l
461.414 397.419 l
461.555 397.458 l
461.767 397.517 l
461.838 397.536 l
461.909 397.556 l
461.979 397.575 l
462.050 397.595 l
462.191 397.634 l
462.262 397.654 l
462.403 397.693 l
462.828 397.810 l
463.252 397.927 l
463.747 398.063 l
463.888 398.102 l
463.959 398.122 l
464.030 398.141 l
464.171 398.180 l
464.242 398.199 l
464.313 398.219 l
464.525 398.277 l
464.595 398.296 l
464.737 398.335 l
465.020 398.413 l
465.090 398.432 l
465.161 398.451 l
465.232 398.471 l
465.373 398.509 l
465.444 398.529 l
465.515 398.548 l
465.585 398.567 l
465.656 398.587 l
465.727 398.606 l
465.868 398.645 l
465.939 398.664 l
466.080 398.703 l
466.504 398.818 l
466.646 398.857 l
466.717 398.876 l
466.858 398.915 l
466.929 398.934 l
467.070 398.972 l
467.424 399.069 l
467.919 399.203 l
467.989 399.222 l
468.060 399.241 l
468.343 399.318 l
468.484 399.356 l
468.555 399.375 l
468.696 399.414 l
468.767 399.433 l
468.909 399.471 l
469.333 399.586 l
469.474 399.624 l
469.545 399.643 l
469.616 399.662 l
469.686 399.681 l
469.757 399.700 l
469.828 399.719 l
469.898 399.738 l
469.969 399.757 l
470.181 399.814 l
470.252 399.833 l
470.323 399.852 l
470.393 399.871 l
470.464 399.891 l
470.535 399.910 l
470.605 399.929 l
470.676 399.948 l
470.818 399.986 l
471.242 400.099 l
471.666 400.213 l
471.737 400.232 l
471.808 400.251 l
471.878 400.270 l
471.949 400.289 l
472.020 400.308 l
472.090 400.327 l
472.161 400.346 l
472.232 400.365 l
472.302 400.383 l
472.515 400.440 l
472.585 400.459 l
472.656 400.478 l
472.727 400.497 l
472.797 400.516 l
473.151 400.610 l
473.292 400.648 l
473.363 400.666 l
473.504 400.704 l
473.575 400.723 l
473.717 400.761 l
474.070 400.855 l
474.141 400.873 l
474.212 400.892 l
474.282 400.911 l
474.353 400.930 l
474.424 400.948 l
474.565 400.986 l
474.636 401.005 l
474.777 401.042 l
474.919 401.080 l
474.989 401.098 l
475.131 401.136 l
475.201 401.155 l
475.272 401.173 l
475.343 401.192 l
475.414 401.211 l
475.484 401.229 l
475.555 401.248 l
475.626 401.267 l
475.838 401.323 l
475.909 401.342 l
475.979 401.360 l
476.121 401.398 l
476.262 401.435 l
476.333 401.454 l
476.403 401.472 l
476.545 401.509 l
476.616 401.528 l
476.686 401.547 l
476.757 401.565 l
476.828 401.584 l
476.898 401.603 l
477.040 401.640 l
477.111 401.658 l
477.181 401.677 l
477.605 401.789 l
478.030 401.900 l
478.100 401.918 l
478.171 401.937 l
478.525 402.030 l
478.666 402.067 l
478.737 402.085 l
478.949 402.141 l
479.020 402.159 l
479.090 402.178 l
479.161 402.196 l
479.232 402.214 l
479.373 402.251 l
479.444 402.270 l
479.515 402.288 l
479.656 402.325 l
480.010 402.417 l
480.151 402.454 l
480.222 402.473 l
480.504 402.546 l
480.646 402.583 l
480.717 402.601 l
480.999 402.675 l
481.070 402.693 l
481.141 402.712 l
481.565 402.822 l
481.707 402.858 l
481.777 402.877 l
481.919 402.913 l
481.989 402.931 l
482.131 402.968 l
482.555 403.078 l
482.626 403.096 l
482.696 403.114 l
483.050 403.206 l
483.121 403.224 l
483.262 403.260 l
483.545 403.333 l
483.616 403.351 l
483.686 403.370 l
484.111 403.479 l
484.252 403.515 l
484.323 403.533 l
484.464 403.569 l
484.535 403.588 l
484.676 403.624 l
485.171 403.751 l
485.595 403.859 l
485.666 403.877 l
485.737 403.896 l
485.878 403.932 l
485.949 403.950 l
486.020 403.968 l
486.161 404.004 l
486.232 404.022 l
486.302 404.040 l
486.444 404.076 l
486.585 404.112 l
486.656 404.130 l
486.727 404.148 l
486.797 404.166 l
486.868 404.184 l
487.080 404.238 l
487.151 404.256 l
487.222 404.274 l
487.292 404.292 l
487.363 404.310 l
487.646 404.382 l
487.787 404.418 l
487.858 404.436 l
488.212 404.526 l
488.282 404.544 l
488.424 404.580 l
488.707 404.651 l
488.777 404.669 l
488.848 404.687 l
489.272 404.794 l
489.343 404.812 l
489.414 404.830 l
489.767 404.919 l
489.909 404.955 l
489.979 404.973 l
490.474 405.098 l
490.757 405.169 l
490.828 405.186 l
490.898 405.204 l
490.969 405.222 l
491.040 405.240 l
491.252 405.293 l
491.323 405.311 l
491.393 405.329 l
491.464 405.346 l
491.535 405.364 l
491.888 405.453 l
491.959 405.470 l
492.030 405.488 l
492.454 405.594 l
492.595 405.630 l
492.666 405.647 l
492.949 405.718 l
493.090 405.753 l
493.161 405.771 l
493.444 405.842 l
493.515 405.859 l
493.585 405.877 l
493.727 405.912 l
493.797 405.930 l
493.939 405.965 l
494.010 405.982 l
494.151 406.018 l
494.504 406.106 l
494.575 406.123 l
494.646 406.141 l
494.717 406.158 l
494.787 406.176 l
495.070 406.246 l
495.141 406.264 l
495.212 406.281 l
495.353 406.316 l
495.636 406.386 l
495.707 406.404 l
495.777 406.421 l
495.848 406.439 l
495.919 406.456 l
495.989 406.474 l
496.060 406.491 l
496.131 406.509 l
496.201 406.526 l
496.272 406.544 l
496.414 406.578 l
496.484 406.596 l
496.555 406.613 l
496.626 406.631 l
496.767 406.666 l
496.838 406.683 l
496.909 406.701 l
497.403 406.823 l
497.828 406.927 l
497.898 406.944 l
497.969 406.962 l
498.393 407.066 l
498.464 407.083 l
498.535 407.101 l
498.888 407.187 l
498.959 407.205 l
499.030 407.222 l
499.100 407.239 l
499.171 407.257 l
499.242 407.274 l
499.313 407.291 l
499.383 407.308 l
499.525 407.343 l
499.595 407.360 l
499.666 407.378 l
499.949 407.447 l
500.020 407.464 l
500.161 407.499 l
500.585 407.602 l
500.727 407.636 l
500.797 407.654 l
501.292 407.774 l
501.575 407.843 l
501.646 407.860 l
501.787 407.894 l
501.999 407.946 l
502.070 407.963 l
502.141 407.980 l
502.353 408.032 l
502.848 408.151 l
502.919 408.168 l
502.989 408.186 l
503.343 408.271 l
503.414 408.288 l
503.484 408.305 l
503.696 408.356 l
503.767 408.373 l
503.838 408.390 l
503.979 408.425 l
504.121 408.459 l
504.191 408.476 l
504.333 408.510 l
504.403 408.527 l
504.474 408.544 l
504.616 408.578 l
505.040 408.680 l
505.111 408.697 l
505.252 408.731 l
505.606 408.816 l
505.676 408.833 l
505.747 408.850 l
505.959 408.900 l
506.030 408.917 l
506.100 408.934 l
506.313 408.985 l
506.383 409.002 l
506.454 409.019 l
506.666 409.070 l
506.737 409.086 l
506.878 409.120 l
507.020 409.154 l
507.090 409.171 l
507.161 409.188 l
507.232 409.205 l
507.302 409.222 l
507.444 409.255 l
507.939 409.373 l
508.010 409.390 l
508.080 409.407 l
508.504 409.508 l
508.575 409.525 l
508.646 409.541 l
509.070 409.642 l
509.141 409.659 l
509.212 409.676 l
509.424 409.726 l
509.494 409.743 l
509.565 409.759 l
509.706 409.793 l
509.848 409.826 l
509.919 409.843 l
510.343 409.943 l
510.484 409.977 l
510.555 409.994 l
510.626 410.010 l
510.696 410.027 l
510.767 410.044 l
510.838 410.060 l
510.909 410.077 l
510.979 410.094 l
511.474 410.210 l
512.040 410.343 l
512.252 410.393 l
512.323 410.410 l
512.393 410.426 l
512.464 410.443 l
512.676 410.493 l
512.959 410.559 l
513.030 410.576 l
513.100 410.592 l
513.242 410.625 l
513.808 410.758 l
514.020 410.807 l
514.302 410.873 l
514.444 410.906 l
514.515 410.923 l
514.656 410.956 l
514.797 410.989 l
514.939 411.022 l
515.010 411.038 l
515.151 411.071 l
515.434 411.137 l
515.504 411.153 l
515.646 411.186 l
515.717 411.202 l
516.141 411.301 l
516.282 411.334 l
516.353 411.350 l
516.777 411.449 l
517.060 411.514 l
517.131 411.530 l
517.201 411.547 l
517.272 411.563 l
517.343 411.579 l
517.626 411.645 l
517.838 411.694 l
517.908 411.710 l
517.979 411.726 l
518.050 411.743 l
518.121 411.759 l
518.545 411.857 l
518.616 411.873 l
518.686 411.889 l
518.828 411.922 l
518.898 411.938 l
519.111 411.987 l
519.323 412.036 l
519.393 412.052 l
519.676 412.117 l
519.747 412.133 l
519.818 412.149 l
519.888 412.166 l
519.959 412.182 l
520.383 412.279 l
520.525 412.311 l
520.595 412.328 l
520.878 412.392 l
520.949 412.408 l
521.020 412.425 l
521.302 412.489 l
521.373 412.505 l
521.444 412.521 l
521.515 412.538 l
521.656 412.570 l
522.292 412.715 l
522.858 412.844 l
522.929 412.860 l
522.999 412.876 l
523.353 412.956 l
523.424 412.972 l
523.565 413.004 l
524.060 413.116 l
524.131 413.132 l
524.201 413.148 l
524.696 413.260 l
524.838 413.292 l
524.908 413.308 l
525.262 413.388 l
525.333 413.404 l
525.403 413.420 l
525.474 413.436 l
525.545 413.452 l
525.828 413.515 l
525.898 413.531 l
526.040 413.563 l
526.181 413.595 l
526.252 413.611 l
526.323 413.627 l
526.393 413.643 l
526.464 413.659 l
526.606 413.690 l
526.818 413.738 l
526.888 413.754 l
527.100 413.801 l
527.171 413.817 l
527.313 413.849 l
527.808 413.960 l
527.878 413.976 l
528.020 414.007 l
528.444 414.102 l
528.515 414.118 l
528.585 414.134 l
528.656 414.150 l
528.727 414.165 l
528.797 414.181 l
528.868 414.197 l
528.939 414.213 l
529.080 414.244 l
529.151 414.260 l
529.292 414.292 l
529.575 414.355 l
529.646 414.370 l
529.787 414.402 l
529.858 414.417 l
529.929 414.433 l
530.282 414.512 l
530.353 414.527 l
530.424 414.543 l
530.565 414.575 l
530.636 414.590 l
530.919 414.653 l
530.989 414.669 l
531.131 414.700 l
531.626 414.810 l
531.696 414.825 l
531.767 414.841 l
531.908 414.872 l
531.979 414.888 l
532.050 414.903 l
532.121 414.919 l
532.191 414.935 l
532.333 414.966 l
532.403 414.982 l
532.474 414.997 l
532.898 415.091 l
532.969 415.106 l
533.040 415.122 l
533.181 415.153 l
533.252 415.169 l
533.323 415.184 l
533.393 415.192 l
533.464 415.206 l
533.535 415.220 l
533.959 415.304 l
534.030 415.318 l
534.171 415.346 l
534.313 415.374 l
534.383 415.388 l
534.525 415.416 l
534.595 415.430 l
534.666 415.444 l
534.737 415.458 l
534.878 415.486 l
535.090 415.528 l
535.161 415.542 l
535.232 415.556 l
535.656 415.640 l
535.727 415.654 l
535.868 415.681 l
536.504 415.807 l
536.575 415.821 l
536.646 415.835 l
536.717 415.848 l
536.787 415.862 l
536.858 415.876 l
537.141 415.932 l
537.282 415.960 l
537.424 415.987 l
537.494 416.001 l
537.565 416.015 l
537.706 416.043 l
537.777 416.057 l
537.848 416.070 l
538.131 416.126 l
538.201 416.140 l
538.272 416.154 l
538.343 416.167 l
538.414 416.181 l
538.626 416.223 l
538.696 416.237 l
538.908 416.278 l
539.050 416.306 l
539.121 416.319 l
539.333 416.361 l
539.403 416.375 l
539.474 416.388 l
539.545 416.402 l
539.616 416.416 l
539.686 416.430 l
539.828 416.457 l
539.898 416.471 l
539.969 416.485 l
540.040 416.499 l
540.111 416.512 l
540.535 416.595 l
540.606 416.609 l
540.676 416.623 l
540.747 416.636 l
540.818 416.650 l
540.888 416.664 l
541.030 416.691 l
541.100 416.705 l
541.242 416.732 l
541.313 416.746 l
541.525 416.787 l
541.666 416.815 l
541.737 416.829 l
542.302 416.938 l
542.444 416.965 l
542.515 416.979 l
542.585 416.993 l
542.727 417.020 l
543.010 417.075 l
543.080 417.089 l
543.151 417.102 l
543.222 417.116 l
543.292 417.130 l
543.434 417.157 l
543.504 417.171 l
543.787 417.225 l
543.858 417.239 l
543.999 417.266 l
544.070 417.280 l
544.141 417.293 l
544.212 417.307 l
544.282 417.320 l
544.706 417.402 l
544.777 417.416 l
544.848 417.429 l
544.919 417.443 l
545.060 417.470 l
545.484 417.552 l
545.555 417.565 l
545.696 417.592 l
545.767 417.606 l
545.838 417.619 l
545.908 417.633 l
545.979 417.647 l
546.403 417.728 l
546.474 417.741 l
546.545 417.755 l
546.616 417.768 l
546.686 417.782 l
546.828 417.809 l
546.898 417.823 l
547.181 417.877 l
547.252 417.890 l
547.393 417.917 l
547.464 417.931 l
547.535 417.944 l
547.676 417.971 l
547.818 417.998 l
548.030 418.039 l
548.100 418.052 l
548.171 418.066 l
548.242 418.079 l
548.383 418.106 l
548.525 418.133 l
548.595 418.146 l
548.666 418.160 l
548.737 418.173 l
548.808 418.187 l
548.878 418.200 l
548.949 418.214 l
549.090 418.241 l
549.161 418.254 l
549.232 418.268 l
549.373 418.294 l
549.444 418.308 l
549.797 418.375 l
549.868 418.388 l
549.939 418.402 l
550.010 418.415 l
550.080 418.429 l
550.222 418.455 l
550.292 418.469 l
550.717 418.549 l
550.787 418.563 l
550.858 418.576 l
550.929 418.589 l
550.999 418.603 l
551.636 418.723 l
551.706 418.736 l
551.777 418.750 l
551.848 418.763 l
551.919 418.776 l
552.343 418.856 l
552.414 418.870 l
552.555 418.896 l
552.626 418.910 l
552.696 418.923 l
552.767 418.936 l
552.838 418.950 l
552.909 418.963 l
552.979 418.976 l
553.333 419.043 l
553.403 419.056 l
553.474 419.069 l
553.545 419.083 l
553.616 419.096 l
554.181 419.202 l
554.252 419.215 l
554.393 419.242 l
554.535 419.269 l
554.606 419.282 l
554.747 419.308 l
554.818 419.322 l
554.888 419.335 l
554.959 419.348 l
555.030 419.361 l
555.242 419.401 l
555.383 419.427 l
555.454 419.441 l
555.878 419.520 l
555.949 419.533 l
556.090 419.560 l
556.232 419.586 l
556.302 419.599 l
556.444 419.625 l
556.515 419.639 l
556.585 419.652 l
556.656 419.665 l
556.868 419.705 l
557.080 419.744 l
557.151 419.757 l
557.787 419.876 l
557.929 419.902 l
557.999 419.915 l
558.070 419.928 l
558.141 419.941 l
558.424 419.994 l
558.494 420.007 l
558.565 420.020 l
558.636 420.033 l
558.706 420.046 l
558.989 420.099 l
559.060 420.112 l
559.484 420.190 l
559.555 420.203 l
559.626 420.216 l
559.696 420.230 l
559.767 420.243 l
559.979 420.282 l
560.050 420.295 l
560.121 420.308 l
560.474 420.373 l
560.545 420.386 l
560.616 420.399 l
560.686 420.412 l
560.757 420.425 l
561.181 420.504 l
561.252 420.517 l
561.393 420.543 l
561.464 420.556 l
561.535 420.569 l
561.606 420.582 l
561.676 420.595 l
562.242 420.699 l
562.383 420.725 l
562.454 420.738 l
562.525 420.751 l
562.595 420.764 l
562.666 420.777 l
563.020 420.841 l
563.090 420.854 l
563.232 420.880 l
563.302 420.893 l
563.373 420.906 l
563.727 420.971 l
563.797 420.984 l
563.868 420.997 l
564.080 421.036 l
564.151 421.049 l
564.222 421.062 l
564.292 421.074 l
564.363 421.087 l
564.929 421.191 l
564.999 421.204 l
565.070 421.216 l
565.141 421.229 l
565.212 421.242 l
565.424 421.281 l
565.494 421.294 l
565.565 421.307 l
565.707 421.332 l
565.777 421.345 l
565.919 421.371 l
566.060 421.397 l
566.131 421.410 l
566.201 421.422 l
566.272 421.435 l
566.626 421.500 l
566.696 421.512 l
566.838 421.538 l
566.909 421.551 l
566.979 421.564 l
567.050 421.577 l
567.121 421.589 l
567.686 421.692 l
567.757 421.705 l
567.828 421.718 l
567.898 421.730 l
567.969 421.743 l
568.111 421.769 l
568.181 421.782 l
568.252 421.794 l
568.323 421.807 l
568.393 421.820 l
568.464 421.833 l
568.535 421.845 l
568.676 421.871 l
568.747 421.884 l
568.818 421.897 l
568.888 421.909 l
568.959 421.922 l
569.525 422.024 l
569.595 422.037 l
569.666 422.050 l
569.737 422.062 l
569.807 422.075 l
569.949 422.101 l
570.020 422.113 l
570.090 422.126 l
570.161 422.139 l
570.232 422.151 l
570.302 422.164 l
570.373 422.177 l
570.515 422.202 l
570.585 422.215 l
570.727 422.241 l
571.434 422.367 l
571.504 422.380 l
571.575 422.393 l
571.646 422.405 l
571.717 422.418 l
571.999 422.469 l
572.070 422.482 l
572.282 422.520 l
572.353 422.532 l
572.424 422.545 l
572.494 422.557 l
572.565 422.570 l
572.636 422.583 l
572.777 422.608 l
572.848 422.621 l
573.131 422.671 l
573.201 422.684 l
573.343 422.709 l
573.414 422.722 l
573.484 422.734 l
573.555 422.747 l
573.626 422.760 l
574.262 422.873 l
574.403 422.898 l
574.545 422.923 l
575.181 423.037 l
575.252 423.049 l
575.323 423.062 l
575.393 423.074 l
575.464 423.087 l
575.605 423.112 l
575.676 423.124 l
575.818 423.150 l
575.888 423.162 l
575.959 423.175 l
576.030 423.187 l
576.171 423.212 l
576.242 423.225 l
576.383 423.250 l
577.161 423.387 l
577.302 423.412 l
577.373 423.425 l
577.444 423.437 l
577.515 423.450 l
577.868 423.512 l
577.939 423.525 l
578.009 423.537 l
578.080 423.550 l
578.151 423.562 l
578.222 423.575 l
578.292 423.587 l
578.434 423.612 l
578.504 423.625 l
578.787 423.674 l
578.858 423.687 l
579.070 423.724 l
579.141 423.737 l
579.282 423.761 l
579.353 423.774 l
579.494 423.799 l
579.565 423.811 l
579.636 423.824 l
579.707 423.836 l
579.777 423.848 l
580.060 423.898 l
580.201 423.923 l
580.272 423.935 l
580.414 423.960 l
580.484 423.972 l
580.838 424.034 l
580.908 424.047 l
580.979 424.059 l
581.050 424.072 l
581.121 424.084 l
581.191 424.096 l
581.333 424.121 l
581.403 424.133 l
581.474 424.146 l
581.545 424.158 l
581.686 424.183 l
581.757 424.195 l
581.969 424.232 l
582.040 424.245 l
582.111 424.257 l
582.252 424.282 l
582.323 424.294 l
582.393 424.306 l
582.464 424.319 l
582.747 424.368 l
582.818 424.380 l
582.888 424.393 l
582.959 424.405 l
583.100 424.430 l
583.242 424.454 l
583.313 424.466 l
583.737 424.540 l
583.807 424.553 l
583.878 424.565 l
584.020 424.589 l
584.161 424.614 l
584.868 424.737 l
585.009 424.761 l
585.080 424.773 l
585.151 424.786 l
585.292 424.810 l
585.363 424.822 l
585.646 424.871 l
585.717 424.884 l
585.787 424.896 l
585.858 424.908 l
585.929 424.920 l
585.999 424.933 l
586.070 424.945 l
586.212 424.969 l
586.282 424.981 l
586.777 425.067 l
586.848 425.079 l
586.989 425.103 l
587.060 425.116 l
587.131 425.128 l
587.343 425.164 l
587.414 425.177 l
587.484 425.189 l
587.555 425.201 l
587.626 425.213 l
587.696 425.225 l
587.908 425.262 l
587.979 425.274 l
588.121 425.298 l
588.191 425.310 l
588.262 425.323 l
588.828 425.420 l
588.898 425.432 l
588.969 425.444 l
589.040 425.456 l
589.111 425.468 l
589.252 425.492 l
589.323 425.505 l
589.605 425.553 l
589.676 425.565 l
589.959 425.614 l
590.100 425.638 l
590.171 425.650 l
590.313 425.674 l
590.383 425.686 l
590.666 425.735 l
590.737 425.747 l
590.878 425.771 l
590.949 425.783 l
591.090 425.807 l
591.302 425.843 l
591.373 425.855 l
591.727 425.916 l
591.797 425.928 l
591.868 425.940 l
591.939 425.952 l
592.009 425.964 l
592.080 425.976 l
592.151 425.988 l
592.222 426.000 l
592.858 426.108 l
592.929 426.120 l
592.999 426.132 l
593.070 426.144 l
593.141 426.156 l
593.282 426.180 l
593.353 426.192 l
593.777 426.264 l
593.848 426.276 l
593.989 426.300 l
594.060 426.312 l
594.131 426.324 l
594.272 426.348 l
594.343 426.360 l
594.908 426.456 l
595.050 426.479 l
595.191 426.503 l
595.333 426.527 l
595.403 426.539 l
595.686 426.587 l
595.757 426.599 l
595.828 426.611 l
595.898 426.623 l
596.040 426.647 l
596.181 426.670 l
596.252 426.682 l
596.323 426.694 l
596.393 426.706 l
596.888 426.789 l
596.959 426.801 l
597.171 426.837 l
597.242 426.849 l
597.383 426.873 l
597.454 426.884 l
597.525 426.896 l
597.595 426.908 l
597.878 426.956 l
597.949 426.968 l
598.090 426.991 l
598.161 427.003 l
598.232 427.015 l
598.302 427.027 l
598.373 427.039 l
599.009 427.145 l
599.080 427.157 l
599.151 427.169 l
599.222 427.181 l
599.292 427.193 l
599.434 427.216 l
599.504 427.228 l
599.646 427.252 l
599.717 427.264 l
599.787 427.275 l
600.070 427.323 l
600.141 427.334 l
600.212 427.346 l
600.282 427.358 l
600.353 427.370 l
600.494 427.393 l
600.565 427.405 l
600.848 427.452 l
600.919 427.464 l
601.060 427.488 l
601.131 427.499 l
601.272 427.523 l
601.414 427.546 l
601.484 427.558 l
601.626 427.582 l
601.696 427.593 l
601.979 427.640 l
602.050 427.652 l
602.262 427.687 l
602.333 427.699 l
602.403 427.711 l
602.474 427.723 l
602.545 427.734 l
602.757 427.769 l
602.828 427.781 l
602.898 427.793 l
602.969 427.805 l
603.252 427.852 l
603.323 427.863 l
603.393 427.875 l
603.535 427.898 l
603.676 427.922 l
603.747 427.933 l
603.818 427.945 l
604.100 427.992 l
604.171 428.004 l
604.242 428.015 l
604.383 428.039 l
604.525 428.062 l
604.666 428.085 l
604.737 428.097 l
604.949 428.132 l
605.020 428.144 l
605.090 428.155 l
605.373 428.202 l
605.444 428.213 l
605.515 428.225 l
605.656 428.248 l
605.797 428.272 l
605.868 428.283 l
605.939 428.295 l
606.222 428.341 l
606.292 428.353 l
606.363 428.365 l
606.434 428.376 l
606.575 428.400 l
606.787 428.434 l
606.858 428.446 l
606.999 428.469 l
607.070 428.481 l
607.282 428.516 l
607.353 428.527 l
607.494 428.550 l
607.565 428.562 l
607.706 428.585 l
607.848 428.608 l
607.919 428.620 l
608.626 428.736 l
608.767 428.759 l
608.838 428.770 l
608.908 428.782 l
608.979 428.793 l
609.686 428.909 l
609.757 428.920 l
609.828 428.932 l
609.898 428.943 l
609.969 428.955 l
610.111 428.978 l
610.181 428.989 l
610.605 429.058 l
610.676 429.070 l
610.818 429.093 l
610.888 429.104 l
610.959 429.116 l
611.030 429.127 l
611.100 429.139 l
611.666 429.231 l
611.737 429.242 l
611.878 429.265 l
612.020 429.288 l
612.161 429.311 l
612.444 429.357 l
612.515 429.368 l
612.585 429.379 l
612.656 429.391 l
612.727 429.402 l
613.009 429.448 l
613.151 429.471 l
613.222 429.482 l
613.292 429.494 l
613.363 429.505 l
613.646 429.551 l
613.717 429.562 l
613.999 429.608 l
614.070 429.619 l
614.141 429.631 l
614.212 429.642 l
614.282 429.654 l
614.424 429.676 l
614.494 429.688 l
615.060 429.779 l
615.131 429.790 l
615.272 429.813 l
615.343 429.824 l
615.414 429.836 l
615.484 429.847 l
615.555 429.858 l
616.191 429.961 l
616.262 429.972 l
616.333 429.983 l
616.403 429.995 l
616.474 430.006 l
616.545 430.017 l
616.616 430.029 l
616.828 430.063 l
616.898 430.074 l
616.969 430.085 l
617.040 430.097 l
617.111 430.108 l
617.393 430.153 l
617.535 430.176 l
617.676 430.198 l
618.030 430.255 l
618.100 430.266 l
618.171 430.277 l
618.242 430.289 l
618.525 430.334 l
618.595 430.345 l
618.666 430.356 l
618.737 430.368 l
618.807 430.379 l
619.090 430.424 l
619.161 430.435 l
619.302 430.458 l
619.373 430.469 l
619.444 430.480 l
619.515 430.492 l
619.585 430.503 l
619.656 430.514 l
619.727 430.525 l
619.797 430.537 l
619.868 430.548 l
619.939 430.559 l
620.009 430.570 l
620.646 430.671 l
620.717 430.683 l
620.787 430.694 l
620.858 430.705 l
620.929 430.716 l
620.999 430.727 l
621.141 430.750 l
621.212 430.761 l
621.777 430.851 l
621.848 430.862 l
621.989 430.884 l
622.131 430.907 l
622.201 430.918 l
622.272 430.929 l
622.343 430.940 l
622.767 431.007 l
622.838 431.018 l
623.050 431.052 l
623.121 431.063 l
623.191 431.074 l
623.333 431.096 l
623.403 431.108 l
623.545 431.130 l
623.616 431.141 l
623.898 431.186 l
623.969 431.197 l
624.111 431.219 l
624.181 431.230 l
624.323 431.252 l
624.464 431.275 l
624.535 431.286 l
624.747 431.319 l
624.818 431.330 l
624.888 431.341 l
624.959 431.352 l
625.030 431.363 l
625.242 431.397 l
625.313 431.408 l
625.454 431.430 l
625.595 431.452 l
625.666 431.463 l
625.807 431.486 l
625.878 431.497 l
625.949 431.508 l
626.020 431.519 l
626.090 431.530 l
626.161 431.541 l
626.232 431.552 l
626.373 431.574 l
626.444 431.585 l
626.585 431.607 l
626.727 431.629 l
626.797 431.641 l
626.868 431.652 l
626.939 431.663 l
627.434 431.740 l
627.504 431.751 l
627.646 431.773 l
627.717 431.784 l
627.787 431.795 l
627.929 431.817 l
627.999 431.828 l
628.141 431.850 l
628.212 431.861 l
628.494 431.905 l
628.565 431.916 l
628.706 431.938 l
628.777 431.949 l
628.919 431.971 l
629.060 431.993 l
629.131 432.004 l
629.201 432.015 l
629.272 432.026 l
629.626 432.081 l
629.696 432.092 l
629.908 432.125 l
629.979 432.136 l
630.121 432.158 l
630.262 432.180 l
630.333 432.191 l
631.040 432.301 l
631.111 432.312 l
631.181 432.323 l
631.252 432.333 l
631.323 432.344 l
631.464 432.366 l
631.535 432.377 l
632.171 432.476 l
632.242 432.486 l
632.383 432.508 l
632.454 432.519 l
632.525 432.530 l
632.737 432.563 l
632.807 432.574 l
633.232 432.639 l
633.302 432.650 l
633.444 432.672 l
633.515 432.683 l
633.656 432.704 l
633.797 432.726 l
633.868 432.737 l
634.222 432.791 l
634.292 432.802 l
634.363 432.813 l
634.575 432.846 l
634.646 432.856 l
634.717 432.867 l
634.787 432.878 l
634.858 432.889 l
634.929 432.900 l
634.999 432.911 l
635.282 432.954 l
635.353 432.965 l
635.424 432.976 l
635.494 432.987 l
635.565 432.997 l
635.777 433.030 l
635.848 433.041 l
635.919 433.052 l
635.989 433.062 l
636.060 433.073 l
636.131 433.084 l
636.201 433.095 l
636.626 433.160 l
636.696 433.170 l
636.979 433.214 l
637.050 433.224 l
637.121 433.235 l
637.191 433.246 l
637.262 433.257 l
637.403 433.278 l
637.474 433.289 l
638.040 433.375 l
638.111 433.386 l
638.252 433.408 l
638.323 433.418 l
638.464 433.440 l
638.676 433.472 l
638.747 433.483 l
639.171 433.547 l
639.242 433.558 l
639.454 433.590 l
639.525 433.601 l
639.595 433.612 l
639.666 433.622 l
639.737 433.633 l
639.878 433.655 l
639.949 433.665 l
640.373 433.730 l
640.444 433.740 l
640.515 433.751 l
640.585 433.762 l
640.656 433.772 l
640.797 433.794 l
640.939 433.815 l
641.009 433.826 l
641.080 433.837 l
641.151 433.847 l
641.575 433.911 l
641.646 433.922 l
641.787 433.943 l
641.858 433.954 l
641.999 433.975 l
642.141 433.997 l
642.212 434.007 l
642.353 434.029 l
642.424 434.039 l
642.848 434.103 l
642.919 434.114 l
643.060 434.135 l
643.131 434.146 l
643.201 434.157 l
643.272 434.167 l
643.343 434.178 l
643.414 434.188 l
643.484 434.199 l
644.121 434.295 l
644.191 434.305 l
644.333 434.326 l
644.403 434.337 l
644.474 434.348 l
644.545 434.358 l
644.616 434.369 l
644.757 434.390 l
644.828 434.401 l
645.323 434.475 l
645.393 434.485 l
645.535 434.507 l
645.606 434.517 l
645.676 434.528 l
645.747 434.538 l
645.818 434.549 l
645.959 434.570 l
646.030 434.581 l
646.595 434.665 l
646.666 434.676 l
646.737 434.686 l
646.807 434.697 l
646.949 434.718 l
647.090 434.739 l
647.161 434.749 l
647.302 434.770 l
647.373 434.781 l
647.656 434.823 l
647.727 434.834 l
647.939 434.865 l
648.009 434.876 l
648.080 434.886 l
648.151 434.897 l
648.222 434.907 l
648.292 434.918 l
648.363 434.928 l
648.575 434.960 l
648.646 434.970 l
648.929 435.012 l
648.999 435.023 l
649.212 435.054 l
649.282 435.065 l
649.353 435.075 l
649.424 435.086 l
649.494 435.096 l
649.565 435.107 l
649.636 435.117 l
649.848 435.149 l
649.919 435.159 l
650.060 435.180 l
650.131 435.190 l
650.414 435.232 l
650.484 435.243 l
650.626 435.264 l
650.767 435.285 l
650.838 435.295 l
650.908 435.305 l
650.979 435.316 l
651.616 435.410 l
651.686 435.420 l
651.757 435.431 l
651.828 435.441 l
651.969 435.462 l
652.111 435.483 l
652.181 435.493 l
652.888 435.597 l
652.959 435.608 l
653.100 435.628 l
653.171 435.639 l
653.242 435.649 l
653.312 435.660 l
653.383 435.670 l
653.737 435.722 l
653.807 435.732 l
653.878 435.743 l
654.232 435.795 l
654.302 435.805 l
654.373 435.815 l
654.444 435.826 l
654.515 435.836 l
654.585 435.846 l
654.656 435.857 l
654.868 435.888 l
654.939 435.898 l
655.222 435.939 l
655.292 435.950 l
655.504 435.981 l
655.575 435.991 l
655.646 436.002 l
655.717 436.012 l
655.858 436.033 l
656.141 436.074 l
656.212 436.084 l
656.424 436.115 l
656.494 436.125 l
656.565 436.136 l
656.636 436.146 l
656.848 436.177 l
656.919 436.187 l
656.989 436.198 l
657.060 436.208 l
657.131 436.218 l
657.272 436.239 l
657.343 436.249 l
657.908 436.331 l
657.979 436.342 l
658.191 436.372 l
658.262 436.383 l
658.333 436.393 l
658.474 436.413 l
658.545 436.424 l
658.686 436.444 l
658.757 436.455 l
659.111 436.506 l
659.181 436.516 l
659.323 436.537 l
659.393 436.547 l
659.535 436.567 l
659.605 436.577 l
659.676 436.588 l
659.747 436.598 l
659.818 436.608 l
660.595 436.721 l
660.666 436.731 l
660.807 436.751 l
660.878 436.761 l
660.949 436.772 l
661.090 436.792 l
661.161 436.802 l
661.373 436.833 l
661.444 436.843 l
661.585 436.864 l
661.656 436.874 l
661.939 436.914 l
662.009 436.925 l
662.080 436.935 l
662.151 436.945 l
662.222 436.955 l
662.292 436.965 l
662.363 436.976 l
662.504 436.996 l
662.575 437.006 l
663.141 437.087 l
663.212 437.097 l
663.353 437.118 l
663.424 437.128 l
663.494 437.138 l
663.565 437.148 l
663.636 437.158 l
663.777 437.179 l
663.848 437.189 l
664.414 437.270 l
664.484 437.280 l
664.696 437.310 l
664.767 437.320 l
664.838 437.331 l
664.908 437.341 l
664.979 437.351 l
665.191 437.381 l
665.262 437.391 l
665.403 437.411 l
665.474 437.422 l
665.686 437.452 l
665.757 437.462 l
665.969 437.492 l
666.040 437.502 l
666.111 437.512 l
666.181 437.522 l
666.252 437.533 l
666.393 437.553 l
666.464 437.563 l
667.171 437.664 l
667.242 437.674 l
667.383 437.694 l
667.525 437.714 l
667.595 437.724 l
667.666 437.734 l
667.737 437.744 l
668.090 437.794 l
668.161 437.804 l
668.232 437.814 l
668.515 437.854 l
668.585 437.864 l
668.727 437.884 l
668.868 437.905 l
668.939 437.915 l
669.009 437.925 l
669.080 437.935 l
669.222 437.955 l
669.292 437.965 l
669.434 437.985 l
669.504 437.995 l
669.575 438.005 l
669.929 438.055 l
669.999 438.065 l
670.070 438.075 l
670.141 438.085 l
670.212 438.095 l
670.353 438.115 l
670.424 438.125 l
670.706 438.165 l
670.777 438.175 l
670.848 438.185 l
670.919 438.195 l
670.989 438.205 l
671.201 438.234 l
671.272 438.244 l
671.414 438.264 l
671.484 438.274 l
671.555 438.284 l
671.696 438.304 l
671.767 438.314 l
671.979 438.344 l
672.050 438.354 l
672.262 438.384 l
672.333 438.394 l
672.545 438.424 l
672.616 438.434 l
672.757 438.453 l
672.828 438.463 l
672.898 438.473 l
672.969 438.483 l
673.040 438.493 l
673.110 438.503 l
673.181 438.513 l
673.252 438.523 l
673.676 438.582 l
673.747 438.592 l
674.030 438.632 l
674.100 438.642 l
674.171 438.652 l
674.242 438.662 l
674.313 438.672 l
674.525 438.701 l
674.595 438.711 l
675.232 438.800 l
675.302 438.810 l
675.444 438.830 l
675.515 438.840 l
675.585 438.850 l
675.656 438.859 l
675.727 438.869 l
675.868 438.889 l
675.939 438.899 l
676.504 438.978 l
676.575 438.988 l
676.717 439.007 l
676.787 439.017 l
676.929 439.037 l
677.070 439.056 l
677.141 439.066 l
677.212 439.076 l
677.282 439.086 l
677.919 439.174 l
677.989 439.184 l
678.131 439.204 l
678.201 439.214 l
678.272 439.224 l
678.343 439.233 l
678.484 439.253 l
678.555 439.263 l
678.838 439.302 l
678.908 439.312 l
679.191 439.351 l
679.262 439.361 l
679.474 439.390 l
679.545 439.400 l
679.616 439.410 l
679.686 439.419 l
679.757 439.429 l
679.828 439.439 l
679.898 439.449 l
680.111 439.478 l
680.181 439.488 l
680.605 439.547 l
680.676 439.556 l
680.888 439.586 l
680.959 439.595 l
681.030 439.605 l
681.100 439.615 l
681.171 439.625 l
681.242 439.634 l
681.313 439.644 l
681.525 439.673 l
681.595 439.683 l
682.020 439.741 l
682.090 439.751 l
682.232 439.771 l
682.302 439.780 l
682.444 439.800 l
682.515 439.809 l
682.585 439.819 l
682.727 439.839 l
682.797 439.848 l
683.646 439.965 l
683.717 439.974 l
683.787 439.984 l
683.858 439.994 l
683.929 440.004 l
683.999 440.013 l
684.070 440.023 l
684.282 440.052 l
684.353 440.062 l
684.919 440.139 l
684.989 440.149 l
685.131 440.168 l
685.201 440.178 l
685.272 440.187 l
685.343 440.197 l
685.413 440.207 l
685.555 440.226 l
685.626 440.236 l
685.838 440.265 l
685.908 440.274 l
686.121 440.303 l
686.191 440.313 l
686.403 440.342 l
686.474 440.351 l
686.616 440.371 l
686.686 440.380 l
686.757 440.390 l
686.828 440.400 l
686.898 440.409 l
687.040 440.428 l
687.111 440.438 l
687.747 440.525 l
687.818 440.534 l
687.959 440.553 l
688.030 440.563 l
688.100 440.573 l
688.171 440.582 l
688.242 440.592 l
688.313 440.601 l
688.383 440.611 l
688.595 440.640 l
688.666 440.649 l
689.020 440.697 l
689.090 440.707 l
689.302 440.736 l
689.373 440.745 l
689.515 440.764 l
689.585 440.774 l
689.656 440.783 l
689.797 440.802 l
689.868 440.812 l
690.009 440.831 l
690.080 440.841 l
690.504 440.898 l
690.575 440.908 l
690.717 440.927 l
690.787 440.936 l
690.929 440.955 l
690.999 440.965 l
691.070 440.974 l
691.141 440.984 l
691.212 440.993 l
691.424 441.022 l
691.494 441.032 l
691.989 441.098 l
692.060 441.108 l
692.272 441.136 l
692.343 441.146 l
692.413 441.155 l
692.484 441.165 l
692.555 441.174 l
692.696 441.193 l
692.767 441.203 l
692.908 441.222 l
692.979 441.231 l
693.403 441.288 l
693.474 441.298 l
693.616 441.317 l
693.686 441.326 l
693.828 441.345 l
693.898 441.355 l
693.969 441.364 l
694.040 441.374 l
694.111 441.383 l
694.181 441.392 l
694.252 441.402 l
694.323 441.411 l
694.959 441.497 l
695.030 441.506 l
695.171 441.525 l
695.242 441.534 l
695.313 441.544 l
695.383 441.553 l
695.454 441.563 l
695.525 441.572 l
695.595 441.582 l
695.737 441.600 l
695.807 441.610 l
696.444 441.695 l
696.515 441.704 l
696.656 441.723 l
696.727 441.732 l
696.797 441.742 l
696.868 441.751 l
696.939 441.761 l
697.080 441.780 l
697.151 441.789 l
697.292 441.808 l
697.363 441.817 l
697.787 441.874 l
697.858 441.883 l
697.999 441.902 l
698.070 441.911 l
698.212 441.930 l
698.282 441.939 l
698.353 441.949 l
698.424 441.958 l
698.494 441.967 l
698.636 441.986 l
698.706 441.996 l
699.413 442.089 l
699.484 442.099 l
699.626 442.117 l
699.696 442.127 l
699.838 442.145 l
699.979 442.164 l
700.050 442.173 l
700.262 442.201 l
700.333 442.211 l
700.757 442.267 l
700.828 442.276 l
701.040 442.304 l
701.111 442.314 l
701.252 442.332 l
701.393 442.351 l
701.464 442.360 l
701.605 442.379 l
701.676 442.388 l
701.818 442.407 l
701.888 442.416 l
702.383 442.481 l
702.454 442.490 l
702.595 442.509 l
702.666 442.518 l
702.807 442.537 l
702.949 442.556 l
703.020 442.565 l
703.161 442.583 l
703.232 442.593 l
703.868 442.676 l
703.939 442.685 l
704.080 442.704 l
704.151 442.713 l
704.222 442.723 l
704.292 442.732 l
704.363 442.741 l
704.434 442.750 l
704.504 442.760 l
704.646 442.778 l
704.717 442.787 l
704.999 442.824 l
705.070 442.834 l
705.353 442.871 l
705.424 442.880 l
705.565 442.898 l
705.636 442.907 l
705.777 442.926 l
705.848 442.935 l
705.919 442.944 l
706.060 442.963 l
706.131 442.972 l
706.979 443.083 l
707.050 443.092 l
707.191 443.110 l
707.262 443.120 l
707.333 443.129 l
707.403 443.138 l
707.474 443.147 l
707.616 443.166 l
707.686 443.175 l
708.393 443.267 l
708.464 443.276 l
708.676 443.303 l
708.747 443.312 l
708.818 443.322 l
708.888 443.331 l
708.959 443.340 l
709.030 443.349 l
709.100 443.358 l
709.383 443.395 l
709.454 443.404 l
709.737 443.441 l
709.807 443.450 l
710.090 443.486 l
710.161 443.496 l
710.302 443.514 l
710.373 443.523 l
710.444 443.532 l
710.585 443.550 l
710.656 443.560 l
710.797 443.578 l
710.868 443.587 l
711.434 443.660 l
711.504 443.669 l
711.646 443.687 l
711.717 443.696 l
711.858 443.715 l
711.929 443.724 l
711.999 443.733 l
712.141 443.751 l
712.211 443.760 l
712.424 443.788 l
712.494 443.797 l
712.848 443.842 l
712.919 443.851 l
713.201 443.888 l
713.272 443.897 l
713.343 443.906 l
713.413 443.915 l
713.484 443.924 l
713.555 443.933 l
713.626 443.942 l
713.696 443.951 l
713.767 443.960 l
713.979 443.987 l
714.050 443.996 l
714.121 444.006 l
714.403 444.042 l
714.474 444.051 l
714.757 444.087 l
714.828 444.096 l
714.898 444.105 l
714.969 444.114 l
715.040 444.123 l
715.111 444.132 l
715.181 444.141 l
715.252 444.150 l
715.323 444.159 l
715.747 444.214 l
715.818 444.223 l
715.888 444.232 l
716.242 444.277 l
716.313 444.286 l
716.454 444.304 l
716.525 444.313 l
716.595 444.322 l
716.666 444.331 l
716.737 444.340 l
716.878 444.358 l
716.949 444.367 l
717.302 444.412 l
717.373 444.421 l
717.515 444.439 l
717.585 444.448 l
717.797 444.475 l
717.868 444.484 l
717.939 444.493 l
718.009 444.502 l
718.080 444.511 l
718.151 444.520 l
718.222 444.529 l
718.292 444.538 l
718.363 444.547 l
718.434 444.556 l
718.717 444.592 l
718.787 444.601 l
719.141 444.646 l
719.211 444.655 l
719.494 444.691 l
719.565 444.700 l
719.636 444.709 l
719.706 444.717 l
719.777 444.726 l
719.848 444.735 l
719.919 444.744 l
720.060 444.762 l
720.131 444.771 l
720.484 444.816 l
720.555 444.825 l
720.626 444.834 l
720.979 444.878 l
721.050 444.887 l
721.191 444.905 l
721.262 444.914 l
721.333 444.923 l
721.403 444.932 l
721.474 444.941 l
721.616 444.959 l
721.686 444.968 l
722.040 445.012 l
722.111 445.021 l
722.252 445.039 l
722.323 445.048 l
722.605 445.084 l
722.676 445.092 l
722.818 445.110 l
722.888 445.119 l
722.959 445.128 l
723.030 445.137 l
723.100 445.146 l
723.313 445.173 l
723.383 445.181 l
724.161 445.279 l
724.232 445.288 l
724.373 445.306 l
724.444 445.315 l
724.515 445.323 l
724.585 445.332 l
724.656 445.341 l
724.727 445.350 l
724.797 445.359 l
725.080 445.394 l
725.151 445.403 l
725.575 445.456 l
725.646 445.465 l
725.858 445.492 l
725.929 445.500 l
726.070 445.518 l
726.141 445.527 l
726.211 445.536 l
726.353 445.554 l
726.424 445.562 l
726.565 445.580 l
726.636 445.589 l
726.777 445.606 l
726.848 445.615 l
727.343 445.677 l
727.414 445.686 l
727.555 445.703 l
727.626 445.712 l
727.767 445.730 l
727.908 445.747 l
727.979 445.756 l
728.050 445.765 l
728.121 445.774 l
729.040 445.888 l
729.111 445.897 l
729.181 445.906 l
729.252 445.914 l
729.393 445.932 l
729.464 445.941 l
729.535 445.950 l
729.605 445.958 l
729.676 445.967 l
729.959 446.002 l
730.030 446.011 l
730.454 446.064 l
730.525 446.072 l
730.595 446.081 l
730.666 446.090 l
730.737 446.099 l
730.807 446.107 l
730.949 446.125 l
731.020 446.133 l
731.090 446.142 l
731.232 446.160 l
731.302 446.168 l
731.373 446.177 l
731.444 446.186 l
732.292 446.291 l
732.363 446.299 l
732.504 446.317 l
732.575 446.326 l
732.646 446.334 l
732.717 446.343 l
732.787 446.352 l
732.858 446.360 l
732.929 446.369 l
733.070 446.387 l
733.141 446.395 l
733.777 446.474 l
733.848 446.482 l
733.919 446.491 l
733.989 446.500 l
734.131 446.517 l
734.201 446.526 l
734.272 446.534 l
734.343 446.543 l
734.414 446.552 l
734.484 446.560 l
734.555 446.569 l
734.696 446.586 l
734.767 446.595 l
734.979 446.621 l
735.050 446.630 l
735.333 446.664 l
735.403 446.673 l
735.686 446.708 l
735.757 446.716 l
735.898 446.734 l
736.040 446.751 l
736.181 446.768 l
736.323 446.786 l
736.393 446.794 l
737.312 446.907 l
737.383 446.915 l
737.525 446.932 l
737.595 446.941 l
737.666 446.950 l
737.737 446.958 l
737.807 446.967 l
737.878 446.976 l
737.949 446.984 l
738.161 447.010 l
738.232 447.019 l
738.868 447.096 l
738.939 447.105 l
739.151 447.130 l
739.222 447.139 l
739.292 447.148 l
739.363 447.156 l
739.434 447.165 l
739.504 447.173 l
739.575 447.182 l
739.646 447.191 l
739.717 447.199 l
739.787 447.208 l
740.141 447.251 l
740.212 447.259 l
740.282 447.268 l
740.353 447.276 l
740.424 447.285 l
740.706 447.319 l
740.777 447.328 l
740.919 447.345 l
740.989 447.353 l
741.060 447.362 l
741.131 447.371 l
741.201 447.379 l
741.343 447.396 l
741.414 447.405 l
741.626 447.430 l
741.696 447.439 l
742.191 447.499 l
742.262 447.507 l
742.474 447.533 l
742.545 447.542 l
742.686 447.559 l
742.757 447.567 l
742.828 447.576 l
742.969 447.593 l
743.181 447.618 l
743.252 447.627 l
744.030 447.720 l
744.100 447.729 l
744.242 447.746 l
744.312 447.754 l
744.454 447.772 l
744.525 447.780 l
744.595 447.789 l
744.737 447.805 l
744.807 447.814 l
745.020 447.839 l
745.090 447.848 l
745.656 447.916 l
745.727 447.924 l
745.939 447.950 l
746.009 447.958 l
746.080 447.967 l
746.151 447.975 l
746.292 447.992 l
746.434 448.009 l
746.504 448.017 l
746.575 448.026 l
746.646 448.034 l
746.717 448.043 l
746.787 448.051 l
747.424 448.127 l
747.494 448.136 l
747.636 448.153 l
747.706 448.161 l
747.848 448.178 l
747.919 448.187 l
747.989 448.195 l
748.060 448.203 l
748.131 448.212 l
748.272 448.229 l
748.343 448.237 l
748.626 448.271 l
748.696 448.279 l
748.908 448.305 l
748.979 448.313 l
749.262 448.347 l
749.333 448.355 l
749.474 448.372 l
749.545 448.380 l
749.616 448.389 l
749.686 448.397 l
749.828 448.414 l
749.969 448.431 l
750.040 448.439 l
750.323 448.473 l
750.393 448.481 l
750.464 448.489 l
750.535 448.498 l
750.676 448.515 l
750.747 448.523 l
751.030 448.557 l
751.100 448.565 l
751.242 448.582 l
751.312 448.590 l
751.454 448.607 l
751.595 448.624 l
751.666 448.632 l
751.737 448.640 l
751.807 448.649 l
752.797 448.766 l
752.868 448.774 l
753.009 448.791 l
753.080 448.799 l
753.151 448.808 l
753.222 448.816 l
753.292 448.824 l
753.363 448.833 l
753.434 448.841 l
753.575 448.858 l
753.646 448.866 l
754.494 448.966 l
754.565 448.974 l
754.706 448.991 l
754.777 448.999 l
754.919 449.016 l
755.060 449.033 l
755.131 449.041 l
755.201 449.049 l
755.272 449.057 l
755.484 449.082 l
755.555 449.091 l
755.626 449.099 l
756.191 449.165 l
756.262 449.174 l
756.474 449.199 l
756.545 449.207 l
756.616 449.215 l
756.686 449.223 l
756.757 449.232 l
756.828 449.240 l
756.898 449.248 l
756.969 449.257 l
757.040 449.265 l
757.252 449.290 l
757.323 449.298 l
757.959 449.372 l
758.030 449.381 l
758.242 449.405 l
758.312 449.414 l
758.383 449.422 l
758.454 449.430 l
758.595 449.447 l
758.737 449.463 l
758.807 449.472 l
758.949 449.488 l
759.020 449.496 l
759.373 449.537 l
759.444 449.546 l
759.868 449.595 l
759.939 449.603 l
760.080 449.620 l
760.151 449.628 l
760.222 449.636 l
760.292 449.644 l
760.363 449.653 l
760.434 449.661 l
760.504 449.669 l
760.646 449.686 l
760.717 449.694 l
760.858 449.710 l
760.929 449.718 l
760.999 449.727 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
q
53.0000 9.01423 709.999 486.985 rc
newpath
70.3333 11.0006 m
70.4040 11.3369 l
70.4747 11.6726 l
70.5454 12.0079 l
70.6161 12.3427 l
70.6868 12.6770 l
70.7575 13.0107 l
70.8282 13.3440 l
70.8989 13.6768 l
70.9697 14.0091 l
71.0404 14.3409 l
71.1111 14.6723 l
71.1818 15.0031 l
71.2525 15.3334 l
71.3232 15.6633 l
71.3939 15.9926 l
71.4646 16.3215 l
71.5353 16.6499 l
71.6060 16.9778 l
71.6767 17.3053 l
71.7474 17.6322 l
71.8181 17.9587 l
71.8888 18.2847 l
71.9595 18.6102 l
72.0303 18.9353 l
72.1010 19.2599 l
72.1717 19.5840 l
72.2424 19.9076 l
72.3131 20.2308 l
72.3838 20.5535 l
72.4545 20.8757 l
72.5252 21.1975 l
72.5959 21.5188 l
72.6666 21.8396 l
72.7373 22.1600 l
72.8080 22.4798 l
72.8787 22.7993 l
72.9494 23.1183 l
73.0202 23.4368 l
73.0909 23.7549 l
73.1616 24.0725 l
73.2323 24.3896 l
73.3030 24.7063 l
73.3737 25.0226 l
73.4444 25.3384 l
73.5151 25.6537 l
73.5858 25.9686 l
73.6565 26.2831 l
73.7272 26.5971 l
73.7979 26.9106 l
73.8686 27.2237 l
73.9393 27.5364 l
74.0100 27.8486 l
74.0808 28.1604 l
74.1515 28.4717 l
74.2222 28.7826 l
74.2929 29.0930 l
74.3636 29.4030 l
74.4343 29.7126 l
74.5050 30.0218 l
74.5757 30.3305 l
74.6464 30.6387 l
74.7171 30.9465 l
74.7878 31.2540 l
74.8585 31.5609 l
74.9292 31.8675 l
74.9999 32.1736 l
75.0707 32.4793 l
75.1414 32.7845 l
75.2121 33.0894 l
75.2828 33.3938 l
75.3535 33.6977 l
75.4242 34.0013 l
75.4949 34.3045 l
75.5656 34.6071 l
75.6363 34.9094 l
75.7070 35.2114 l
75.7777 35.5128 l
75.8484 35.8138 l
75.9191 36.1145 l
75.9898 36.4147 l
76.0606 36.7145 l
76.1313 37.0138 l
76.2020 37.3128 l
76.2727 37.6113 l
76.3434 37.9095 l
76.4141 38.2072 l
76.4848 38.5046 l
76.5555 38.8015 l
76.6262 39.0980 l
76.6969 39.3941 l
76.7676 39.6898 l
76.8383 39.9851 l
76.9090 40.2800 l
76.9797 40.5745 l
77.0505 40.8686 l
77.1212 41.1622 l
77.1919 41.4556 l
77.2626 41.7485 l
77.3333 42.0409 l
77.4040 42.3331 l
77.4747 42.6248 l
77.5454 42.9161 l
77.6161 43.2070 l
77.6868 43.4975 l
77.7575 43.7876 l
77.8282 44.0773 l
77.8989 44.3667 l
77.9696 44.6557 l
78.0404 44.9442 l
78.1111 45.2324 l
78.1818 45.5202 l
78.2525 45.8076 l
78.3232 46.0946 l
78.3939 46.3813 l
78.4646 46.0086 l
78.5353 46.2608 l
78.6767 46.7644 l
78.8181 47.2668 l
78.9595 47.7681 l
79.0303 48.0183 l
79.1010 48.2682 l
79.1717 48.5179 l
79.3131 49.0163 l
79.3838 49.2652 l
79.4545 49.5137 l
79.5252 49.7619 l
79.6666 50.2576 l
79.8080 50.7521 l
79.9494 51.2455 l
80.0202 51.4918 l
80.1616 51.9835 l
80.2323 52.2290 l
80.3737 52.7191 l
80.4444 52.9637 l
80.5858 53.4522 l
80.6565 53.6960 l
80.7272 53.9396 l
80.7979 54.1828 l
80.8686 54.4259 l
80.9393 54.6686 l
81.0100 54.9111 l
81.1515 55.3952 l
81.2222 55.6369 l
81.2929 55.8783 l
81.4343 56.3602 l
81.5050 56.6008 l
81.5757 56.8411 l
81.6464 57.0812 l
81.7878 57.5605 l
81.9292 58.0388 l
81.9999 58.2775 l
82.1414 58.7542 l
82.2121 58.9922 l
82.3535 59.4673 l
82.4949 59.9414 l
82.6363 60.4144 l
82.7777 60.8865 l
82.9191 61.3575 l
83.0606 61.8274 l
83.1313 62.0620 l
83.2020 62.2963 l
83.2727 62.5304 l
83.4141 62.9978 l
83.4848 63.2312 l
83.5555 63.4642 l
83.6262 63.6970 l
83.6969 63.9296 l
83.8383 64.3940 l
83.9090 64.6258 l
83.9797 64.8574 l
84.0505 65.0887 l
84.1212 65.3197 l
84.2626 65.7811 l
84.4040 66.2415 l
84.5454 66.7010 l
84.6868 67.1594 l
84.8282 67.6168 l
84.9696 68.0733 l
85.1111 68.5288 l
85.1818 68.7562 l
85.2525 68.9833 l
85.3939 69.4368 l
85.4646 69.6633 l
85.6060 70.1154 l
85.7474 70.5665 l
85.8181 70.7917 l
85.9595 71.2414 l
86.0302 71.4660 l
86.1717 71.9143 l
86.3131 72.3616 l
86.3838 72.5849 l
86.5252 73.0308 l
86.5959 73.2535 l
86.6666 73.4758 l
86.7373 73.6980 l
86.8787 74.1416 l
86.9494 74.3630 l
87.0909 74.8052 l
87.1616 75.0260 l
87.3030 75.4668 l
87.4444 75.9067 l
87.5151 76.1263 l
87.6565 76.5649 l
87.7979 77.0025 l
87.8686 77.2209 l
87.9393 77.4392 l
88.0808 77.8750 l
88.2222 78.3099 l
88.3636 78.7439 l
88.5050 79.1770 l
88.6464 79.6092 l
88.7878 80.0405 l
88.8585 80.2558 l
88.9999 80.6858 l
89.1414 81.1149 l
89.2828 81.5432 l
89.4242 81.9705 l
89.5656 82.3970 l
89.6363 82.6099 l
89.7070 82.8226 l
89.7777 83.0351 l
89.9191 83.4594 l
90.0605 83.8828 l
90.1313 84.0942 l
90.2020 84.3054 l
90.3434 84.7272 l
90.4848 85.1480 l
90.5555 85.3581 l
90.6262 85.5680 l
90.7676 85.9872 l
90.9090 86.4055 l
91.0504 86.8230 l
91.1212 87.0314 l
91.2626 87.4477 l
91.4040 87.8631 l
91.5454 88.2776 l
91.6161 88.4846 l
91.6868 88.6913 l
91.8282 89.1042 l
91.9696 89.5163 l
92.0403 89.7220 l
92.1818 90.1328 l
92.2525 90.3380 l
92.3939 90.7475 l
92.5353 91.1563 l
92.6060 91.3604 l
92.6767 91.5643 l
92.8181 91.9715 l
92.8888 92.1748 l
93.0302 92.5807 l
93.1717 92.9859 l
93.2424 93.1882 l
93.3838 93.5921 l
93.4545 93.7938 l
93.5959 94.1966 l
93.7373 94.5986 l
93.8787 94.9997 l
94.0201 95.4001 l
94.1616 95.7997 l
94.2323 95.9993 l
94.3737 96.3977 l
94.5151 96.7954 l
94.6565 97.1922 l
94.7979 97.5884 l
94.9393 97.9837 l
95.0808 98.3783 l
95.2222 98.7721 l
95.2929 98.9687 l
95.4343 99.3613 l
95.5050 99.5574 l
95.6464 99.9489 l
95.7878 100.339 l
95.8585 100.534 l
95.9999 100.924 l
96.1414 101.313 l
96.2828 101.701 l
96.4242 102.088 l
96.5656 102.475 l
96.6363 102.668 l
96.7777 103.054 l
96.8484 103.246 l
96.9898 103.631 l
97.0605 103.823 l
97.2020 104.206 l
97.3434 104.588 l
97.4141 104.780 l
97.5555 105.161 l
97.6262 105.352 l
97.7676 105.732 l
97.8383 105.922 l
97.9797 106.301 l
98.0504 106.491 l
98.1919 106.869 l
98.3333 107.246 l
98.4040 107.435 l
98.5454 107.811 l
98.6161 107.999 l
98.7575 108.375 l
98.8282 108.562 l
98.8989 108.750 l
99.0403 109.124 l
99.1818 109.497 l
99.3232 109.869 l
99.4646 110.241 l
99.6060 110.613 l
99.6767 110.798 l
99.7474 110.983 l
99.8888 111.353 l
99.9595 111.538 l
100.101 111.906 l
100.242 112.275 l
100.313 112.458 l
100.454 112.825 l
100.595 113.192 l
100.666 113.375 l
100.808 113.740 l
100.949 114.105 l
101.020 114.287 l
101.161 114.651 l
101.232 114.832 l
101.373 115.195 l
101.515 115.557 l
101.656 115.918 l
101.798 116.279 l
101.868 116.459 l
102.010 116.819 l
102.080 116.999 l
102.222 117.357 l
102.363 117.715 l
102.505 118.073 l
102.646 118.430 l
102.787 118.786 l
102.929 119.141 l
103.070 119.496 l
103.141 119.673 l
103.282 120.027 l
103.424 120.380 l
103.565 120.733 l
103.707 121.085 l
103.777 121.261 l
103.919 121.612 l
103.989 121.787 l
104.060 121.962 l
104.202 122.312 l
104.343 122.661 l
104.414 122.835 l
104.555 123.183 l
104.626 123.357 l
104.767 123.704 l
104.838 123.878 l
104.979 124.224 l
105.050 124.397 l
105.191 124.742 l
105.333 125.087 l
105.474 125.431 l
105.616 125.775 l
105.757 126.118 l
105.828 126.289 l
105.969 126.631 l
106.111 126.972 l
106.252 127.313 l
106.393 127.653 l
106.535 127.993 l
106.676 128.332 l
106.818 128.671 l
106.959 129.008 l
107.101 129.346 l
107.242 129.682 l
107.383 130.018 l
107.525 130.354 l
107.666 130.688 l
107.737 130.856 l
107.878 131.190 l
107.949 131.356 l
108.090 131.690 l
108.232 132.022 l
108.303 132.188 l
108.444 132.520 l
108.585 132.851 l
108.727 133.181 l
108.868 133.511 l
108.939 133.676 l
109.080 134.005 l
109.222 134.334 l
109.363 134.662 l
109.505 134.989 l
109.646 135.316 l
109.787 135.642 l
109.929 135.968 l
110.070 136.293 l
110.212 136.617 l
110.282 136.780 l
110.424 137.103 l
110.565 137.426 l
110.707 137.749 l
110.919 138.232 l
111.060 138.553 l
111.202 138.874 l
111.343 139.194 l
111.484 139.514 l
111.626 139.833 l
111.767 140.151 l
111.909 140.469 l
112.050 140.787 l
112.191 141.104 l
112.333 141.420 l
112.474 141.736 l
112.616 142.051 l
112.757 142.366 l
112.899 142.680 l
113.040 142.994 l
113.181 143.307 l
113.252 143.464 l
113.393 143.776 l
113.535 144.088 l
113.676 144.400 l
113.818 144.710 l
113.959 145.021 l
114.171 145.485 l
114.313 145.794 l
114.383 145.949 l
114.525 146.257 l
114.737 146.718 l
114.808 146.872 l
114.949 147.179 l
115.090 147.485 l
115.232 147.791 l
115.373 148.096 l
115.515 148.401 l
115.656 148.705 l
115.727 148.857 l
115.868 149.160 l
116.010 149.463 l
116.151 149.766 l
116.292 150.068 l
116.434 150.369 l
116.575 150.670 l
116.717 150.971 l
116.787 151.121 l
116.929 151.421 l
117.000 151.570 l
117.141 151.869 l
117.212 152.019 l
117.353 152.317 l
117.494 152.615 l
117.565 152.764 l
117.707 153.061 l
117.848 153.357 l
117.989 153.654 l
118.131 153.949 l
118.272 154.244 l
118.414 154.539 l
118.626 154.980 l
118.767 155.274 l
118.909 155.567 l
119.050 155.859 l
119.121 156.006 l
119.333 156.443 l
119.474 156.734 l
119.686 157.170 l
119.828 157.460 l
119.969 157.750 l
120.181 158.183 l
120.252 158.328 l
120.393 158.616 l
120.535 158.903 l
120.676 159.191 l
120.818 159.477 l
120.959 159.764 l
121.101 160.050 l
121.242 160.335 l
121.383 160.620 l
121.525 160.905 l
121.666 161.189 l
121.808 161.472 l
121.949 161.756 l
122.090 162.038 l
122.303 162.462 l
122.373 162.602 l
122.515 162.884 l
122.656 163.165 l
122.798 163.445 l
122.939 163.726 l
123.080 164.005 l
123.292 164.424 l
123.434 164.702 l
123.575 164.981 l
123.717 165.258 l
123.929 165.674 l
124.070 165.951 l
124.282 166.365 l
124.494 166.778 l
124.636 167.053 l
124.777 167.327 l
124.919 167.601 l
125.060 167.875 l
125.272 168.285 l
125.484 168.694 l
125.626 168.965 l
125.767 169.237 l
125.909 169.508 l
126.121 169.914 l
126.262 170.184 l
126.404 170.454 l
126.545 170.723 l
126.686 170.992 l
126.899 171.395 l
127.040 171.662 l
127.252 172.063 l
127.393 172.330 l
127.535 172.597 l
127.747 172.996 l
127.959 173.394 l
128.101 173.658 l
128.242 173.923 l
128.383 174.187 l
128.525 174.450 l
128.666 174.714 l
128.808 174.977 l
129.020 175.370 l
129.161 175.632 l
129.303 175.893 l
129.444 176.154 l
129.585 176.415 l
129.727 176.675 l
129.868 176.935 l
130.080 177.324 l
130.222 177.583 l
130.363 177.842 l
130.505 178.100 l
130.646 178.358 l
130.858 178.744 l
131.000 179.001 l
131.141 179.257 l
131.353 179.641 l
131.494 179.896 l
131.636 180.152 l
131.848 180.534 l
131.989 180.788 l
132.202 181.168 l
132.343 181.422 l
132.555 181.801 l
132.696 182.053 l
132.909 182.431 l
133.050 182.682 l
133.262 183.059 l
133.404 183.309 l
133.545 183.559 l
133.757 183.934 l
133.969 184.307 l
134.181 184.680 l
134.393 185.052 l
134.535 185.300 l
134.676 185.547 l
134.818 185.794 l
135.030 186.164 l
135.171 186.410 l
135.383 186.778 l
135.525 187.023 l
135.666 187.268 l
135.808 187.512 l
135.949 187.756 l
136.161 188.122 l
136.303 188.365 l
136.444 188.608 l
136.585 188.850 l
136.798 189.213 l
136.939 189.455 l
137.080 189.696 l
137.222 189.937 l
137.434 190.298 l
137.646 190.658 l
137.858 191.017 l
138.000 191.256 l
138.212 191.614 l
138.353 191.852 l
138.494 192.090 l
138.707 192.446 l
138.919 192.801 l
139.060 193.038 l
139.272 193.392 l
139.414 193.628 l
139.626 193.981 l
139.767 194.215 l
139.979 194.567 l
140.121 194.801 l
140.262 195.035 l
140.404 195.268 l
140.545 195.501 l
140.757 195.850 l
140.899 196.083 l
141.111 196.430 l
141.252 196.662 l
141.464 197.008 l
141.606 197.239 l
141.747 197.469 l
141.888 197.699 l
142.030 197.929 l
142.242 198.273 l
142.383 198.502 l
142.525 198.730 l
142.666 198.959 l
142.808 199.187 l
143.020 199.528 l
143.232 199.869 l
143.373 200.095 l
143.585 200.435 l
143.656 200.548 l
143.798 200.774 l
144.010 201.112 l
144.222 201.449 l
144.434 201.786 l
144.575 202.010 l
144.787 202.345 l
144.929 202.569 l
145.070 202.792 l
145.212 203.014 l
145.353 203.237 l
145.494 203.459 l
145.707 203.792 l
145.848 204.013 l
145.989 204.234 l
146.202 204.565 l
146.414 204.895 l
146.484 205.005 l
146.696 205.335 l
146.838 205.554 l
147.050 205.882 l
147.121 205.992 l
147.333 206.319 l
147.404 206.428 l
147.616 206.755 l
147.757 206.972 l
147.969 207.298 l
148.111 207.514 l
148.323 207.839 l
148.535 208.163 l
148.606 208.270 l
148.888 208.701 l
148.959 208.808 l
149.171 209.130 l
149.383 209.451 l
149.525 209.665 l
149.737 209.985 l
149.949 210.305 l
150.090 210.517 l
150.232 210.730 l
150.444 211.048 l
150.656 211.365 l
150.868 211.682 l
151.010 211.893 l
151.151 212.103 l
151.363 212.419 l
151.575 212.734 l
151.787 213.048 l
152.000 213.361 l
152.141 213.570 l
152.353 213.882 l
152.565 214.194 l
152.707 214.402 l
152.989 214.816 l
153.131 215.023 l
153.272 215.229 l
153.484 215.538 l
153.696 215.847 l
153.909 216.155 l
154.121 216.463 l
154.333 216.769 l
154.616 217.178 l
154.828 217.483 l
154.969 217.686 l
155.181 217.991 l
155.323 218.194 l
155.535 218.497 l
155.676 218.699 l
155.888 219.002 l
156.171 219.404 l
156.313 219.605 l
156.525 219.906 l
156.737 220.206 l
156.878 220.406 l
157.090 220.705 l
157.232 220.904 l
157.373 221.103 l
157.585 221.401 l
157.656 221.500 l
157.797 221.699 l
158.010 221.995 l
158.222 222.292 l
158.363 222.489 l
158.505 222.686 l
158.717 222.981 l
158.929 223.275 l
159.070 223.471 l
159.282 223.765 l
159.424 223.960 l
159.636 224.253 l
159.848 224.545 l
160.060 224.836 l
160.272 225.127 l
160.414 225.321 l
160.626 225.611 l
160.767 225.804 l
160.979 226.093 l
161.191 226.381 l
161.333 226.573 l
161.474 226.765 l
161.686 227.053 l
161.899 227.339 l
162.111 227.626 l
162.323 227.911 l
162.535 228.197 l
162.606 228.291 l
162.818 228.576 l
163.030 228.860 l
163.242 229.143 l
163.454 229.426 l
163.737 229.803 l
164.020 230.178 l
164.161 230.366 l
164.373 230.646 l
164.656 231.020 l
164.727 231.113 l
164.939 231.392 l
165.151 231.671 l
165.363 231.949 l
165.505 232.135 l
165.717 232.412 l
165.929 232.689 l
166.070 232.873 l
166.282 233.149 l
166.494 233.425 l
166.636 233.608 l
166.777 233.792 l
166.919 233.975 l
167.060 234.158 l
167.202 234.340 l
167.414 234.614 l
167.555 234.796 l
167.767 235.068 l
167.909 235.250 l
168.050 235.431 l
168.262 235.702 l
168.474 235.974 l
168.686 236.244 l
168.899 236.514 l
169.040 236.694 l
169.252 236.963 l
169.464 237.232 l
169.676 237.500 l
169.818 237.679 l
170.030 237.946 l
170.171 238.124 l
170.383 238.391 l
170.595 238.657 l
170.666 238.746 l
170.878 239.011 l
171.161 239.365 l
171.444 239.717 l
171.585 239.893 l
171.727 240.069 l
171.939 240.332 l
172.080 240.507 l
172.363 240.857 l
172.505 241.032 l
172.717 241.293 l
172.929 241.554 l
173.141 241.815 l
173.353 242.075 l
173.636 242.421 l
173.919 242.767 l
174.060 242.939 l
174.272 243.197 l
174.484 243.455 l
174.696 243.712 l
174.909 243.969 l
175.121 244.226 l
175.333 244.482 l
175.545 244.737 l
175.616 244.822 l
175.828 245.077 l
176.040 245.332 l
176.181 245.501 l
176.393 245.755 l
176.676 246.093 l
176.888 246.345 l
177.101 246.598 l
177.313 246.849 l
177.454 247.017 l
177.666 247.268 l
177.878 247.519 l
178.020 247.686 l
178.303 248.019 l
178.444 248.185 l
178.656 248.435 l
178.868 248.683 l
179.010 248.849 l
179.222 249.097 l
179.434 249.345 l
179.646 249.592 l
179.858 249.839 l
180.070 250.085 l
180.353 250.413 l
180.494 250.576 l
180.777 250.903 l
181.131 251.310 l
181.414 251.635 l
181.626 251.879 l
181.838 252.122 l
182.121 252.445 l
182.404 252.767 l
182.616 253.009 l
182.828 253.250 l
183.040 253.490 l
183.252 253.731 l
183.535 254.050 l
183.818 254.369 l
184.030 254.608 l
184.242 254.846 l
184.383 255.005 l
184.595 255.243 l
184.878 255.559 l
185.161 255.874 l
185.373 256.111 l
185.515 256.268 l
185.797 256.582 l
186.010 256.817 l
186.151 256.973 l
186.363 257.208 l
186.646 257.520 l
186.858 257.753 l
187.070 257.987 l
187.212 258.142 l
187.424 258.374 l
187.494 258.614 l
187.777 258.891 l
188.060 259.167 l
188.343 259.442 l
188.484 259.580 l
188.767 259.855 l
189.050 260.129 l
189.333 260.402 l
189.545 260.607 l
189.899 260.948 l
190.111 261.152 l
190.464 261.492 l
190.747 261.763 l
191.030 262.033 l
191.313 262.303 l
191.454 262.438 l
191.595 262.573 l
191.878 262.842 l
192.020 262.976 l
192.303 263.244 l
192.515 263.445 l
192.727 263.646 l
193.010 263.913 l
193.151 264.046 l
193.363 264.246 l
193.505 264.379 l
193.787 264.644 l
193.929 264.777 l
194.070 264.910 l
194.424 265.240 l
194.777 265.570 l
195.060 265.833 l
195.343 266.096 l
195.555 266.293 l
195.838 266.555 l
196.050 266.751 l
196.333 267.013 l
196.545 267.208 l
196.828 267.468 l
196.969 267.598 l
197.252 267.858 l
197.464 268.052 l
197.818 268.376 l
198.101 268.634 l
198.313 268.827 l
198.525 269.020 l
198.666 269.149 l
198.878 269.341 l
199.161 269.598 l
199.585 269.982 l
199.868 270.237 l
200.010 270.364 l
200.292 270.619 l
200.575 270.873 l
200.858 271.126 l
201.141 271.379 l
201.282 271.506 l
201.565 271.758 l
201.707 271.884 l
201.919 272.073 l
202.202 272.325 l
202.414 272.513 l
202.626 272.701 l
202.979 273.014 l
203.191 273.201 l
203.474 273.450 l
203.616 273.575 l
203.969 273.886 l
204.323 274.196 l
204.464 274.319 l
204.676 274.505 l
204.959 274.752 l
205.171 274.937 l
205.454 275.183 l
205.737 275.429 l
205.949 275.613 l
206.161 275.797 l
206.303 275.919 l
206.585 276.164 l
206.727 276.286 l
206.939 276.469 l
207.222 276.712 l
207.505 276.955 l
207.787 277.198 l
208.070 277.440 l
208.282 277.621 l
208.494 277.802 l
208.636 277.923 l
208.848 278.104 l
209.131 278.344 l
209.343 278.524 l
209.626 278.764 l
209.767 278.884 l
209.979 279.063 l
210.333 279.362 l
210.616 279.600 l
210.757 279.719 l
210.969 279.898 l
211.252 280.135 l
211.535 280.372 l
211.818 280.609 l
212.030 280.786 l
212.242 280.963 l
212.525 281.198 l
212.666 281.316 l
212.878 281.492 l
213.161 281.727 l
213.373 281.902 l
213.656 282.136 l
213.939 282.370 l
214.222 282.603 l
214.505 282.835 l
214.717 283.010 l
214.858 283.126 l
215.070 283.299 l
215.141 283.357 l
215.212 283.415 l
215.565 283.704 l
215.777 283.877 l
216.060 284.108 l
216.343 284.338 l
216.484 284.453 l
216.767 284.682 l
216.979 284.854 l
217.262 285.083 l
217.616 285.368 l
217.969 285.653 l
218.323 285.937 l
218.676 286.221 l
218.747 286.277 l
219.030 286.504 l
219.101 286.560 l
219.383 286.786 l
219.595 286.955 l
220.020 287.293 l
220.303 287.517 l
220.585 287.742 l
220.797 287.909 l
221.080 288.133 l
221.292 288.300 l
221.505 288.468 l
221.787 288.690 l
221.929 288.801 l
222.212 289.023 l
222.353 289.134 l
222.707 289.411 l
222.989 289.632 l
223.343 289.908 l
223.626 290.128 l
223.696 290.183 l
223.838 290.293 l
223.979 290.402 l
224.262 290.622 l
224.474 290.786 l
224.686 290.950 l
224.899 291.114 l
225.323 291.441 l
225.393 291.495 l
225.464 291.550 l
225.818 291.821 l
225.959 291.930 l
226.242 292.147 l
226.595 292.417 l
226.949 292.687 l
227.161 292.849 l
227.515 293.118 l
227.797 293.332 l
227.868 293.386 l
227.939 293.440 l
228.222 293.654 l
228.505 293.868 l
228.646 293.974 l
228.858 294.134 l
229.212 294.401 l
229.494 294.613 l
229.777 294.826 l
229.848 294.879 l
230.060 295.038 l
230.272 295.196 l
230.555 295.408 l
230.767 295.566 l
231.050 295.777 l
231.262 295.934 l
231.474 296.092 l
231.616 296.197 l
231.969 296.459 l
232.040 296.511 l
232.111 296.564 l
232.393 296.773 l
232.535 296.877 l
232.888 297.138 l
233.030 297.242 l
233.242 297.398 l
233.525 297.606 l
233.808 297.813 l
234.020 297.968 l
234.303 298.175 l
234.585 298.382 l
234.868 298.588 l
235.080 298.742 l
235.292 298.896 l
235.646 299.153 l
235.929 299.358 l
236.141 299.511 l
236.424 299.715 l
236.707 299.919 l
236.989 300.123 l
237.131 300.225 l
237.414 300.428 l
237.626 300.580 l
237.767 300.681 l
238.121 300.934 l
238.404 301.136 l
238.686 301.338 l
238.828 301.438 l
239.181 301.690 l
239.464 301.890 l
239.676 302.041 l
240.030 302.291 l
240.383 302.541 l
240.525 302.640 l
240.878 302.889 l
241.232 303.138 l
241.515 303.336 l
241.797 303.535 l
242.010 303.683 l
242.151 303.782 l
242.575 304.078 l
242.787 304.226 l
243.212 304.520 l
243.424 304.668 l
243.707 304.864 l
243.919 305.011 l
244.060 305.108 l
244.202 305.206 l
244.272 305.255 l
244.343 305.304 l
244.555 305.450 l
244.767 305.596 l
244.979 305.742 l
245.333 305.985 l
245.686 306.227 l
245.898 306.372 l
246.111 306.517 l
246.464 306.759 l
246.676 306.903 l
246.818 307.000 l
247.101 307.192 l
247.383 307.384 l
247.595 307.528 l
247.737 307.624 l
247.949 307.767 l
248.232 307.958 l
248.515 308.149 l
248.797 308.340 l
248.868 308.387 l
248.939 308.435 l
249.080 308.530 l
249.505 308.815 l
249.787 309.004 l
250.141 309.241 l
250.494 309.477 l
250.848 309.712 l
251.202 309.948 l
251.484 310.135 l
251.696 310.276 l
251.979 310.463 l
252.404 310.744 l
252.686 310.930 l
252.898 311.070 l
253.111 311.209 l
253.393 311.395 l
253.747 311.627 l
254.030 311.812 l
254.454 312.089 l
254.878 312.366 l
255.020 312.458 l
255.444 312.734 l
255.797 312.963 l
256.080 313.146 l
256.222 313.238 l
256.575 313.466 l
256.858 313.648 l
257.212 313.876 l
257.353 313.967 l
257.707 314.194 l
257.919 314.330 l
258.131 314.466 l
258.484 314.692 l
258.838 314.917 l
259.191 315.142 l
259.474 315.322 l
259.757 315.502 l
260.181 315.771 l
260.393 315.905 l
260.747 316.128 l
261.030 316.306 l
261.383 316.529 l
261.454 316.573 l
261.525 316.618 l
261.737 316.751 l
261.949 316.884 l
262.303 317.106 l
262.727 317.371 l
263.010 317.547 l
263.080 317.591 l
263.151 317.636 l
263.222 317.680 l
263.363 317.768 l
263.575 317.900 l
263.929 318.119 l
264.282 318.338 l
264.494 318.470 l
264.636 318.557 l
264.919 318.732 l
264.989 318.775 l
265.060 318.819 l
265.272 318.950 l
265.555 319.124 l
265.838 319.298 l
266.262 319.558 l
266.333 319.602 l
266.404 319.645 l
266.474 319.688 l
266.616 319.775 l
266.757 319.861 l
266.898 319.948 l
267.181 320.120 l
267.393 320.250 l
267.464 320.293 l
267.535 320.336 l
267.959 320.594 l
268.171 320.723 l
268.454 320.894 l
268.737 321.065 l
269.020 321.236 l
269.444 321.492 l
269.656 321.620 l
269.797 321.705 l
270.292 322.003 l
270.363 322.045 l
270.505 322.130 l
270.575 322.172 l
270.717 322.257 l
271.070 322.469 l
271.141 322.511 l
271.212 322.553 l
271.707 322.849 l
271.848 322.933 l
271.919 322.975 l
271.989 323.017 l
272.272 323.185 l
272.484 323.311 l
272.767 323.479 l
272.909 323.563 l
273.262 323.772 l
273.474 323.897 l
273.898 324.147 l
274.181 324.314 l
274.252 324.355 l
274.323 324.397 l
274.464 324.480 l
274.535 324.522 l
274.747 324.646 l
274.888 324.729 l
274.959 324.771 l
275.101 324.853 l
275.313 324.978 l
275.383 325.019 l
275.454 325.060 l
275.666 325.184 l
276.020 325.390 l
276.373 325.596 l
276.656 325.761 l
277.080 326.007 l
277.292 326.130 l
277.363 326.171 l
277.434 326.212 l
277.858 326.457 l
278.212 326.661 l
278.353 326.742 l
278.777 326.986 l
279.131 327.189 l
279.272 327.271 l
279.414 327.352 l
279.484 327.392 l
279.555 327.433 l
279.979 327.675 l
280.191 327.796 l
280.333 327.877 l
280.404 327.917 l
280.474 327.958 l
280.969 328.239 l
281.111 328.320 l
281.323 328.440 l
281.535 328.560 l
281.818 328.721 l
281.959 328.801 l
282.242 328.960 l
282.454 329.080 l
282.595 329.160 l
282.808 329.280 l
283.232 329.518 l
283.373 329.598 l
283.727 329.796 l
284.151 330.034 l
284.292 330.113 l
284.363 330.152 l
284.434 330.192 l
284.858 330.429 l
285.282 330.665 l
285.636 330.861 l
285.777 330.940 l
286.131 331.136 l
286.414 331.292 l
286.696 331.449 l
287.050 331.644 l
287.333 331.800 l
287.616 331.955 l
287.757 332.033 l
287.969 332.150 l
288.252 332.305 l
288.535 332.460 l
288.606 332.499 l
288.676 332.537 l
288.959 332.692 l
289.171 332.808 l
289.454 332.962 l
289.666 333.077 l
289.737 333.116 l
289.808 333.154 l
290.090 333.308 l
290.161 333.347 l
290.232 333.385 l
290.303 333.423 l
290.373 333.462 l
290.444 333.500 l
290.515 333.538 l
290.727 333.653 l
291.010 333.806 l
291.080 333.845 l
291.292 333.959 l
291.505 334.074 l
291.717 334.188 l
291.999 334.341 l
292.212 334.455 l
292.282 334.493 l
292.353 334.531 l
292.777 334.758 l
292.919 334.834 l
292.989 334.872 l
293.060 334.910 l
293.272 335.024 l
293.414 335.099 l
293.626 335.213 l
293.696 335.250 l
293.909 335.363 l
294.333 335.589 l
294.616 335.740 l
294.757 335.815 l
294.969 335.928 l
295.252 336.078 l
295.323 336.115 l
295.393 336.152 l
295.676 336.302 l
296.030 336.489 l
296.313 336.638 l
296.383 336.675 l
296.454 336.713 l
296.595 336.787 l
296.878 336.936 l
297.232 337.121 l
297.303 337.159 l
297.373 337.196 l
297.444 337.233 l
297.797 337.418 l
298.151 337.603 l
298.434 337.750 l
298.858 337.972 l
299.141 338.119 l
299.424 338.266 l
299.565 338.339 l
299.848 338.486 l
300.131 338.632 l
300.343 338.742 l
300.414 338.779 l
300.696 338.925 l
301.191 339.180 l
301.545 339.362 l
301.757 339.471 l
301.828 339.507 l
301.898 339.543 l
302.111 339.652 l
302.393 339.797 l
302.676 339.942 l
302.959 340.086 l
303.242 340.231 l
303.666 340.447 l
303.949 340.591 l
304.232 340.734 l
304.373 340.806 l
304.656 340.949 l
304.727 340.985 l
304.797 341.021 l
304.939 341.093 l
305.151 341.200 l
305.505 341.378 l
305.858 341.557 l
306.212 341.735 l
306.353 341.806 l
306.494 341.877 l
306.565 341.912 l
306.636 341.948 l
306.989 342.125 l
307.272 342.267 l
307.343 342.302 l
307.555 342.408 l
307.979 342.620 l
308.404 342.831 l
308.686 342.972 l
308.969 343.112 l
309.393 343.323 l
309.464 343.358 l
309.535 343.393 l
309.888 343.568 l
310.242 343.742 l
310.525 343.882 l
310.737 343.986 l
311.161 344.195 l
311.373 344.299 l
311.444 344.334 l
311.585 344.403 l
311.727 344.473 l
311.797 344.507 l
311.868 344.542 l
312.222 344.715 l
312.646 344.922 l
312.787 344.991 l
313.070 345.129 l
313.424 345.301 l
313.777 345.473 l
314.131 345.644 l
314.343 345.747 l
314.626 345.884 l
315.050 346.089 l
315.191 346.157 l
315.262 346.191 l
315.333 346.225 l
315.474 346.293 l
315.757 346.429 l
316.040 346.565 l
316.111 346.599 l
316.181 346.633 l
316.323 346.701 l
316.747 346.905 l
316.818 346.938 l
316.959 347.006 l
317.242 347.141 l
317.666 347.344 l
317.878 347.445 l
318.302 347.647 l
318.727 347.848 l
319.151 348.050 l
319.575 348.250 l
319.999 348.451 l
320.070 348.484 l
320.141 348.517 l
320.494 348.684 l
320.848 348.850 l
321.131 348.983 l
321.202 349.016 l
321.272 349.050 l
321.343 349.083 l
321.414 349.116 l
321.767 349.282 l
322.050 349.414 l
322.333 349.546 l
322.616 349.678 l
323.040 349.876 l
323.464 350.073 l
323.747 350.204 l
323.959 350.302 l
324.030 350.335 l
324.171 350.401 l
324.454 350.532 l
324.878 350.728 l
325.232 350.891 l
325.444 350.988 l
325.868 351.184 l
326.010 351.249 l
326.292 351.378 l
326.646 351.540 l
326.929 351.670 l
327.282 351.831 l
327.494 351.928 l
327.565 351.960 l
327.636 351.993 l
328.131 352.218 l
328.484 352.379 l
328.696 352.475 l
329.121 352.667 l
329.404 352.795 l
329.616 352.891 l
330.040 353.083 l
330.393 353.242 l
330.606 353.338 l
330.676 353.370 l
331.030 353.528 l
331.454 353.719 l
331.737 353.846 l
331.808 353.877 l
331.878 353.909 l
332.302 354.098 l
332.515 354.193 l
332.656 354.256 l
333.010 354.414 l
333.080 354.445 l
333.151 354.477 l
333.363 354.571 l
333.575 354.665 l
333.999 354.854 l
334.212 354.948 l
334.424 355.041 l
334.494 355.073 l
334.565 355.104 l
334.777 355.198 l
334.848 355.229 l
334.989 355.291 l
335.060 355.323 l
335.131 355.354 l
335.201 355.385 l
335.272 355.416 l
335.343 355.447 l
335.414 355.478 l
335.484 355.510 l
335.838 355.665 l
336.121 355.789 l
336.545 355.976 l
337.111 356.223 l
337.464 356.378 l
337.535 356.409 l
337.606 356.439 l
337.888 356.563 l
338.171 356.686 l
338.454 356.809 l
338.878 356.993 l
338.949 357.024 l
339.020 357.055 l
339.515 357.269 l
339.868 357.422 l
340.010 357.483 l
340.222 357.575 l
340.292 357.605 l
340.363 357.636 l
340.434 357.666 l
340.505 357.697 l
340.646 357.757 l
340.717 357.788 l
340.929 357.879 l
341.212 358.001 l
341.282 358.031 l
341.353 358.062 l
341.636 358.183 l
342.060 358.365 l
342.343 358.486 l
342.555 358.576 l
342.696 358.637 l
342.767 358.667 l
343.191 358.848 l
343.262 358.878 l
343.333 358.908 l
343.474 358.968 l
343.545 358.998 l
343.616 359.028 l
343.757 359.088 l
343.969 359.178 l
344.040 359.208 l
344.111 359.238 l
344.181 359.268 l
344.252 359.298 l
344.464 359.388 l
344.535 359.418 l
344.606 359.448 l
344.747 359.508 l
344.818 359.538 l
344.888 359.568 l
344.959 359.598 l
345.030 359.628 l
345.100 359.657 l
345.171 359.687 l
345.383 359.777 l
345.666 359.896 l
345.949 360.015 l
346.161 360.105 l
346.444 360.223 l
346.515 360.253 l
346.656 360.312 l
347.010 360.461 l
347.080 360.490 l
347.151 360.520 l
347.292 360.579 l
347.363 360.609 l
347.434 360.638 l
347.505 360.668 l
347.575 360.697 l
347.858 360.816 l
347.929 360.845 l
347.999 360.875 l
348.141 360.934 l
348.212 360.963 l
348.282 360.993 l
348.353 361.022 l
348.424 361.052 l
348.494 361.081 l
348.565 361.110 l
348.636 361.140 l
348.707 361.169 l
348.848 361.228 l
348.919 361.257 l
348.989 361.287 l
349.060 361.316 l
349.272 361.404 l
349.555 361.522 l
349.909 361.668 l
350.333 361.844 l
350.404 361.873 l
350.474 361.902 l
350.828 362.048 l
350.898 362.077 l
350.969 362.106 l
351.323 362.252 l
351.393 362.281 l
351.464 362.310 l
351.888 362.484 l
351.959 362.513 l
352.242 362.629 l
352.313 362.658 l
352.383 362.687 l
352.454 362.716 l
352.595 362.774 l
352.737 362.832 l
352.808 362.861 l
352.878 362.890 l
353.020 362.947 l
353.302 363.063 l
353.444 363.121 l
353.515 363.149 l
353.656 363.207 l
353.797 363.265 l
353.868 363.293 l
354.010 363.351 l
354.292 363.466 l
354.575 363.581 l
354.787 363.667 l
355.070 363.782 l
355.282 363.867 l
355.565 363.982 l
355.989 364.153 l
356.131 364.210 l
356.201 364.239 l
356.272 364.267 l
356.343 364.296 l
356.414 364.324 l
356.555 364.381 l
356.909 364.523 l
356.979 364.552 l
357.050 364.580 l
357.404 364.722 l
357.545 364.779 l
357.616 364.807 l
357.686 364.835 l
357.828 364.892 l
357.898 364.920 l
357.969 364.949 l
358.393 365.118 l
358.676 365.231 l
358.888 365.316 l
358.959 365.344 l
359.100 365.400 l
359.313 365.485 l
359.383 365.513 l
359.454 365.541 l
359.525 365.569 l
359.808 365.681 l
360.020 365.766 l
360.090 365.794 l
360.161 365.822 l
360.302 365.878 l
360.373 365.906 l
360.444 365.934 l
360.515 365.962 l
360.585 365.990 l
360.656 366.018 l
360.727 366.046 l
361.080 366.186 l
361.151 366.214 l
361.222 366.241 l
361.646 366.409 l
362.070 366.576 l
362.353 366.687 l
362.636 366.798 l
362.848 366.881 l
362.919 366.909 l
363.131 366.992 l
363.414 367.103 l
363.696 367.214 l
363.838 367.269 l
363.909 367.296 l
364.262 367.434 l
364.404 367.490 l
364.474 367.517 l
364.616 367.572 l
364.686 367.600 l
364.757 367.627 l
364.828 367.655 l
364.898 367.682 l
364.969 367.710 l
365.040 367.737 l
365.323 367.847 l
365.606 367.957 l
365.818 368.039 l
365.959 368.094 l
366.030 368.121 l
366.101 368.149 l
366.171 368.176 l
366.383 368.258 l
366.454 368.285 l
366.525 368.313 l
366.595 368.340 l
366.949 368.476 l
367.232 368.585 l
367.515 368.694 l
367.797 368.803 l
368.080 368.912 l
368.222 368.966 l
368.292 368.993 l
368.434 369.047 l
368.575 369.101 l
368.999 369.264 l
369.141 369.318 l
369.494 369.453 l
369.707 369.534 l
370.060 369.669 l
370.131 369.696 l
370.343 369.776 l
370.484 369.830 l
370.555 369.857 l
370.696 369.911 l
370.767 369.938 l
370.979 370.018 l
371.050 370.045 l
371.191 370.098 l
371.404 370.179 l
371.686 370.286 l
371.828 370.339 l
371.898 370.366 l
371.969 370.393 l
372.040 370.420 l
372.181 370.473 l
372.252 370.500 l
372.323 370.526 l
372.535 370.606 l
372.606 370.633 l
372.676 370.660 l
372.747 370.686 l
372.888 370.740 l
373.100 370.819 l
373.383 370.926 l
373.525 370.979 l
373.595 371.005 l
373.666 371.032 l
373.878 371.112 l
373.949 371.138 l
374.232 371.244 l
374.585 371.376 l
374.797 371.456 l
374.868 371.482 l
374.939 371.508 l
375.010 371.535 l
375.080 371.561 l
375.505 371.719 l
375.575 371.746 l
375.646 371.772 l
376.070 371.930 l
376.212 371.983 l
376.282 372.009 l
376.353 372.035 l
376.494 372.088 l
376.565 372.114 l
376.989 372.271 l
377.131 372.323 l
377.272 372.376 l
377.343 372.402 l
377.414 372.428 l
377.484 372.454 l
377.767 372.559 l
378.050 372.663 l
378.333 372.767 l
378.404 372.793 l
378.474 372.819 l
378.545 372.845 l
378.686 372.897 l
378.969 373.001 l
379.040 373.027 l
379.252 373.105 l
379.323 373.131 l
379.393 373.157 l
379.888 373.339 l
380.030 373.390 l
380.171 373.442 l
380.242 373.468 l
380.383 373.520 l
380.737 373.649 l
380.949 373.726 l
381.020 373.752 l
381.090 373.778 l
381.161 373.803 l
381.232 373.829 l
381.373 373.881 l
381.585 373.958 l
381.656 373.984 l
381.868 374.061 l
382.222 374.189 l
382.292 374.215 l
382.434 374.266 l
382.505 374.292 l
382.575 374.317 l
382.787 374.394 l
382.858 374.420 l
382.929 374.445 l
382.999 374.471 l
383.212 374.547 l
383.282 374.573 l
383.353 374.598 l
383.424 374.624 l
383.494 374.650 l
383.777 374.752 l
384.060 374.853 l
384.343 374.955 l
384.484 375.006 l
384.555 375.032 l
384.626 375.057 l
384.696 375.082 l
385.191 375.260 l
385.262 375.285 l
385.333 375.311 l
385.686 375.437 l
385.828 375.488 l
385.969 375.538 l
386.040 375.564 l
386.111 375.589 l
386.252 375.640 l
386.393 375.690 l
386.464 375.715 l
386.606 375.766 l
386.747 375.816 l
386.888 375.866 l
386.959 375.892 l
387.030 375.917 l
387.100 375.942 l
387.171 375.967 l
387.525 376.093 l
387.737 376.168 l
388.090 376.294 l
388.373 376.394 l
388.656 376.494 l
388.797 376.544 l
388.868 376.569 l
388.939 376.594 l
389.080 376.644 l
389.222 376.694 l
389.292 376.719 l
389.363 376.744 l
389.575 376.819 l
389.646 376.843 l
389.858 376.918 l
389.929 376.943 l
389.999 376.968 l
390.282 377.067 l
390.565 377.167 l
390.707 377.216 l
390.777 377.241 l
390.848 377.266 l
390.919 377.291 l
391.201 377.390 l
391.272 377.415 l
391.414 377.464 l
391.484 377.489 l
391.555 377.514 l
391.909 377.637 l
392.050 377.687 l
392.121 377.711 l
392.333 377.785 l
392.757 377.933 l
392.828 377.958 l
392.898 377.982 l
393.111 378.056 l
393.181 378.081 l
393.252 378.105 l
393.323 378.130 l
393.393 378.155 l
393.818 378.302 l
394.100 378.400 l
394.454 378.522 l
394.737 378.620 l
394.878 378.669 l
394.949 378.693 l
395.020 378.718 l
395.161 378.766 l
395.302 378.815 l
395.373 378.840 l
395.656 378.937 l
395.797 378.986 l
395.868 379.010 l
396.010 379.059 l
396.504 379.229 l
396.717 379.301 l
397.070 379.423 l
397.353 379.519 l
397.494 379.568 l
397.565 379.592 l
397.636 379.616 l
397.777 379.664 l
397.919 379.713 l
397.989 379.737 l
398.131 379.785 l
398.414 379.882 l
398.838 380.026 l
398.909 380.050 l
398.979 380.074 l
399.050 380.098 l
399.121 380.122 l
399.191 380.146 l
399.262 380.170 l
399.403 380.218 l
399.686 380.314 l
399.828 380.362 l
399.898 380.386 l
399.969 380.410 l
400.111 380.458 l
400.323 380.530 l
400.464 380.577 l
400.535 380.601 l
400.676 380.649 l
401.100 380.792 l
401.383 380.888 l
401.737 381.007 l
402.020 381.102 l
402.090 381.126 l
402.232 381.173 l
402.373 381.221 l
402.444 381.244 l
402.515 381.268 l
402.585 381.292 l
402.656 381.315 l
402.727 381.339 l
402.797 381.363 l
403.010 381.434 l
403.080 381.457 l
403.151 381.481 l
403.504 381.599 l
403.858 381.717 l
403.929 381.741 l
403.999 381.765 l
404.070 381.788 l
404.141 381.812 l
404.565 381.953 l
404.707 382.000 l
404.777 382.024 l
404.919 382.071 l
404.989 382.094 l
405.060 382.118 l
405.131 382.141 l
405.201 382.165 l
405.272 382.188 l
405.555 382.282 l
405.838 382.376 l
405.909 382.399 l
405.979 382.423 l
406.050 382.446 l
406.191 382.493 l
406.262 382.516 l
406.333 382.540 l
406.616 382.633 l
406.686 382.656 l
406.757 382.680 l
406.828 382.703 l
406.969 382.750 l
407.181 382.820 l
407.323 382.866 l
407.393 382.890 l
407.464 382.913 l
407.535 382.936 l
407.606 382.959 l
407.959 383.076 l
408.100 383.122 l
408.171 383.145 l
408.313 383.192 l
408.383 383.215 l
408.595 383.285 l
408.666 383.308 l
408.737 383.331 l
408.949 383.400 l
409.302 383.516 l
409.444 383.562 l
409.515 383.585 l
409.585 383.609 l
409.656 383.632 l
410.080 383.770 l
410.504 383.908 l
410.717 383.977 l
410.787 384.000 l
410.858 384.023 l
410.999 384.069 l
411.141 384.115 l
411.494 384.230 l
411.777 384.322 l
411.848 384.345 l
411.919 384.368 l
412.131 384.436 l
412.201 384.459 l
412.555 384.573 l
412.626 384.596 l
412.696 384.619 l
412.909 384.687 l
412.979 384.710 l
413.262 384.801 l
413.686 384.938 l
413.969 385.029 l
414.040 385.052 l
414.111 385.074 l
414.323 385.143 l
414.393 385.165 l
414.464 385.188 l
414.606 385.233 l
414.676 385.256 l
414.888 385.324 l
415.030 385.369 l
415.100 385.392 l
415.171 385.414 l
415.383 385.482 l
415.454 385.505 l
415.595 385.550 l
415.737 385.595 l
415.808 385.618 l
415.878 385.640 l
416.232 385.753 l
416.585 385.866 l
416.868 385.956 l
416.939 385.978 l
417.010 386.001 l
417.292 386.091 l
417.363 386.113 l
417.434 386.135 l
417.575 386.180 l
417.646 386.203 l
417.717 386.225 l
417.787 386.248 l
417.858 386.270 l
417.929 386.292 l
417.999 386.315 l
418.070 386.337 l
418.141 386.360 l
418.212 386.382 l
418.282 386.404 l
418.353 386.427 l
418.494 386.471 l
418.565 386.494 l
418.707 386.538 l
418.777 386.561 l
418.848 386.583 l
419.131 386.672 l
419.201 386.695 l
419.484 386.784 l
419.555 386.806 l
419.626 386.828 l
419.979 386.939 l
420.121 386.984 l
420.191 387.006 l
420.262 387.028 l
420.333 387.051 l
420.686 387.161 l
420.757 387.184 l
420.828 387.206 l
420.898 387.228 l
420.969 387.250 l
421.040 387.272 l
421.111 387.294 l
421.323 387.361 l
421.393 387.383 l
421.535 387.427 l
421.747 387.493 l
422.100 387.604 l
422.171 387.626 l
422.242 387.648 l
422.525 387.736 l
422.595 387.758 l
422.666 387.780 l
422.949 387.868 l
423.373 388.000 l
423.727 388.110 l
423.939 388.175 l
424.010 388.197 l
424.080 388.219 l
424.151 388.241 l
424.222 388.263 l
424.575 388.372 l
424.858 388.460 l
424.999 388.503 l
425.070 388.525 l
425.282 388.591 l
425.777 388.743 l
425.989 388.808 l
426.131 388.852 l
426.201 388.874 l
426.484 388.960 l
426.767 389.047 l
426.838 389.069 l
426.909 389.091 l
426.979 389.112 l
427.191 389.177 l
427.474 389.264 l
427.545 389.285 l
427.686 389.329 l
427.898 389.394 l
427.969 389.415 l
428.040 389.437 l
428.393 389.545 l
428.535 389.588 l
428.606 389.609 l
428.676 389.631 l
428.818 389.674 l
428.888 389.695 l
429.171 389.782 l
429.242 389.803 l
429.313 389.825 l
429.454 389.867 l
429.525 389.889 l
429.595 389.910 l
429.666 389.932 l
429.737 389.953 l
429.808 389.975 l
429.949 390.018 l
430.020 390.039 l
430.090 390.061 l
430.302 390.125 l
430.373 390.146 l
430.444 390.168 l
430.727 390.253 l
430.797 390.275 l
430.868 390.296 l
431.080 390.360 l
431.151 390.381 l
431.222 390.403 l
431.575 390.509 l
431.717 390.552 l
431.787 390.573 l
431.858 390.595 l
431.929 390.616 l
431.999 390.637 l
432.353 390.744 l
432.424 390.765 l
432.494 390.786 l
432.636 390.829 l
432.707 390.850 l
432.848 390.892 l
433.131 390.977 l
433.272 391.019 l
433.343 391.041 l
433.484 391.083 l
433.555 391.104 l
433.626 391.125 l
433.767 391.168 l
433.838 391.189 l
433.909 391.210 l
433.979 391.231 l
434.050 391.252 l
434.121 391.273 l
434.333 391.337 l
434.474 391.379 l
434.545 391.400 l
434.686 391.442 l
434.757 391.463 l
434.898 391.505 l
435.111 391.569 l
435.181 391.590 l
435.252 391.611 l
435.323 391.632 l
435.393 391.653 l
435.464 391.674 l
435.535 391.695 l
435.676 391.737 l
435.747 391.758 l
435.959 391.821 l
436.030 391.842 l
436.100 391.863 l
436.383 391.947 l
436.454 391.968 l
436.595 392.009 l
436.808 392.072 l
436.878 392.093 l
436.949 392.114 l
437.232 392.198 l
437.373 392.239 l
437.444 392.260 l
437.585 392.302 l
437.656 392.323 l
437.727 392.344 l
437.868 392.386 l
437.939 392.406 l
438.010 392.427 l
438.151 392.469 l
438.434 392.552 l
438.504 392.573 l
438.575 392.594 l
438.929 392.698 l
439.353 392.822 l
439.494 392.864 l
439.565 392.884 l
439.636 392.905 l
439.848 392.967 l
440.201 393.071 l
440.343 393.112 l
440.414 393.133 l
440.484 393.153 l
440.626 393.195 l
441.050 393.318 l
441.191 393.360 l
441.262 393.380 l
441.333 393.401 l
441.474 393.442 l
441.686 393.504 l
441.898 393.565 l
442.252 393.668 l
442.323 393.689 l
442.393 393.709 l
442.676 393.791 l
442.818 393.832 l
442.888 393.853 l
443.030 393.894 l
443.100 393.914 l
443.171 393.935 l
443.242 393.955 l
443.313 393.975 l
443.525 394.037 l
443.878 394.139 l
443.949 394.159 l
444.020 394.180 l
444.090 394.200 l
444.161 394.220 l
444.302 394.261 l
444.373 394.282 l
444.444 394.302 l
444.515 394.322 l
444.585 394.343 l
444.727 394.383 l
444.797 394.404 l
444.868 394.424 l
444.939 394.444 l
445.010 394.465 l
445.222 394.526 l
445.363 394.566 l
445.434 394.587 l
445.717 394.668 l
446.141 394.789 l
446.212 394.810 l
446.282 394.830 l
446.494 394.891 l
446.565 394.911 l
446.636 394.931 l
446.707 394.951 l
446.848 394.992 l
446.919 395.012 l
447.060 395.052 l
447.555 395.193 l
447.838 395.274 l
447.909 395.294 l
448.050 395.334 l
448.121 395.355 l
448.333 395.415 l
448.403 395.435 l
448.474 395.455 l
448.828 395.555 l
449.181 395.656 l
449.252 395.676 l
449.323 395.696 l
449.606 395.776 l
449.676 395.796 l
449.747 395.816 l
450.030 395.896 l
450.100 395.916 l
450.171 395.936 l
450.242 395.956 l
450.313 395.976 l
450.383 395.996 l
450.525 396.036 l
450.595 396.055 l
450.666 396.075 l
450.878 396.135 l
450.949 396.155 l
451.020 396.175 l
451.161 396.215 l
451.232 396.235 l
451.302 396.255 l
451.515 396.314 l
451.797 396.394 l
451.939 396.433 l
452.010 396.453 l
452.292 396.533 l
452.363 396.552 l
452.434 396.572 l
452.717 396.652 l
452.787 396.671 l
452.858 396.691 l
453.141 396.770 l
453.212 396.790 l
453.282 396.810 l
453.424 396.849 l
453.494 396.869 l
453.565 396.889 l
453.707 396.928 l
454.131 397.046 l
454.272 397.086 l
454.343 397.106 l
454.414 397.125 l
454.484 397.145 l
454.626 397.184 l
454.696 397.204 l
454.979 397.283 l
455.050 397.302 l
455.121 397.322 l
455.403 397.400 l
455.474 397.420 l
455.616 397.459 l
455.757 397.498 l
455.828 397.518 l
455.898 397.537 l
455.969 397.557 l
456.040 397.577 l
456.111 397.596 l
456.181 397.616 l
456.252 397.635 l
456.323 397.655 l
456.464 397.694 l
456.818 397.792 l
456.888 397.811 l
456.959 397.831 l
457.242 397.909 l
457.313 397.928 l
457.383 397.948 l
457.808 398.064 l
458.232 398.181 l
458.444 398.239 l
458.515 398.259 l
458.585 398.278 l
458.727 398.317 l
458.868 398.356 l
458.939 398.375 l
459.010 398.395 l
459.222 398.453 l
459.717 398.588 l
460.070 398.685 l
460.141 398.704 l
460.212 398.723 l
460.494 398.800 l
460.565 398.820 l
460.636 398.839 l
460.989 398.935 l
461.060 398.954 l
461.131 398.974 l
461.414 399.051 l
461.484 399.070 l
461.626 399.108 l
461.838 399.166 l
461.909 399.185 l
461.979 399.204 l
462.050 399.223 l
462.121 399.243 l
462.333 399.300 l
462.403 399.319 l
462.474 399.338 l
462.616 399.377 l
462.686 399.396 l
462.828 399.434 l
462.898 399.453 l
462.969 399.472 l
463.040 399.491 l
463.111 399.511 l
463.181 399.530 l
463.252 399.549 l
463.464 399.606 l
463.535 399.625 l
463.606 399.644 l
463.676 399.663 l
463.747 399.682 l
463.888 399.720 l
464.383 399.854 l
464.525 399.892 l
464.595 399.911 l
464.666 399.930 l
464.808 399.968 l
464.949 400.006 l
465.020 400.025 l
465.161 400.063 l
465.232 400.082 l
465.373 400.120 l
465.656 400.195 l
465.727 400.214 l
465.868 400.252 l
466.222 400.347 l
466.363 400.385 l
466.434 400.404 l
466.717 400.479 l
467.282 400.630 l
467.707 400.743 l
468.201 400.875 l
468.343 400.912 l
468.414 400.931 l
468.484 400.950 l
468.555 400.968 l
468.626 400.987 l
468.767 401.025 l
469.121 401.118 l
469.262 401.156 l
469.333 401.175 l
469.545 401.231 l
469.616 401.249 l
469.686 401.268 l
469.757 401.287 l
469.828 401.305 l
470.040 401.362 l
470.111 401.380 l
470.181 401.399 l
470.323 401.436 l
470.393 401.455 l
470.464 401.473 l
470.535 401.492 l
470.676 401.529 l
470.818 401.567 l
470.888 401.585 l
470.959 401.604 l
471.030 401.622 l
471.100 401.641 l
471.171 401.660 l
471.242 401.678 l
471.595 401.771 l
471.666 401.790 l
471.737 401.808 l
472.090 401.901 l
472.232 401.938 l
472.302 401.957 l
472.444 401.994 l
472.515 402.012 l
472.656 402.049 l
473.151 402.179 l
473.292 402.216 l
473.363 402.234 l
473.434 402.253 l
473.504 402.271 l
473.575 402.290 l
473.646 402.308 l
473.787 402.345 l
473.858 402.363 l
473.929 402.382 l
473.999 402.400 l
474.141 402.437 l
474.282 402.474 l
474.353 402.492 l
474.424 402.511 l
474.494 402.529 l
474.636 402.566 l
475.131 402.694 l
475.201 402.713 l
475.272 402.731 l
475.484 402.786 l
475.555 402.804 l
475.696 402.841 l
476.121 402.951 l
476.262 402.988 l
476.333 403.006 l
476.474 403.042 l
476.545 403.061 l
476.686 403.097 l
477.181 403.225 l
477.605 403.334 l
477.676 403.353 l
477.747 403.371 l
477.888 403.407 l
477.959 403.425 l
478.030 403.443 l
478.100 403.462 l
478.171 403.480 l
478.313 403.516 l
478.454 403.553 l
478.525 403.571 l
478.666 403.607 l
478.737 403.625 l
478.808 403.643 l
479.161 403.734 l
479.232 403.752 l
479.302 403.770 l
479.656 403.861 l
479.727 403.879 l
479.797 403.897 l
480.222 404.005 l
480.363 404.041 l
480.434 404.059 l
480.504 404.077 l
480.575 404.095 l
480.646 404.113 l
480.787 404.149 l
481.353 404.293 l
481.424 404.311 l
481.494 404.329 l
481.565 404.347 l
481.707 404.383 l
481.777 404.401 l
481.919 404.437 l
482.201 404.509 l
482.272 404.527 l
482.343 404.545 l
482.414 404.563 l
482.484 404.581 l
482.555 404.599 l
482.626 404.617 l
482.696 404.634 l
482.838 404.670 l
482.979 404.706 l
483.050 404.724 l
483.403 404.813 l
483.545 404.849 l
483.616 404.867 l
483.686 404.885 l
483.828 404.920 l
483.898 404.938 l
483.969 404.956 l
484.040 404.974 l
484.111 404.992 l
484.181 405.010 l
484.393 405.063 l
484.464 405.081 l
484.535 405.099 l
484.818 405.170 l
484.888 405.188 l
484.959 405.205 l
485.030 405.223 l
485.171 405.259 l
485.383 405.312 l
485.454 405.330 l
485.525 405.347 l
486.020 405.472 l
486.515 405.595 l
486.656 405.631 l
486.727 405.649 l
487.010 405.719 l
487.151 405.754 l
487.222 405.772 l
487.504 405.843 l
487.575 405.860 l
487.646 405.878 l
487.787 405.913 l
487.858 405.931 l
487.929 405.948 l
488.141 406.001 l
488.212 406.019 l
488.282 406.036 l
488.565 406.107 l
488.636 406.124 l
488.707 406.142 l
488.777 406.159 l
488.848 406.177 l
488.919 406.194 l
488.989 406.212 l
489.060 406.230 l
489.201 406.265 l
489.343 406.300 l
489.414 406.317 l
489.626 406.370 l
489.696 406.387 l
489.838 406.422 l
490.333 406.545 l
490.403 406.562 l
490.474 406.580 l
490.686 406.632 l
490.757 406.649 l
490.898 406.684 l
491.040 406.719 l
491.111 406.737 l
491.181 406.754 l
491.323 406.789 l
491.393 406.806 l
491.535 406.841 l
491.818 406.911 l
491.959 406.945 l
492.100 406.980 l
492.171 406.998 l
492.242 407.015 l
492.313 407.032 l
492.383 407.050 l
492.525 407.084 l
492.595 407.102 l
492.949 407.188 l
493.020 407.206 l
493.161 407.240 l
493.444 407.310 l
493.515 407.327 l
493.585 407.344 l
493.656 407.361 l
493.727 407.379 l
494.151 407.482 l
494.222 407.500 l
494.292 407.517 l
494.575 407.586 l
494.646 407.603 l
494.787 407.638 l
495.141 407.724 l
495.212 407.741 l
495.282 407.758 l
495.353 407.775 l
495.424 407.792 l
495.707 407.861 l
495.777 407.878 l
495.848 407.895 l
495.919 407.913 l
495.989 407.930 l
496.131 407.964 l
496.201 407.981 l
496.343 408.016 l
496.414 408.033 l
496.484 408.050 l
496.838 408.135 l
496.909 408.152 l
496.979 408.170 l
497.191 408.221 l
497.262 408.238 l
497.474 408.289 l
497.545 408.306 l
497.616 408.323 l
497.969 408.409 l
498.040 408.426 l
498.111 408.443 l
498.252 408.477 l
498.323 408.494 l
498.393 408.511 l
498.464 408.528 l
498.605 408.562 l
498.676 408.579 l
498.747 408.596 l
499.030 408.664 l
499.100 408.681 l
499.242 408.715 l
499.737 408.834 l
499.878 408.868 l
499.949 408.885 l
500.161 408.935 l
500.232 408.952 l
500.302 408.969 l
500.373 408.986 l
500.444 409.003 l
500.868 409.104 l
501.010 409.138 l
501.151 409.172 l
501.292 409.206 l
501.363 409.223 l
501.504 409.256 l
502.070 409.391 l
502.565 409.509 l
502.636 409.526 l
502.706 409.542 l
503.201 409.660 l
503.484 409.727 l
503.555 409.744 l
503.626 409.760 l
503.767 409.794 l
503.909 409.827 l
503.979 409.844 l
504.121 409.878 l
504.191 409.894 l
504.333 409.928 l
504.403 409.944 l
504.828 410.045 l
504.898 410.061 l
505.040 410.095 l
505.464 410.195 l
505.606 410.228 l
505.676 410.245 l
506.030 410.328 l
506.100 410.344 l
506.171 410.361 l
506.242 410.378 l
506.666 410.477 l
506.808 410.510 l
506.878 410.527 l
507.161 410.593 l
507.232 410.610 l
507.373 410.643 l
507.797 410.742 l
507.939 410.775 l
508.010 410.792 l
508.151 410.825 l
508.434 410.891 l
508.575 410.924 l
508.646 410.940 l
508.929 411.006 l
508.999 411.023 l
509.070 411.039 l
509.141 411.056 l
509.212 411.072 l
509.565 411.154 l
509.636 411.171 l
509.706 411.187 l
509.777 411.204 l
509.848 411.220 l
510.201 411.302 l
510.272 411.318 l
510.343 411.335 l
510.484 411.368 l
510.555 411.384 l
510.626 411.400 l
510.838 411.450 l
510.909 411.466 l
510.979 411.482 l
511.333 411.564 l
511.403 411.580 l
511.474 411.597 l
511.545 411.613 l
511.616 411.629 l
511.898 411.695 l
511.969 411.711 l
512.111 411.744 l
512.606 411.858 l
512.676 411.874 l
512.747 411.890 l
513.242 412.004 l
513.454 412.053 l
513.525 412.069 l
513.666 412.102 l
513.737 412.118 l
513.878 412.150 l
514.020 412.183 l
514.090 412.199 l
514.373 412.264 l
514.444 412.280 l
514.515 412.296 l
514.585 412.312 l
514.656 412.329 l
514.939 412.393 l
515.010 412.409 l
515.080 412.426 l
515.151 412.442 l
515.222 412.458 l
515.646 412.555 l
515.787 412.587 l
515.858 412.603 l
516.212 412.684 l
516.282 412.700 l
516.353 412.716 l
516.424 412.732 l
516.494 412.748 l
516.848 412.829 l
517.272 412.925 l
517.414 412.957 l
517.484 412.973 l
517.555 412.989 l
517.626 413.005 l
517.767 413.037 l
517.838 413.053 l
517.979 413.085 l
518.050 413.101 l
518.191 413.133 l
518.403 413.181 l
518.474 413.197 l
518.545 413.213 l
518.616 413.229 l
518.828 413.277 l
518.898 413.293 l
518.969 413.309 l
519.040 413.325 l
519.111 413.341 l
519.181 413.357 l
519.252 413.373 l
519.393 413.405 l
519.464 413.421 l
519.535 413.437 l
519.888 413.516 l
519.959 413.532 l
520.100 413.564 l
520.242 413.596 l
520.313 413.612 l
520.383 413.628 l
520.454 413.644 l
520.525 413.660 l
520.666 413.691 l
520.808 413.723 l
520.878 413.739 l
520.949 413.755 l
521.020 413.771 l
521.090 413.787 l
521.161 413.802 l
521.232 413.818 l
521.373 413.850 l
521.797 413.945 l
521.868 413.961 l
522.010 413.993 l
522.504 414.103 l
522.575 414.119 l
522.646 414.135 l
522.858 414.182 l
522.929 414.198 l
522.999 414.214 l
523.141 414.245 l
523.212 414.261 l
523.282 414.277 l
523.424 414.308 l
523.494 414.324 l
523.636 414.356 l
523.706 414.371 l
523.777 414.387 l
523.848 414.403 l
523.919 414.418 l
524.060 414.450 l
524.131 414.466 l
524.201 414.481 l
524.272 414.497 l
524.343 414.513 l
524.484 414.544 l
524.696 414.591 l
524.767 414.607 l
524.838 414.623 l
524.908 414.638 l
525.121 414.685 l
525.262 414.717 l
525.333 414.732 l
525.616 414.795 l
525.686 414.811 l
525.828 414.842 l
526.323 414.951 l
526.393 414.967 l
526.464 414.983 l
526.676 415.029 l
526.747 415.045 l
526.818 415.061 l
527.030 415.107 l
527.100 415.123 l
527.171 415.138 l
527.595 415.232 l
527.666 415.247 l
527.737 415.263 l
527.808 415.278 l
527.878 415.294 l
527.949 415.310 l
528.020 415.325 l
528.161 415.356 l
528.232 415.372 l
528.373 415.403 l
528.585 415.449 l
528.656 415.465 l
528.727 415.480 l
528.797 415.496 l
529.010 415.542 l
529.151 415.573 l
529.222 415.589 l
529.363 415.620 l
529.434 415.635 l
529.504 415.651 l
529.575 415.666 l
529.646 415.682 l
529.717 415.697 l
529.787 415.712 l
529.858 415.728 l
529.929 415.743 l
530.212 415.805 l
530.282 415.821 l
530.353 415.836 l
530.424 415.851 l
530.494 415.867 l
530.777 415.928 l
530.848 415.944 l
530.989 415.975 l
531.272 416.036 l
531.343 416.052 l
531.414 416.067 l
531.626 416.113 l
531.767 416.144 l
531.838 416.159 l
532.121 416.221 l
532.191 416.236 l
532.333 416.267 l
532.969 416.404 l
533.252 416.466 l
533.323 416.481 l
533.393 416.431 l
533.464 416.444 l
533.535 416.458 l
533.606 416.472 l
533.747 416.500 l
533.818 416.513 l
533.888 416.527 l
534.242 416.596 l
534.313 416.610 l
534.383 416.623 l
534.454 416.637 l
534.525 416.651 l
534.595 416.665 l
534.666 416.678 l
534.949 416.733 l
535.161 416.775 l
535.232 416.788 l
535.302 416.802 l
535.373 416.816 l
535.656 416.871 l
535.727 416.884 l
535.797 416.898 l
535.939 416.925 l
536.010 416.939 l
536.151 416.966 l
536.504 417.035 l
536.575 417.048 l
536.646 417.062 l
536.787 417.089 l
536.929 417.117 l
536.999 417.130 l
537.070 417.144 l
537.141 417.158 l
537.212 417.171 l
537.282 417.185 l
537.424 417.212 l
537.494 417.226 l
537.565 417.240 l
537.636 417.253 l
537.706 417.267 l
537.777 417.280 l
537.848 417.294 l
538.060 417.335 l
538.131 417.349 l
538.272 417.376 l
538.343 417.389 l
538.555 417.430 l
538.908 417.498 l
538.979 417.512 l
539.050 417.525 l
539.121 417.539 l
539.191 417.552 l
539.333 417.580 l
539.403 417.593 l
539.545 417.620 l
540.181 417.742 l
540.252 417.756 l
540.323 417.769 l
540.393 417.783 l
540.464 417.796 l
540.747 417.851 l
540.818 417.864 l
540.888 417.878 l
541.030 417.905 l
541.100 417.918 l
541.171 417.932 l
541.242 417.945 l
541.313 417.959 l
541.878 418.067 l
541.949 418.080 l
542.020 418.093 l
542.090 418.107 l
542.161 418.120 l
542.585 418.201 l
542.656 418.215 l
542.727 418.228 l
542.797 418.241 l
542.868 418.255 l
542.939 418.268 l
543.010 418.282 l
543.080 418.295 l
543.575 418.389 l
543.646 418.403 l
543.717 418.416 l
543.787 418.429 l
543.858 418.443 l
544.424 418.550 l
544.494 418.563 l
544.636 418.590 l
544.848 418.630 l
544.919 418.644 l
544.989 418.657 l
545.060 418.670 l
545.131 418.684 l
545.414 418.737 l
545.555 418.764 l
545.626 418.777 l
546.191 418.884 l
546.262 418.897 l
546.333 418.911 l
546.403 418.924 l
546.474 418.937 l
547.040 419.044 l
547.111 419.057 l
547.181 419.070 l
547.252 419.084 l
547.323 419.097 l
547.747 419.177 l
547.818 419.190 l
547.888 419.203 l
547.959 419.216 l
548.100 419.243 l
548.313 419.283 l
548.383 419.296 l
548.666 419.349 l
548.737 419.362 l
548.878 419.389 l
548.949 419.402 l
549.020 419.415 l
549.090 419.428 l
549.161 419.442 l
549.585 419.521 l
549.656 419.534 l
549.797 419.560 l
549.939 419.587 l
550.010 419.600 l
550.504 419.692 l
550.575 419.705 l
550.717 419.732 l
550.858 419.758 l
550.929 419.771 l
551.424 419.863 l
551.494 419.876 l
551.565 419.890 l
551.636 419.903 l
551.706 419.916 l
551.848 419.942 l
551.919 419.955 l
552.201 420.008 l
552.272 420.021 l
552.343 420.034 l
552.414 420.047 l
552.555 420.073 l
552.838 420.126 l
552.909 420.139 l
552.979 420.152 l
553.050 420.165 l
553.121 420.178 l
553.262 420.204 l
553.333 420.217 l
553.474 420.244 l
554.111 420.361 l
554.181 420.374 l
554.252 420.387 l
554.323 420.400 l
554.393 420.413 l
554.535 420.439 l
554.606 420.452 l
554.676 420.465 l
554.747 420.478 l
554.818 420.491 l
554.888 420.504 l
554.959 420.517 l
555.100 420.544 l
555.242 420.570 l
555.313 420.583 l
555.383 420.596 l
555.454 420.609 l
555.808 420.674 l
555.878 420.687 l
555.949 420.700 l
556.020 420.713 l
556.161 420.739 l
556.444 420.790 l
556.515 420.803 l
556.656 420.829 l
556.868 420.868 l
556.939 420.881 l
557.010 420.894 l
557.151 420.920 l
557.646 421.011 l
557.717 421.024 l
557.787 421.037 l
557.858 421.049 l
557.999 421.075 l
558.282 421.127 l
558.353 421.140 l
558.494 421.166 l
558.706 421.204 l
558.777 421.217 l
558.848 421.230 l
558.919 421.243 l
558.989 421.256 l
559.060 421.269 l
559.484 421.346 l
559.555 421.359 l
559.626 421.372 l
559.696 421.385 l
559.767 421.398 l
559.908 421.423 l
559.979 421.436 l
560.403 421.513 l
560.474 421.526 l
560.545 421.539 l
560.616 421.552 l
560.686 421.565 l
560.757 421.577 l
560.828 421.590 l
560.969 421.616 l
561.040 421.629 l
561.111 421.641 l
561.393 421.693 l
561.464 421.706 l
561.535 421.718 l
561.606 421.731 l
561.676 421.744 l
561.747 421.757 l
561.818 421.770 l
561.888 421.782 l
561.959 421.795 l
562.100 421.821 l
562.171 421.833 l
562.383 421.872 l
562.454 421.885 l
562.525 421.897 l
562.666 421.923 l
562.737 421.936 l
563.161 422.012 l
563.232 422.025 l
563.373 422.050 l
563.515 422.076 l
563.585 422.089 l
563.727 422.114 l
563.797 422.127 l
563.868 422.140 l
563.939 422.152 l
564.009 422.165 l
564.222 422.203 l
564.292 422.216 l
564.363 422.229 l
564.504 422.254 l
564.575 422.267 l
565.070 422.356 l
565.141 422.368 l
565.282 422.394 l
565.424 422.419 l
565.494 422.432 l
565.707 422.470 l
565.777 422.482 l
566.060 422.533 l
566.131 422.546 l
566.201 422.558 l
566.272 422.571 l
566.343 422.584 l
566.979 422.697 l
567.050 422.710 l
567.121 422.723 l
567.191 422.735 l
567.333 422.760 l
567.403 422.773 l
567.474 422.786 l
567.898 422.861 l
568.040 422.886 l
568.181 422.912 l
568.252 422.924 l
568.323 422.937 l
568.393 422.949 l
568.464 422.962 l
568.676 423.000 l
568.747 423.012 l
568.959 423.050 l
569.030 423.062 l
569.100 423.075 l
569.171 423.088 l
569.242 423.100 l
569.807 423.200 l
569.878 423.213 l
570.020 423.238 l
570.232 423.276 l
570.302 423.288 l
570.656 423.351 l
570.727 423.363 l
570.939 423.401 l
571.080 423.426 l
571.151 423.438 l
571.434 423.488 l
571.504 423.501 l
571.575 423.513 l
571.717 423.538 l
571.787 423.551 l
571.929 423.575 l
572.070 423.600 l
572.141 423.613 l
572.636 423.700 l
572.707 423.712 l
572.848 423.737 l
572.919 423.750 l
572.989 423.762 l
573.201 423.799 l
573.272 423.812 l
573.414 423.837 l
573.484 423.849 l
573.555 423.862 l
573.626 423.874 l
573.767 423.899 l
573.909 423.924 l
573.979 423.936 l
574.050 423.948 l
574.121 423.961 l
574.545 424.035 l
574.616 424.048 l
574.686 424.060 l
574.757 424.072 l
574.898 424.097 l
575.040 424.122 l
575.111 424.134 l
575.393 424.184 l
575.464 424.196 l
575.676 424.233 l
575.747 424.245 l
575.818 424.258 l
575.888 424.270 l
575.959 424.282 l
576.100 424.307 l
576.171 424.319 l
576.383 424.356 l
576.454 424.369 l
576.595 424.393 l
576.666 424.406 l
576.807 424.430 l
576.949 424.455 l
577.020 424.467 l
577.444 424.541 l
577.515 424.553 l
577.656 424.578 l
577.727 424.590 l
577.868 424.615 l
578.575 424.737 l
578.646 424.750 l
578.717 424.762 l
578.787 424.774 l
578.858 424.786 l
578.999 424.811 l
579.141 424.835 l
579.353 424.872 l
579.424 424.884 l
579.565 424.909 l
579.636 424.921 l
579.777 424.946 l
579.989 424.982 l
580.060 424.994 l
580.414 425.055 l
580.484 425.068 l
580.696 425.104 l
580.838 425.129 l
580.908 425.141 l
581.050 425.165 l
581.121 425.177 l
581.545 425.250 l
581.616 425.263 l
581.686 425.275 l
581.757 425.287 l
581.828 425.299 l
581.969 425.323 l
582.040 425.335 l
582.393 425.396 l
582.464 425.408 l
582.605 425.433 l
582.676 425.445 l
582.747 425.457 l
582.818 425.469 l
582.888 425.481 l
583.100 425.517 l
583.171 425.530 l
583.242 425.542 l
583.525 425.590 l
583.595 425.602 l
583.737 425.627 l
583.878 425.651 l
583.949 425.663 l
584.444 425.747 l
584.515 425.759 l
584.727 425.796 l
584.868 425.820 l
584.939 425.832 l
585.504 425.928 l
585.575 425.940 l
585.717 425.964 l
585.858 425.989 l
585.929 426.001 l
585.999 426.013 l
586.070 426.025 l
586.424 426.085 l
586.494 426.097 l
586.565 426.109 l
586.636 426.121 l
586.777 426.145 l
586.919 426.169 l
586.989 426.181 l
587.555 426.277 l
587.626 426.289 l
587.767 426.313 l
587.908 426.337 l
587.979 426.349 l
588.050 426.361 l
588.121 426.373 l
588.262 426.396 l
588.333 426.408 l
588.403 426.420 l
588.616 426.456 l
588.686 426.468 l
588.828 426.492 l
588.969 426.516 l
589.040 426.528 l
589.464 426.600 l
589.535 426.611 l
589.605 426.623 l
589.676 426.635 l
589.747 426.647 l
589.818 426.659 l
589.888 426.671 l
590.030 426.695 l
590.100 426.707 l
590.595 426.790 l
590.666 426.802 l
590.807 426.826 l
590.878 426.838 l
590.949 426.850 l
591.161 426.885 l
591.232 426.897 l
591.515 426.945 l
591.585 426.956 l
591.727 426.980 l
591.797 426.992 l
591.868 427.004 l
591.939 427.016 l
592.080 427.039 l
592.151 427.051 l
592.646 427.134 l
592.717 427.146 l
592.858 427.170 l
592.929 427.182 l
592.999 427.193 l
593.070 427.205 l
593.141 427.217 l
593.707 427.312 l
593.777 427.323 l
593.919 427.347 l
593.989 427.359 l
594.060 427.370 l
594.131 427.382 l
594.201 427.394 l
594.767 427.488 l
594.838 427.500 l
594.908 427.512 l
594.979 427.524 l
595.121 427.547 l
595.403 427.594 l
595.474 427.606 l
595.616 427.629 l
595.686 427.641 l
595.757 427.653 l
595.969 427.688 l
596.111 427.712 l
596.181 427.723 l
596.252 427.735 l
596.323 427.747 l
596.888 427.841 l
596.959 427.852 l
597.171 427.887 l
597.242 427.899 l
597.525 427.946 l
597.595 427.958 l
597.666 427.969 l
597.737 427.981 l
597.807 427.993 l
598.090 428.039 l
598.232 428.063 l
598.302 428.074 l
598.373 428.086 l
598.444 428.098 l
598.939 428.179 l
599.009 428.191 l
599.151 428.214 l
599.222 428.226 l
599.292 428.238 l
599.434 428.261 l
599.504 428.272 l
599.787 428.319 l
599.858 428.331 l
599.929 428.342 l
600.070 428.365 l
600.141 428.377 l
600.282 428.400 l
600.353 428.412 l
600.424 428.424 l
600.494 428.435 l
600.565 428.447 l
600.848 428.493 l
600.919 428.505 l
601.131 428.540 l
601.201 428.551 l
601.272 428.563 l
601.343 428.574 l
601.484 428.597 l
601.626 428.621 l
601.696 428.632 l
601.767 428.644 l
601.838 428.655 l
602.121 428.702 l
602.191 428.713 l
602.333 428.736 l
602.403 428.748 l
602.474 428.759 l
602.545 428.771 l
602.616 428.782 l
602.828 428.817 l
602.898 428.829 l
603.111 428.863 l
603.181 428.875 l
603.464 428.921 l
603.605 428.944 l
603.676 428.955 l
603.747 428.967 l
603.818 428.978 l
604.313 429.059 l
604.383 429.070 l
604.525 429.093 l
604.595 429.105 l
604.807 429.139 l
605.020 429.174 l
605.090 429.185 l
605.302 429.220 l
605.373 429.231 l
605.585 429.266 l
605.656 429.277 l
605.727 429.289 l
605.797 429.300 l
605.868 429.312 l
606.009 429.334 l
606.080 429.346 l
606.151 429.357 l
606.222 429.369 l
606.363 429.392 l
606.434 429.403 l
606.717 429.449 l
606.787 429.460 l
606.858 429.472 l
606.999 429.495 l
607.070 429.506 l
607.706 429.609 l
607.777 429.620 l
607.989 429.654 l
608.060 429.666 l
608.131 429.677 l
608.343 429.711 l
608.414 429.723 l
608.484 429.734 l
608.767 429.780 l
608.838 429.791 l
608.979 429.814 l
609.050 429.825 l
609.121 429.836 l
609.191 429.848 l
609.262 429.859 l
609.828 429.950 l
609.898 429.961 l
610.040 429.984 l
610.111 429.995 l
610.181 430.007 l
610.323 430.029 l
610.393 430.041 l
610.676 430.086 l
610.747 430.097 l
610.818 430.109 l
610.959 430.131 l
611.030 430.142 l
611.171 430.165 l
611.242 430.176 l
611.313 430.188 l
611.383 430.199 l
611.454 430.210 l
611.666 430.244 l
611.737 430.256 l
612.161 430.323 l
612.232 430.335 l
612.302 430.346 l
612.373 430.357 l
612.444 430.368 l
612.515 430.380 l
612.585 430.391 l
612.797 430.425 l
612.868 430.436 l
612.939 430.447 l
613.222 430.492 l
613.292 430.504 l
613.434 430.526 l
613.504 430.537 l
613.575 430.549 l
613.646 430.560 l
613.787 430.582 l
614.353 430.672 l
614.424 430.683 l
614.494 430.695 l
614.565 430.706 l
614.636 430.717 l
614.706 430.728 l
614.777 430.739 l
614.989 430.773 l
615.060 430.784 l
615.343 430.829 l
615.414 430.840 l
615.555 430.863 l
615.626 430.874 l
615.767 430.896 l
615.908 430.918 l
615.979 430.930 l
616.191 430.963 l
616.262 430.974 l
616.333 430.986 l
616.403 430.997 l
616.474 431.008 l
616.616 431.030 l
616.686 431.041 l
616.828 431.064 l
616.898 431.075 l
616.969 431.086 l
617.040 431.097 l
617.111 431.108 l
617.747 431.209 l
617.818 431.220 l
617.888 431.231 l
617.959 431.242 l
618.030 431.253 l
618.100 431.264 l
618.171 431.275 l
618.242 431.286 l
618.313 431.298 l
618.807 431.375 l
618.878 431.386 l
619.020 431.409 l
619.090 431.420 l
619.161 431.431 l
619.232 431.442 l
619.302 431.453 l
619.444 431.475 l
619.515 431.486 l
620.009 431.564 l
620.080 431.575 l
620.222 431.597 l
620.292 431.608 l
620.363 431.619 l
620.504 431.641 l
620.575 431.652 l
620.646 431.663 l
620.717 431.674 l
621.212 431.752 l
621.282 431.763 l
621.424 431.785 l
621.565 431.807 l
621.636 431.818 l
621.777 431.840 l
621.848 431.851 l
622.272 431.917 l
622.343 431.928 l
622.484 431.950 l
622.555 431.961 l
622.626 431.972 l
622.696 431.983 l
622.767 431.994 l
622.908 432.016 l
622.979 432.027 l
623.403 432.093 l
623.474 432.104 l
623.686 432.137 l
623.757 432.148 l
623.828 432.159 l
623.969 432.181 l
624.040 432.192 l
624.464 432.258 l
624.535 432.268 l
624.676 432.290 l
624.747 432.301 l
624.888 432.323 l
624.959 432.334 l
625.030 432.345 l
625.100 432.356 l
625.171 432.367 l
625.949 432.487 l
626.020 432.498 l
626.090 432.509 l
626.161 432.520 l
626.232 432.531 l
626.373 432.553 l
626.444 432.564 l
627.009 432.651 l
627.080 432.662 l
627.222 432.683 l
627.292 432.694 l
627.363 432.705 l
627.504 432.727 l
627.575 432.738 l
628.282 432.846 l
628.353 432.857 l
628.424 432.868 l
628.494 432.879 l
628.565 432.890 l
628.706 432.911 l
628.777 432.922 l
629.060 432.966 l
629.131 432.976 l
629.201 432.987 l
629.484 433.031 l
629.555 433.041 l
629.626 433.052 l
629.696 433.063 l
629.767 433.074 l
629.908 433.095 l
629.979 433.106 l
630.545 433.193 l
630.616 433.204 l
630.828 433.236 l
630.969 433.257 l
631.040 433.268 l
631.181 433.290 l
631.252 433.301 l
631.747 433.376 l
631.818 433.387 l
631.959 433.408 l
632.030 433.419 l
632.100 433.430 l
632.242 433.451 l
632.313 433.462 l
632.454 433.484 l
632.525 433.494 l
632.878 433.548 l
632.949 433.559 l
633.090 433.580 l
633.161 433.591 l
633.232 433.602 l
633.302 433.612 l
633.373 433.623 l
633.444 433.634 l
633.515 433.645 l
633.797 433.687 l
633.868 433.698 l
633.939 433.709 l
634.222 433.752 l
634.292 433.762 l
634.434 433.784 l
634.504 433.795 l
634.575 433.805 l
634.646 433.816 l
634.717 433.827 l
635.424 433.933 l
635.494 433.944 l
635.636 433.965 l
635.706 433.976 l
635.777 433.987 l
635.919 434.008 l
635.989 434.019 l
636.272 434.061 l
636.343 434.072 l
636.414 434.083 l
636.626 434.115 l
636.696 434.125 l
636.767 434.136 l
636.838 434.147 l
636.908 434.157 l
636.979 434.168 l
637.050 434.178 l
637.121 434.189 l
637.262 434.210 l
637.333 434.221 l
637.686 434.274 l
637.757 434.285 l
637.898 434.306 l
637.969 434.317 l
638.111 434.338 l
638.181 434.348 l
638.252 434.359 l
638.323 434.370 l
638.393 434.380 l
639.100 434.486 l
639.171 434.497 l
639.313 434.518 l
639.383 434.528 l
639.454 434.539 l
639.525 434.550 l
639.595 434.560 l
640.373 434.676 l
640.444 434.687 l
640.515 434.697 l
640.585 434.708 l
640.656 434.718 l
640.727 434.729 l
640.797 434.740 l
641.009 434.771 l
641.080 434.782 l
641.504 434.845 l
641.575 434.855 l
641.717 434.876 l
641.787 434.887 l
641.858 434.897 l
641.929 434.908 l
641.999 434.918 l
642.212 434.950 l
642.282 434.960 l
642.706 435.023 l
642.777 435.034 l
642.989 435.065 l
643.060 435.076 l
643.131 435.086 l
643.201 435.097 l
643.272 435.107 l
643.555 435.149 l
643.626 435.160 l
643.908 435.202 l
643.979 435.212 l
644.121 435.233 l
644.191 435.243 l
644.333 435.264 l
644.403 435.275 l
644.474 435.285 l
644.616 435.306 l
644.686 435.317 l
645.323 435.410 l
645.393 435.421 l
645.464 435.431 l
645.535 435.442 l
645.606 435.452 l
645.676 435.463 l
645.818 435.483 l
645.888 435.494 l
646.595 435.598 l
646.666 435.608 l
646.807 435.629 l
646.878 435.640 l
646.949 435.650 l
647.020 435.660 l
647.090 435.671 l
647.939 435.795 l
648.009 435.806 l
648.080 435.816 l
648.151 435.826 l
648.222 435.837 l
648.363 435.857 l
648.434 435.868 l
648.575 435.888 l
648.646 435.899 l
648.717 435.909 l
648.787 435.919 l
648.858 435.930 l
648.929 435.940 l
648.999 435.950 l
649.212 435.982 l
649.282 435.992 l
649.353 436.002 l
649.424 436.012 l
649.494 436.023 l
649.565 436.033 l
649.636 436.043 l
649.848 436.074 l
649.919 436.085 l
650.201 436.126 l
650.272 436.136 l
650.484 436.167 l
650.555 436.178 l
650.626 436.188 l
650.696 436.198 l
650.767 436.208 l
650.838 436.219 l
650.908 436.229 l
651.050 436.250 l
651.121 436.260 l
651.616 436.332 l
651.686 436.342 l
651.828 436.363 l
651.898 436.373 l
651.969 436.383 l
652.040 436.394 l
652.111 436.404 l
652.252 436.424 l
652.323 436.435 l
652.959 436.527 l
653.030 436.537 l
653.171 436.558 l
653.242 436.568 l
653.312 436.578 l
653.383 436.588 l
653.454 436.599 l
653.595 436.619 l
653.666 436.629 l
654.232 436.711 l
654.302 436.721 l
654.444 436.742 l
654.515 436.752 l
654.585 436.762 l
654.656 436.772 l
654.727 436.783 l
654.939 436.813 l
655.009 436.823 l
655.504 436.895 l
655.575 436.905 l
655.717 436.925 l
655.787 436.935 l
655.858 436.946 l
655.929 436.956 l
655.999 436.966 l
656.070 436.976 l
656.141 436.986 l
656.353 437.017 l
656.424 437.027 l
656.494 437.037 l
656.565 437.047 l
656.636 437.057 l
656.919 437.098 l
656.989 437.108 l
657.131 437.129 l
657.201 437.139 l
657.272 437.149 l
657.343 437.159 l
657.414 437.169 l
657.696 437.210 l
657.767 437.220 l
657.838 437.230 l
657.908 437.240 l
658.262 437.291 l
658.333 437.301 l
658.403 437.311 l
658.474 437.321 l
658.616 437.341 l
658.757 437.362 l
658.828 437.372 l
659.535 437.473 l
659.605 437.483 l
659.747 437.503 l
659.888 437.523 l
659.959 437.533 l
660.030 437.543 l
660.100 437.553 l
660.454 437.604 l
660.525 437.614 l
660.595 437.624 l
660.949 437.674 l
661.020 437.684 l
661.090 437.694 l
661.161 437.704 l
661.232 437.714 l
661.302 437.724 l
661.373 437.735 l
661.585 437.765 l
661.656 437.775 l
661.727 437.785 l
661.797 437.795 l
661.939 437.815 l
662.009 437.825 l
662.222 437.855 l
662.292 437.865 l
662.363 437.875 l
662.434 437.885 l
662.504 437.895 l
662.575 437.905 l
662.717 437.925 l
662.787 437.935 l
662.929 437.955 l
662.999 437.965 l
663.353 438.015 l
663.424 438.025 l
663.565 438.045 l
663.636 438.055 l
663.777 438.075 l
663.848 438.085 l
663.919 438.095 l
663.989 438.105 l
664.060 438.115 l
664.343 438.155 l
664.414 438.165 l
664.555 438.185 l
664.626 438.195 l
664.696 438.205 l
664.767 438.215 l
664.908 438.235 l
664.979 438.245 l
665.121 438.265 l
665.191 438.275 l
665.262 438.285 l
665.333 438.295 l
665.403 438.305 l
665.474 438.315 l
665.757 438.355 l
665.828 438.365 l
665.898 438.375 l
665.969 438.384 l
666.323 438.434 l
666.393 438.444 l
666.464 438.454 l
666.535 438.464 l
666.605 438.474 l
666.676 438.484 l
666.747 438.494 l
666.959 438.524 l
667.030 438.533 l
667.383 438.583 l
667.454 438.593 l
667.666 438.623 l
667.737 438.633 l
667.878 438.652 l
668.020 438.672 l
668.090 438.682 l
668.232 438.702 l
668.302 438.712 l
668.939 438.801 l
669.009 438.811 l
669.080 438.821 l
669.151 438.830 l
669.222 438.840 l
669.292 438.850 l
669.434 438.870 l
669.504 438.880 l
669.717 438.909 l
669.787 438.919 l
670.141 438.969 l
670.212 438.978 l
670.424 439.008 l
670.494 439.018 l
670.565 439.028 l
670.636 439.037 l
670.706 439.047 l
670.777 439.057 l
670.848 439.067 l
671.060 439.096 l
671.131 439.106 l
671.555 439.165 l
671.626 439.175 l
671.838 439.205 l
671.908 439.214 l
671.979 439.224 l
672.050 439.234 l
672.121 439.244 l
672.262 439.263 l
672.333 439.273 l
673.040 439.371 l
673.110 439.381 l
673.181 439.391 l
673.252 439.401 l
673.323 439.410 l
673.393 439.420 l
673.464 439.430 l
673.535 439.440 l
673.605 439.449 l
673.676 439.459 l
673.959 439.498 l
674.030 439.508 l
674.242 439.537 l
674.313 439.547 l
674.525 439.576 l
674.595 439.586 l
674.737 439.606 l
674.878 439.625 l
674.949 439.635 l
675.020 439.645 l
675.090 439.654 l
675.868 439.762 l
675.939 439.771 l
676.080 439.791 l
676.151 439.800 l
676.222 439.810 l
676.292 439.820 l
676.363 439.830 l
676.575 439.859 l
676.646 439.868 l
677.141 439.936 l
677.212 439.946 l
677.424 439.975 l
677.494 439.985 l
677.565 439.995 l
677.636 440.004 l
677.706 440.014 l
677.848 440.033 l
677.919 440.043 l
678.201 440.082 l
678.272 440.091 l
678.696 440.149 l
678.767 440.159 l
678.908 440.178 l
678.979 440.188 l
679.050 440.198 l
679.191 440.217 l
679.262 440.227 l
679.403 440.246 l
679.474 440.256 l
679.969 440.323 l
680.040 440.333 l
680.181 440.352 l
680.252 440.362 l
680.393 440.381 l
680.535 440.400 l
680.605 440.410 l
680.747 440.429 l
680.818 440.439 l
681.525 440.535 l
681.595 440.544 l
681.737 440.564 l
681.807 440.573 l
681.878 440.583 l
681.949 440.592 l
682.020 440.602 l
682.090 440.612 l
682.232 440.631 l
682.302 440.640 l
682.797 440.707 l
682.868 440.717 l
683.080 440.746 l
683.151 440.755 l
683.222 440.765 l
683.292 440.774 l
683.363 440.784 l
683.434 440.794 l
683.504 440.803 l
683.717 440.832 l
683.787 440.841 l
684.212 440.899 l
684.282 440.908 l
684.494 440.937 l
684.565 440.946 l
684.636 440.956 l
684.706 440.965 l
684.777 440.975 l
684.848 440.985 l
684.919 440.994 l
685.060 441.013 l
685.131 441.023 l
685.201 441.032 l
685.272 441.042 l
685.767 441.108 l
685.838 441.118 l
685.979 441.137 l
686.050 441.146 l
686.121 441.156 l
686.191 441.165 l
686.262 441.175 l
686.333 441.184 l
686.403 441.194 l
686.616 441.222 l
686.686 441.232 l
687.111 441.289 l
687.181 441.298 l
687.393 441.327 l
687.464 441.336 l
687.535 441.346 l
687.605 441.355 l
687.676 441.365 l
687.747 441.374 l
687.818 441.384 l
688.030 441.412 l
688.100 441.422 l
688.595 441.488 l
688.666 441.497 l
688.878 441.526 l
688.949 441.535 l
689.020 441.544 l
689.090 441.554 l
689.161 441.563 l
689.232 441.573 l
689.302 441.582 l
689.444 441.601 l
689.515 441.611 l
690.080 441.686 l
690.151 441.695 l
690.363 441.724 l
690.434 441.733 l
690.504 441.743 l
690.575 441.752 l
690.646 441.761 l
690.787 441.780 l
690.858 441.790 l
690.999 441.808 l
691.070 441.818 l
691.141 441.827 l
691.212 441.837 l
691.424 441.865 l
691.494 441.874 l
691.706 441.902 l
691.777 441.912 l
691.919 441.931 l
691.989 441.940 l
692.060 441.949 l
692.131 441.959 l
692.201 441.968 l
692.343 441.987 l
692.413 441.996 l
693.050 442.081 l
693.121 442.090 l
693.333 442.118 l
693.403 442.127 l
693.474 442.137 l
693.545 442.146 l
693.616 442.155 l
693.757 442.174 l
693.828 442.183 l
694.111 442.221 l
694.181 442.230 l
694.252 442.239 l
694.323 442.249 l
694.393 442.258 l
694.676 442.295 l
694.747 442.305 l
694.888 442.323 l
694.959 442.333 l
695.030 442.342 l
695.171 442.361 l
695.242 442.370 l
695.383 442.389 l
695.454 442.398 l
696.090 442.482 l
696.161 442.491 l
696.302 442.510 l
696.373 442.519 l
696.444 442.528 l
696.515 442.538 l
696.585 442.547 l
696.727 442.565 l
696.797 442.575 l
697.009 442.603 l
697.080 442.612 l
697.434 442.658 l
697.504 442.667 l
697.717 442.695 l
697.787 442.705 l
697.929 442.723 l
697.999 442.732 l
698.070 442.742 l
698.141 442.751 l
698.282 442.769 l
698.353 442.779 l
698.494 442.797 l
698.565 442.806 l
698.636 442.816 l
698.706 442.825 l
698.848 442.843 l
698.919 442.853 l
699.201 442.890 l
699.272 442.899 l
699.413 442.917 l
699.484 442.927 l
699.555 442.936 l
699.696 442.954 l
699.767 442.963 l
699.979 442.991 l
700.050 443.000 l
700.474 443.056 l
700.545 443.065 l
700.757 443.093 l
700.828 443.102 l
700.969 443.120 l
701.040 443.129 l
701.111 443.139 l
701.252 443.157 l
701.323 443.166 l
701.605 443.203 l
701.676 443.212 l
701.818 443.230 l
701.888 443.240 l
701.959 443.249 l
702.030 443.258 l
702.242 443.286 l
702.313 443.295 l
702.383 443.304 l
702.454 443.313 l
702.595 443.331 l
702.737 443.350 l
702.807 443.359 l
702.878 443.368 l
702.949 443.377 l
703.656 443.469 l
703.727 443.478 l
703.868 443.496 l
703.939 443.505 l
704.009 443.515 l
704.080 443.524 l
704.151 443.533 l
704.222 443.542 l
704.292 443.551 l
704.434 443.569 l
704.504 443.578 l
704.999 443.642 l
705.070 443.651 l
705.211 443.670 l
705.282 443.679 l
705.424 443.697 l
705.494 443.706 l
705.565 443.715 l
705.636 443.724 l
705.706 443.733 l
705.848 443.752 l
705.919 443.761 l
705.989 443.770 l
706.060 443.779 l
706.696 443.861 l
706.767 443.870 l
706.908 443.888 l
706.979 443.897 l
707.050 443.906 l
707.121 443.915 l
707.262 443.934 l
707.333 443.943 l
707.403 443.952 l
707.474 443.961 l
707.686 443.988 l
707.757 443.997 l
708.181 444.051 l
708.252 444.060 l
708.464 444.088 l
708.535 444.097 l
708.605 444.106 l
708.676 444.115 l
708.747 444.124 l
708.818 444.133 l
708.888 444.142 l
709.030 444.160 l
709.100 444.169 l
709.313 444.196 l
709.383 444.205 l
709.666 444.241 l
709.737 444.250 l
709.949 444.277 l
710.020 444.286 l
710.161 444.305 l
710.232 444.314 l
710.302 444.323 l
710.373 444.332 l
710.444 444.341 l
710.585 444.359 l
710.656 444.368 l
710.797 444.386 l
710.868 444.395 l
710.939 444.404 l
711.009 444.413 l
711.080 444.422 l
711.151 444.431 l
711.222 444.440 l
711.504 444.476 l
711.575 444.485 l
711.717 444.503 l
711.787 444.512 l
711.858 444.521 l
711.929 444.530 l
711.999 444.539 l
712.070 444.548 l
712.141 444.557 l
712.353 444.584 l
712.424 444.593 l
712.919 444.655 l
712.989 444.664 l
713.131 444.682 l
713.201 444.691 l
713.343 444.709 l
713.413 444.718 l
713.484 444.727 l
713.555 444.736 l
713.626 444.745 l
713.767 444.763 l
713.838 444.772 l
713.979 444.790 l
714.050 444.799 l
714.686 444.879 l
714.757 444.888 l
714.898 444.906 l
714.969 444.915 l
715.040 444.924 l
715.111 444.933 l
715.181 444.942 l
715.393 444.968 l
715.464 444.977 l
715.676 445.004 l
715.747 445.013 l
715.818 445.022 l
716.242 445.075 l
716.313 445.084 l
716.454 445.102 l
716.525 445.111 l
716.595 445.120 l
716.666 445.129 l
716.737 445.138 l
716.807 445.146 l
716.878 445.155 l
717.020 445.173 l
717.090 445.182 l
717.797 445.271 l
717.868 445.280 l
718.009 445.297 l
718.080 445.306 l
718.151 445.315 l
718.222 445.324 l
718.363 445.342 l
718.575 445.368 l
718.646 445.377 l
718.929 445.413 l
718.999 445.421 l
719.141 445.439 l
719.211 445.448 l
719.494 445.483 l
719.565 445.492 l
719.706 445.510 l
719.777 445.519 l
719.848 445.528 l
719.919 445.536 l
719.989 445.545 l
720.131 445.563 l
720.201 445.572 l
720.343 445.589 l
720.413 445.598 l
720.838 445.651 l
720.908 445.660 l
720.979 445.669 l
721.050 445.678 l
721.191 445.695 l
721.262 445.704 l
721.403 445.722 l
721.545 445.739 l
721.616 445.748 l
721.686 445.757 l
721.757 445.766 l
721.969 445.792 l
722.040 445.801 l
722.605 445.871 l
722.676 445.880 l
722.888 445.906 l
722.959 445.915 l
723.030 445.924 l
723.100 445.933 l
723.171 445.941 l
723.242 445.950 l
723.313 445.959 l
723.525 445.985 l
723.595 445.994 l
724.302 446.082 l
724.373 446.090 l
724.515 446.108 l
724.585 446.117 l
724.727 446.134 l
724.868 446.152 l
724.939 446.160 l
725.009 446.169 l
725.080 446.178 l
725.363 446.213 l
725.434 446.221 l
725.787 446.265 l
725.858 446.274 l
726.070 446.300 l
726.141 446.309 l
726.282 446.326 l
726.353 446.335 l
726.424 446.344 l
726.494 446.352 l
726.565 446.361 l
726.636 446.370 l
726.706 446.378 l
726.777 446.387 l
726.848 446.396 l
727.131 446.431 l
727.201 446.439 l
727.272 446.448 l
727.343 446.457 l
727.414 446.465 l
727.696 446.500 l
727.767 446.509 l
727.908 446.526 l
727.979 446.535 l
728.050 446.544 l
728.121 446.552 l
728.191 446.561 l
728.333 446.578 l
728.403 446.587 l
728.545 446.604 l
728.616 446.613 l
729.181 446.682 l
729.252 446.691 l
729.393 446.708 l
729.464 446.717 l
729.605 446.734 l
729.676 446.743 l
729.747 446.752 l
729.818 446.760 l
729.888 446.769 l
730.030 446.786 l
730.100 446.795 l
730.383 446.829 l
730.454 446.838 l
730.595 446.855 l
730.666 446.864 l
730.737 446.873 l
730.807 446.881 l
731.090 446.916 l
731.161 446.924 l
731.232 446.933 l
731.302 446.942 l
731.373 446.950 l
731.444 446.959 l
731.515 446.967 l
731.585 446.976 l
731.656 446.985 l
731.797 447.002 l
731.868 447.011 l
732.646 447.105 l
732.717 447.114 l
732.858 447.131 l
732.929 447.140 l
732.999 447.148 l
733.070 447.157 l
733.141 447.165 l
733.211 447.174 l
733.282 447.183 l
733.353 447.191 l
733.424 447.200 l
733.706 447.234 l
733.777 447.243 l
733.848 447.251 l
733.919 447.260 l
733.989 447.268 l
734.060 447.277 l
734.131 447.285 l
734.414 447.320 l
734.484 447.328 l
734.626 447.345 l
734.696 447.354 l
734.767 447.363 l
734.838 447.371 l
734.908 447.380 l
735.050 447.397 l
735.121 447.405 l
735.262 447.422 l
735.333 447.431 l
735.969 447.508 l
736.040 447.516 l
736.181 447.534 l
736.252 447.542 l
736.393 447.559 l
736.464 447.568 l
736.535 447.576 l
736.676 447.593 l
736.747 447.602 l
736.888 447.619 l
736.959 447.627 l
737.737 447.721 l
737.807 447.730 l
737.949 447.747 l
738.020 447.755 l
738.161 447.772 l
738.232 447.781 l
738.302 447.789 l
738.444 447.806 l
738.515 447.815 l
738.727 447.840 l
738.797 447.849 l
739.363 447.916 l
739.434 447.925 l
739.575 447.942 l
739.646 447.950 l
739.717 447.959 l
739.787 447.967 l
739.858 447.976 l
739.929 447.984 l
739.999 447.993 l
740.070 448.001 l
740.141 448.010 l
740.212 448.018 l
740.494 448.052 l
740.565 448.060 l
741.060 448.120 l
741.131 448.128 l
741.343 448.153 l
741.414 448.162 l
741.555 448.179 l
741.626 448.187 l
741.696 448.196 l
741.767 448.204 l
741.838 448.212 l
742.050 448.238 l
742.121 448.246 l
742.757 448.322 l
742.828 448.330 l
742.898 448.339 l
742.969 448.347 l
743.181 448.372 l
743.252 448.381 l
743.323 448.389 l
743.393 448.398 l
743.464 448.406 l
743.535 448.414 l
743.605 448.423 l
743.818 448.448 l
743.888 448.456 l
744.737 448.557 l
744.807 448.566 l
744.949 448.582 l
745.020 448.591 l
745.090 448.599 l
745.161 448.607 l
745.232 448.616 l
745.373 448.633 l
745.444 448.641 l
745.515 448.649 l
745.585 448.658 l
746.434 448.758 l
746.504 448.766 l
746.575 448.775 l
746.646 448.783 l
746.717 448.791 l
746.787 448.800 l
746.858 448.808 l
746.929 448.816 l
746.999 448.825 l
747.070 448.833 l
747.141 448.841 l
747.212 448.850 l
747.424 448.875 l
747.494 448.883 l
748.060 448.950 l
748.131 448.958 l
748.343 448.983 l
748.414 448.991 l
748.484 449.000 l
748.555 449.008 l
748.696 449.025 l
748.838 449.041 l
748.908 449.050 l
748.979 449.058 l
749.050 449.066 l
749.474 449.116 l
749.545 449.124 l
749.616 449.133 l
749.686 449.141 l
750.040 449.183 l
750.110 449.191 l
750.252 449.207 l
750.323 449.216 l
750.393 449.224 l
750.464 449.232 l
750.535 449.241 l
750.605 449.249 l
750.676 449.257 l
750.818 449.274 l
750.888 449.282 l
751.807 449.389 l
751.878 449.398 l
752.020 449.414 l
752.090 449.422 l
752.161 449.431 l
752.232 449.439 l
752.302 449.447 l
752.373 449.456 l
752.444 449.464 l
752.585 449.480 l
752.656 449.489 l
752.868 449.513 l
752.939 449.522 l
753.363 449.571 l
753.434 449.579 l
753.646 449.604 l
753.717 449.612 l
753.858 449.629 l
753.929 449.637 l
753.999 449.645 l
754.070 449.653 l
754.141 449.661 l
754.212 449.670 l
754.282 449.678 l
754.494 449.703 l
754.565 449.711 l
755.413 449.809 l
755.484 449.817 l
755.555 449.826 l
755.626 449.834 l
755.696 449.842 l
755.767 449.850 l
755.838 449.858 l
755.908 449.867 l
756.050 449.883 l
756.121 449.891 l
756.191 449.899 l
756.262 449.908 l
757.252 450.022 l
757.323 450.030 l
757.393 450.038 l
757.464 450.047 l
757.605 450.063 l
757.676 450.071 l
757.747 450.079 l
757.818 450.087 l
757.888 450.096 l
758.030 450.112 l
758.100 450.120 l
758.525 450.169 l
758.595 450.177 l
758.666 450.185 l
759.090 450.234 l
759.161 450.242 l
759.302 450.259 l
759.373 450.267 l
759.444 450.275 l
759.515 450.283 l
759.585 450.291 l
759.727 450.307 l
759.797 450.315 l
759.939 450.332 l
760.009 450.340 l
760.858 450.437 l
760.929 450.445 l
760.999 450.453 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
52.0000 497.000 m
762.999 497.000 l
S
newpath
52.0000 9.00000 m
762.999 9.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
400 525 15 15 rc
newpath
410.163 531.255 m
408.087 538.428 l
407.994 538.758 407.948 538.969 407.948 539.063  c
407.948 539.160 407.972 539.243 408.021 539.313  c
408.069 539.383 408.136 539.435 408.221 539.469  c
408.352 539.520 408.523 539.545 408.735 539.545  c
408.671 539.780 l
405.631 539.780 l
405.694 539.545 l
406.109 539.511 406.367 539.475 406.469 539.437  c
406.630 539.374 406.762 539.270 406.866 539.126  c
406.969 538.982 407.085 538.680 407.211 538.218  c
408.087 535.089 l
407.529 535.906 407.008 536.479 406.526 536.809  c
406.183 537.042 405.864 537.158 405.567 537.158  c
405.144 537.158 404.825 536.986 404.609 536.641  c
404.393 536.296 404.285 535.923 404.285 535.521  c
404.285 534.882 404.482 534.211 404.876 533.508  c
405.269 532.806 405.787 532.230 406.431 531.782  c
406.930 531.431 407.383 531.255 407.789 531.255  c
408.090 531.255 408.337 531.328 408.532 531.474  c
408.726 531.620 408.872 531.854 408.970 532.175  c
409.167 531.464 l
h
408.716 532.493 m
408.716 532.222 408.633 532.000 408.468 531.826  c
408.303 531.653 408.100 531.566 407.859 531.566  c
407.343 531.566 406.799 532.010 406.228 532.899  c
405.656 533.788 405.371 534.626 405.371 535.413  c
405.371 535.730 405.442 535.971 405.583 536.136  c
405.725 536.301 405.897 536.384 406.101 536.384  c
406.359 536.384 406.651 536.240 406.977 535.952  c
407.472 535.516 407.885 534.957 408.218 534.273  c
408.550 533.590 408.716 532.996 408.716 532.493  c
h
f
Q
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
54.0000 497.000 m
54.0000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
60.8623 513.835 m
60.8623 523.583 l
60.8623 524.315 60.8945 524.782 60.9589 524.984  c
61.0234 525.187 61.1582 525.352 61.3632 525.481  c
61.5683 525.610 61.8964 525.674 62.3476 525.674  c
62.6201 525.674 l
62.6201 526.000 l
56.3447 526.000 l
56.3447 525.674 l
56.6611 525.674 l
57.1709 525.674 57.5341 525.616 57.7509 525.499  c
57.9677 525.381 58.1142 525.220 58.1904 525.015  c
58.2666 524.810 58.3046 524.333 58.3046 523.583  c
58.3046 517.404 l
58.3046 516.853 58.2783 516.509 58.2255 516.371  c
58.1728 516.233 58.0747 516.116 57.9311 516.020  c
57.7876 515.923 57.6220 515.875 57.4345 515.875  c
57.1357 515.875 56.7724 515.968 56.3447 516.156  c
56.1865 515.839 l
60.5722 513.835 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
204.000 497.000 m
204.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
206.742 514.082 m
212.323 514.082 l
211.435 516.349 l
206.742 516.349 l
206.293 517.536 l
208.315 517.612 209.871 518.116 210.960 519.047  c
211.857 519.815 212.305 520.770 212.305 521.913  c
212.305 522.645 212.097 523.361 211.681 524.062  c
211.265 524.762 210.679 525.301 209.923 525.679  c
209.168 526.057 208.338 526.246 207.436 526.246  c
206.463 526.246 205.716 526.064 205.195 525.701  c
204.832 525.443 204.650 525.150 204.650 524.822  c
204.650 524.570 204.745 524.347 204.936 524.154  c
205.126 523.960 205.347 523.864 205.599 523.864  c
205.828 523.864 206.059 523.911 206.293 524.004  c
206.528 524.098 206.929 524.344 207.498 524.743  c
207.855 524.989 208.163 525.159 208.420 525.252  c
208.602 525.323 208.807 525.358 209.036 525.358  c
209.516 525.358 209.925 525.182 210.262 524.831  c
210.599 524.479 210.767 524.057 210.767 523.565  c
210.767 522.534 210.252 521.696 209.220 521.051  c
208.189 520.407 206.888 520.085 205.318 520.085  c
205.160 520.085 204.922 520.087 204.606 520.093  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
268.000 497.000 m
268.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
269.862 513.835 m
269.862 523.583 l
269.862 524.315 269.894 524.782 269.959 524.984  c
270.023 525.187 270.158 525.352 270.363 525.481  c
270.568 525.610 270.896 525.674 271.347 525.674  c
271.620 525.674 l
271.620 526.000 l
265.344 526.000 l
265.344 525.674 l
265.661 525.674 l
266.170 525.674 266.534 525.616 266.751 525.499  c
266.967 525.381 267.114 525.220 267.190 525.015  c
267.266 524.810 267.304 524.333 267.304 523.583  c
267.304 517.404 l
267.304 516.853 267.278 516.509 267.225 516.371  c
267.172 516.233 267.074 516.116 266.931 516.020  c
266.787 515.923 266.622 515.875 266.434 515.875  c
266.135 515.875 265.772 515.968 265.344 516.156  c
265.186 515.839 l
269.572 513.835 l
h
281.340 520.041 m
281.340 521.230 281.173 522.340 280.839 523.372  c
280.640 524.004 280.372 524.523 280.035 524.927  c
279.698 525.332 279.316 525.652 278.888 525.890  c
278.460 526.127 277.995 526.246 277.491 526.246  c
276.917 526.246 276.398 526.099 275.935 525.806  c
275.472 525.513 275.062 525.094 274.705 524.549  c
274.447 524.151 274.221 523.621 274.028 522.959  c
273.776 522.062 273.650 521.136 273.650 520.181  c
273.650 518.886 273.832 517.697 274.195 516.613  c
274.494 515.716 274.948 515.029 275.557 514.552  c
276.167 514.074 276.811 513.835 277.491 513.835  c
278.182 513.835 278.828 514.071 279.429 514.543  c
280.029 515.015 280.470 515.649 280.752 516.446  c
281.144 517.542 281.340 518.740 281.340 520.041  c
h
278.633 520.023 m
278.633 517.937 278.622 516.721 278.598 516.376  c
278.540 515.561 278.399 515.010 278.176 514.723  c
278.030 514.536 277.793 514.442 277.464 514.442  c
277.212 514.442 277.013 514.512 276.867 514.653  c
276.650 514.858 276.503 515.220 276.427 515.738  c
276.351 516.257 276.313 518.066 276.313 521.166  c
276.313 522.853 276.372 523.984 276.489 524.558  c
276.577 524.974 276.703 525.252 276.867 525.393  c
277.031 525.534 277.248 525.604 277.517 525.604  c
277.810 525.604 278.030 525.510 278.176 525.323  c
278.422 524.995 278.563 524.488 278.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
418.000 497.000 m
418.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
415.742 514.082 m
421.323 514.082 l
420.435 516.349 l
415.742 516.349 l
415.293 517.536 l
417.315 517.612 418.871 518.116 419.960 519.047  c
420.857 519.815 421.305 520.770 421.305 521.913  c
421.305 522.645 421.097 523.361 420.681 524.062  c
420.265 524.762 419.679 525.301 418.923 525.679  c
418.168 526.057 417.338 526.246 416.436 526.246  c
415.463 526.246 414.716 526.064 414.195 525.701  c
413.832 525.443 413.650 525.150 413.650 524.822  c
413.650 524.570 413.745 524.347 413.936 524.154  c
414.126 523.960 414.347 523.864 414.599 523.864  c
414.828 523.864 415.059 523.911 415.293 524.004  c
415.528 524.098 415.929 524.344 416.498 524.743  c
416.855 524.989 417.163 525.159 417.420 525.252  c
417.602 525.323 417.807 525.358 418.036 525.358  c
418.516 525.358 418.925 525.182 419.262 524.831  c
419.599 524.479 419.767 524.057 419.767 523.565  c
419.767 522.534 419.252 521.696 418.220 521.051  c
417.189 520.407 415.888 520.085 414.318 520.085  c
414.160 520.085 413.922 520.087 413.606 520.093  c
h
430.340 520.041 m
430.340 521.230 430.173 522.340 429.839 523.372  c
429.640 524.004 429.372 524.523 429.035 524.927  c
428.698 525.332 428.316 525.652 427.888 525.890  c
427.460 526.127 426.995 526.246 426.491 526.246  c
425.917 526.246 425.398 526.099 424.935 525.806  c
424.472 525.513 424.062 525.094 423.705 524.549  c
423.447 524.151 423.221 523.621 423.028 522.959  c
422.776 522.062 422.650 521.136 422.650 520.181  c
422.650 518.886 422.832 517.697 423.195 516.613  c
423.494 515.716 423.948 515.029 424.557 514.552  c
425.167 514.074 425.811 513.835 426.491 513.835  c
427.182 513.835 427.828 514.071 428.429 514.543  c
429.029 515.015 429.470 515.649 429.752 516.446  c
430.144 517.542 430.340 518.740 430.340 520.041  c
h
427.633 520.023 m
427.633 517.937 427.622 516.721 427.598 516.376  c
427.540 515.561 427.399 515.010 427.176 514.723  c
427.030 514.536 426.793 514.442 426.464 514.442  c
426.212 514.442 426.013 514.512 425.867 514.653  c
425.650 514.858 425.503 515.220 425.427 515.738  c
425.351 516.257 425.313 518.066 425.313 521.166  c
425.313 522.853 425.372 523.984 425.489 524.558  c
425.577 524.974 425.703 525.252 425.867 525.393  c
426.031 525.534 426.248 525.604 426.517 525.604  c
426.810 525.604 427.030 525.510 427.176 525.323  c
427.422 524.995 427.563 524.488 427.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
482.000 497.000 m
482.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
479.862 513.835 m
479.862 523.583 l
479.862 524.315 479.894 524.782 479.959 524.984  c
480.023 525.187 480.158 525.352 480.363 525.481  c
480.568 525.610 480.896 525.674 481.347 525.674  c
481.620 525.674 l
481.620 526.000 l
475.344 526.000 l
475.344 525.674 l
475.661 525.674 l
476.170 525.674 476.534 525.616 476.751 525.499  c
476.967 525.381 477.114 525.220 477.190 525.015  c
477.266 524.810 477.304 524.333 477.304 523.583  c
477.304 517.404 l
477.304 516.853 477.278 516.509 477.225 516.371  c
477.172 516.233 477.074 516.116 476.931 516.020  c
476.787 515.923 476.622 515.875 476.434 515.875  c
476.135 515.875 475.772 515.968 475.344 516.156  c
475.186 515.839 l
479.572 513.835 l
h
491.340 520.041 m
491.340 521.230 491.173 522.340 490.839 523.372  c
490.640 524.004 490.372 524.523 490.035 524.927  c
489.698 525.332 489.316 525.652 488.888 525.890  c
488.460 526.127 487.995 526.246 487.491 526.246  c
486.917 526.246 486.398 526.099 485.935 525.806  c
485.472 525.513 485.062 525.094 484.705 524.549  c
484.447 524.151 484.221 523.621 484.028 522.959  c
483.776 522.062 483.650 521.136 483.650 520.181  c
483.650 518.886 483.832 517.697 484.195 516.613  c
484.494 515.716 484.948 515.029 485.557 514.552  c
486.167 514.074 486.811 513.835 487.491 513.835  c
488.182 513.835 488.828 514.071 489.429 514.543  c
490.029 515.015 490.470 515.649 490.752 516.446  c
491.144 517.542 491.340 518.740 491.340 520.041  c
h
488.633 520.023 m
488.633 517.937 488.622 516.721 488.598 516.376  c
488.540 515.561 488.399 515.010 488.176 514.723  c
488.030 514.536 487.793 514.442 487.464 514.442  c
487.212 514.442 487.013 514.512 486.867 514.653  c
486.650 514.858 486.503 515.220 486.427 515.738  c
486.351 516.257 486.313 518.066 486.313 521.166  c
486.313 522.853 486.372 523.984 486.489 524.558  c
486.577 524.974 486.703 525.252 486.867 525.393  c
487.031 525.534 487.248 525.604 487.517 525.604  c
487.810 525.604 488.030 525.510 488.176 525.323  c
488.422 524.995 488.563 524.488 488.598 523.802  c
h
500.340 520.041 m
500.340 521.230 500.173 522.340 499.839 523.372  c
499.640 524.004 499.372 524.523 499.035 524.927  c
498.698 525.332 498.316 525.652 497.888 525.890  c
497.460 526.127 496.995 526.246 496.491 526.246  c
495.917 526.246 495.398 526.099 494.935 525.806  c
494.472 525.513 494.062 525.094 493.705 524.549  c
493.447 524.151 493.221 523.621 493.028 522.959  c
492.776 522.062 492.650 521.136 492.650 520.181  c
492.650 518.886 492.832 517.697 493.195 516.613  c
493.494 515.716 493.948 515.029 494.557 514.552  c
495.167 514.074 495.811 513.835 496.491 513.835  c
497.182 513.835 497.828 514.071 498.429 514.543  c
499.029 515.015 499.470 515.649 499.752 516.446  c
500.144 517.542 500.340 518.740 500.340 520.041  c
h
497.633 520.023 m
497.633 517.937 497.622 516.721 497.598 516.376  c
497.540 515.561 497.399 515.010 497.176 514.723  c
497.030 514.536 496.793 514.442 496.464 514.442  c
496.212 514.442 496.013 514.512 495.867 514.653  c
495.650 514.858 495.503 515.220 495.427 515.738  c
495.351 516.257 495.313 518.066 495.313 521.166  c
495.313 522.853 495.372 523.984 495.489 524.558  c
495.577 524.974 495.703 525.252 495.867 525.393  c
496.031 525.534 496.248 525.604 496.517 525.604  c
496.810 525.604 497.030 525.510 497.176 525.323  c
497.422 524.995 497.563 524.488 497.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
632.000 497.000 m
632.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
626.742 514.082 m
632.323 514.082 l
631.435 516.349 l
626.742 516.349 l
626.293 517.536 l
628.315 517.612 629.871 518.116 630.960 519.047  c
631.857 519.815 632.305 520.770 632.305 521.913  c
632.305 522.645 632.097 523.361 631.681 524.062  c
631.265 524.762 630.679 525.301 629.923 525.679  c
629.168 526.057 628.338 526.246 627.436 526.246  c
626.463 526.246 625.716 526.064 625.195 525.701  c
624.832 525.443 624.650 525.150 624.650 524.822  c
624.650 524.570 624.745 524.347 624.936 524.154  c
625.126 523.960 625.347 523.864 625.599 523.864  c
625.828 523.864 626.059 523.911 626.293 524.004  c
626.528 524.098 626.929 524.344 627.498 524.743  c
627.855 524.989 628.163 525.159 628.420 525.252  c
628.602 525.323 628.807 525.358 629.036 525.358  c
629.516 525.358 629.925 525.182 630.262 524.831  c
630.599 524.479 630.767 524.057 630.767 523.565  c
630.767 522.534 630.252 521.696 629.220 521.051  c
628.189 520.407 626.888 520.085 625.318 520.085  c
625.160 520.085 624.922 520.087 624.606 520.093  c
h
641.340 520.041 m
641.340 521.230 641.173 522.340 640.839 523.372  c
640.640 524.004 640.372 524.523 640.035 524.927  c
639.698 525.332 639.316 525.652 638.888 525.890  c
638.460 526.127 637.995 526.246 637.491 526.246  c
636.917 526.246 636.398 526.099 635.935 525.806  c
635.472 525.513 635.062 525.094 634.705 524.549  c
634.447 524.151 634.221 523.621 634.028 522.959  c
633.776 522.062 633.650 521.136 633.650 520.181  c
633.650 518.886 633.832 517.697 634.195 516.613  c
634.494 515.716 634.948 515.029 635.557 514.552  c
636.167 514.074 636.811 513.835 637.491 513.835  c
638.182 513.835 638.828 514.071 639.429 514.543  c
640.029 515.015 640.470 515.649 640.752 516.446  c
641.144 517.542 641.340 518.740 641.340 520.041  c
h
638.633 520.023 m
638.633 517.937 638.622 516.721 638.598 516.376  c
638.540 515.561 638.399 515.010 638.176 514.723  c
638.030 514.536 637.793 514.442 637.464 514.442  c
637.212 514.442 637.013 514.512 636.867 514.653  c
636.650 514.858 636.503 515.220 636.427 515.738  c
636.351 516.257 636.313 518.066 636.313 521.166  c
636.313 522.853 636.372 523.984 636.489 524.558  c
636.577 524.974 636.703 525.252 636.867 525.393  c
637.031 525.534 637.248 525.604 637.517 525.604  c
637.810 525.604 638.030 525.510 638.176 525.323  c
638.422 524.995 638.563 524.488 638.598 523.802  c
h
650.340 520.041 m
650.340 521.230 650.173 522.340 649.839 523.372  c
649.640 524.004 649.372 524.523 649.035 524.927  c
648.698 525.332 648.316 525.652 647.888 525.890  c
647.460 526.127 646.995 526.246 646.491 526.246  c
645.917 526.246 645.398 526.099 644.935 525.806  c
644.472 525.513 644.062 525.094 643.705 524.549  c
643.447 524.151 643.221 523.621 643.028 522.959  c
642.776 522.062 642.650 521.136 642.650 520.181  c
642.650 518.886 642.832 517.697 643.195 516.613  c
643.494 515.716 643.948 515.029 644.557 514.552  c
645.167 514.074 645.811 513.835 646.491 513.835  c
647.182 513.835 647.828 514.071 648.429 514.543  c
649.029 515.015 649.470 515.649 649.752 516.446  c
650.144 517.542 650.340 518.740 650.340 520.041  c
h
647.633 520.023 m
647.633 517.937 647.622 516.721 647.598 516.376  c
647.540 515.561 647.399 515.010 647.176 514.723  c
647.030 514.536 646.793 514.442 646.464 514.442  c
646.212 514.442 646.013 514.512 645.867 514.653  c
645.650 514.858 645.503 515.220 645.427 515.738  c
645.351 516.257 645.313 518.066 645.313 521.166  c
645.313 522.853 645.372 523.984 645.489 524.558  c
645.577 524.974 645.703 525.252 645.867 525.393  c
646.031 525.534 646.248 525.604 646.517 525.604  c
646.810 525.604 647.030 525.510 647.176 525.323  c
647.422 524.995 647.563 524.488 647.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
697.000 497.000 m
697.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
688.862 513.835 m
688.862 523.583 l
688.862 524.315 688.894 524.782 688.959 524.984  c
689.023 525.187 689.158 525.352 689.363 525.481  c
689.568 525.610 689.896 525.674 690.347 525.674  c
690.620 525.674 l
690.620 526.000 l
684.344 526.000 l
684.344 525.674 l
684.661 525.674 l
685.170 525.674 685.534 525.616 685.751 525.499  c
685.967 525.381 686.114 525.220 686.190 525.015  c
686.266 524.810 686.304 524.333 686.304 523.583  c
686.304 517.404 l
686.304 516.853 686.278 516.509 686.225 516.371  c
686.172 516.233 686.074 516.116 685.931 516.020  c
685.787 515.923 685.622 515.875 685.434 515.875  c
685.135 515.875 684.772 515.968 684.344 516.156  c
684.186 515.839 l
688.572 513.835 l
h
700.340 520.041 m
700.340 521.230 700.173 522.340 699.839 523.372  c
699.640 524.004 699.372 524.523 699.035 524.927  c
698.698 525.332 698.316 525.652 697.888 525.890  c
697.460 526.127 696.995 526.246 696.491 526.246  c
695.917 526.246 695.398 526.099 694.935 525.806  c
694.472 525.513 694.062 525.094 693.705 524.549  c
693.447 524.151 693.221 523.621 693.028 522.959  c
692.776 522.062 692.650 521.136 692.650 520.181  c
692.650 518.886 692.832 517.697 693.195 516.613  c
693.494 515.716 693.948 515.029 694.557 514.552  c
695.167 514.074 695.811 513.835 696.491 513.835  c
697.182 513.835 697.828 514.071 698.429 514.543  c
699.029 515.015 699.470 515.649 699.752 516.446  c
700.144 517.542 700.340 518.740 700.340 520.041  c
h
697.633 520.023 m
697.633 517.937 697.622 516.721 697.598 516.376  c
697.540 515.561 697.399 515.010 697.176 514.723  c
697.030 514.536 696.793 514.442 696.464 514.442  c
696.212 514.442 696.013 514.512 695.867 514.653  c
695.650 514.858 695.503 515.220 695.427 515.738  c
695.351 516.257 695.313 518.066 695.313 521.166  c
695.313 522.853 695.372 523.984 695.489 524.558  c
695.577 524.974 695.703 525.252 695.867 525.393  c
696.031 525.534 696.248 525.604 696.517 525.604  c
696.810 525.604 697.030 525.510 697.176 525.323  c
697.422 524.995 697.563 524.488 697.598 523.802  c
h
709.340 520.041 m
709.340 521.230 709.173 522.340 708.839 523.372  c
708.640 524.004 708.372 524.523 708.035 524.927  c
707.698 525.332 707.316 525.652 706.888 525.890  c
706.460 526.127 705.995 526.246 705.491 526.246  c
704.917 526.246 704.398 526.099 703.935 525.806  c
703.472 525.513 703.062 525.094 702.705 524.549  c
702.447 524.151 702.221 523.621 702.028 522.959  c
701.776 522.062 701.650 521.136 701.650 520.181  c
701.650 518.886 701.832 517.697 702.195 516.613  c
702.494 515.716 702.948 515.029 703.557 514.552  c
704.167 514.074 704.811 513.835 705.491 513.835  c
706.182 513.835 706.828 514.071 707.429 514.543  c
708.029 515.015 708.470 515.649 708.752 516.446  c
709.144 517.542 709.340 518.740 709.340 520.041  c
h
706.633 520.023 m
706.633 517.937 706.622 516.721 706.598 516.376  c
706.540 515.561 706.399 515.010 706.176 514.723  c
706.030 514.536 705.793 514.442 705.464 514.442  c
705.212 514.442 705.013 514.512 704.867 514.653  c
704.650 514.858 704.503 515.220 704.427 515.738  c
704.351 516.257 704.313 518.066 704.313 521.166  c
704.313 522.853 704.372 523.984 704.489 524.558  c
704.577 524.974 704.703 525.252 704.867 525.393  c
705.031 525.534 705.248 525.604 705.517 525.604  c
705.810 525.604 706.030 525.510 706.176 525.323  c
706.422 524.995 706.563 524.488 706.598 523.802  c
h
718.340 520.041 m
718.340 521.230 718.173 522.340 717.839 523.372  c
717.640 524.004 717.372 524.523 717.035 524.927  c
716.698 525.332 716.316 525.652 715.888 525.890  c
715.460 526.127 714.995 526.246 714.491 526.246  c
713.917 526.246 713.398 526.099 712.935 525.806  c
712.472 525.513 712.062 525.094 711.705 524.549  c
711.447 524.151 711.221 523.621 711.028 522.959  c
710.776 522.062 710.650 521.136 710.650 520.181  c
710.650 518.886 710.832 517.697 711.195 516.613  c
711.494 515.716 711.948 515.029 712.557 514.552  c
713.167 514.074 713.811 513.835 714.491 513.835  c
715.182 513.835 715.828 514.071 716.429 514.543  c
717.029 515.015 717.470 515.649 717.752 516.446  c
718.144 517.542 718.340 518.740 718.340 520.041  c
h
715.633 520.023 m
715.633 517.937 715.622 516.721 715.598 516.376  c
715.540 515.561 715.399 515.010 715.176 514.723  c
715.030 514.536 714.793 514.442 714.464 514.442  c
714.212 514.442 714.013 514.512 713.867 514.653  c
713.650 514.858 713.503 515.220 713.427 515.738  c
713.351 516.257 713.313 518.066 713.313 521.166  c
713.313 522.853 713.372 523.984 713.489 524.558  c
713.577 524.974 713.703 525.252 713.867 525.393  c
714.031 525.534 714.248 525.604 714.517 525.604  c
714.810 525.604 715.030 525.510 715.176 525.323  c
715.422 524.995 715.563 524.488 715.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
52.0000 497.000 m
52.0000 9.01422 l
S
newpath
763.000 497.000 m
763.000 9.01422 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 246 14 15 rc
newpath
6.07568 252.255 m
6.21956 252.500 6.31901 252.730 6.37402 252.944  c
6.42903 253.157 6.48404 253.577 6.53906 254.204  c
6.81835 257.327 l
7.07226 257.022 7.44043 256.540 7.92285 255.879  c
8.15559 255.558 8.44335 255.120 8.78613 254.565  c
8.99349 254.227 9.12044 253.990 9.16699 253.855  c
9.19238 253.787 9.20507 253.717 9.20507 253.645  c
9.20507 253.599 9.19026 253.560 9.16064 253.531  c
9.13102 253.501 9.05379 253.466 8.92895 253.426  c
8.80411 253.386 8.70043 253.312 8.61792 253.204  c
8.53540 253.096 8.49414 252.972 8.49414 252.833  c
8.49414 252.659 8.54492 252.519 8.64648 252.414  c
8.74804 252.308 8.87500 252.255 9.02734 252.255  c
9.21354 252.255 9.37223 252.332 9.50341 252.487  c
9.63460 252.641 9.70019 252.854 9.70019 253.125  c
9.70019 253.459 9.58593 253.841 9.35742 254.270  c
9.12890 254.700 8.68880 255.359 8.03710 256.248  c
7.38541 257.136 6.59619 258.105 5.66943 259.155  c
5.03043 259.878 4.55647 260.334 4.24755 260.523  c
3.93863 260.711 3.67415 260.805 3.45410 260.805  c
3.32291 260.805 3.20760 260.755 3.10815 260.656  c
3.00870 260.557 2.95898 260.441 2.95898 260.310  c
2.95898 260.145 3.02775 259.995 3.16528 259.859  c
3.30281 259.724 3.45198 259.656 3.61279 259.656  c
3.69742 259.656 3.76725 259.675 3.82226 259.713  c
3.85612 259.735 3.89314 259.795 3.93335 259.894  c
3.97355 259.994 4.01057 260.060 4.04443 260.094  c
4.06559 260.115 4.09098 260.126 4.12060 260.126  c
4.14599 260.126 4.19043 260.105 4.25390 260.063  c
4.48665 259.919 4.75748 259.690 5.06640 259.377  c
5.47265 258.962 5.77311 258.624 5.96777 258.361  c
5.61230 254.337 l
5.55306 253.673 5.46419 253.268 5.34570 253.125  c
5.22721 252.981 5.02832 252.909 4.74902 252.909  c
4.66015 252.909 4.50146 252.921 4.27294 252.947  c
4.21582 252.712 l
h
f
Q
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
52.0000 426.000 m
45.0000 426.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 431.041 m
33.3408 432.230 33.1738 433.340 32.8398 434.372  c
32.6406 435.004 32.3725 435.523 32.0356 435.927  c
31.6987 436.332 31.3164 436.652 30.8886 436.890  c
30.4609 437.127 29.9951 437.246 29.4912 437.246  c
28.9169 437.246 28.3984 437.099 27.9355 436.806  c
27.4726 436.513 27.0625 436.094 26.7050 435.549  c
26.4472 435.151 26.2216 434.621 26.0283 433.959  c
25.7763 433.062 25.6503 432.136 25.6503 431.181  c
25.6503 429.886 25.8320 428.697 26.1953 427.613  c
26.4941 426.716 26.9482 426.029 27.5576 425.552  c
28.1669 425.074 28.8115 424.835 29.4912 424.835  c
30.1826 424.835 30.8286 425.071 31.4292 425.543  c
32.0297 426.015 32.4707 426.649 32.7519 427.446  c
33.1445 428.542 33.3408 429.740 33.3408 431.041  c
h
30.6337 431.023 m
30.6337 428.937 30.6220 427.721 30.5986 427.376  c
30.5400 426.561 30.3994 426.010 30.1767 425.723  c
30.0302 425.536 29.7929 425.442 29.4648 425.442  c
29.2128 425.442 29.0136 425.512 28.8671 425.653  c
28.6503 425.858 28.5039 426.220 28.4277 426.738  c
28.3515 427.257 28.3134 429.066 28.3134 432.166  c
28.3134 433.853 28.3720 434.984 28.4892 435.558  c
28.5771 435.974 28.7031 436.252 28.8671 436.393  c
29.0312 436.534 29.2480 436.604 29.5175 436.604  c
29.8105 436.604 30.0302 436.510 30.1767 436.323  c
30.4228 435.995 30.5634 435.488 30.5986 434.802  c
h
36.2500 434.293 m
36.6601 434.293 37.0073 434.436 37.2915 434.723  c
37.5756 435.010 37.7177 435.356 37.7177 435.760  c
37.7177 436.165 37.5742 436.509 37.2871 436.793  c
37.0000 437.077 36.6543 437.219 36.2500 437.219  c
35.8457 437.219 35.5014 437.077 35.2172 436.793  c
34.9331 436.509 34.7910 436.165 34.7910 435.760  c
34.7910 435.356 34.9331 435.010 35.2172 434.723  c
35.5014 434.436 35.8457 434.293 36.2500 434.293  c
h
44.8623 424.835 m
44.8623 434.583 l
44.8623 435.315 44.8945 435.782 44.9589 435.984  c
45.0234 436.187 45.1582 436.352 45.3632 436.481  c
45.5683 436.610 45.8964 436.674 46.3476 436.674  c
46.6201 436.674 l
46.6201 437.000 l
40.3447 437.000 l
40.3447 436.674 l
40.6611 436.674 l
41.1709 436.674 41.5341 436.616 41.7509 436.499  c
41.9677 436.381 42.1142 436.220 42.1904 436.015  c
42.2666 435.810 42.3046 435.333 42.3046 434.583  c
42.3046 428.404 l
42.3046 427.853 42.2783 427.509 42.2255 427.371  c
42.1728 427.233 42.0747 427.116 41.9311 427.020  c
41.7876 426.923 41.6220 426.875 41.4345 426.875  c
41.1357 426.875 40.7724 426.968 40.3447 427.156  c
40.1865 426.839 l
44.5722 424.835 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 288.000 m
45.0000 288.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 293.041 m
33.3408 294.230 33.1738 295.340 32.8398 296.372  c
32.6406 297.004 32.3725 297.523 32.0356 297.927  c
31.6987 298.332 31.3164 298.652 30.8886 298.890  c
30.4609 299.127 29.9951 299.246 29.4912 299.246  c
28.9169 299.246 28.3984 299.099 27.9355 298.806  c
27.4726 298.513 27.0625 298.094 26.7050 297.549  c
26.4472 297.151 26.2216 296.621 26.0283 295.959  c
25.7763 295.062 25.6503 294.136 25.6503 293.181  c
25.6503 291.886 25.8320 290.697 26.1953 289.613  c
26.4941 288.716 26.9482 288.029 27.5576 287.552  c
28.1669 287.074 28.8115 286.835 29.4912 286.835  c
30.1826 286.835 30.8286 287.071 31.4292 287.543  c
32.0297 288.015 32.4707 288.649 32.7519 289.446  c
33.1445 290.542 33.3408 291.740 33.3408 293.041  c
h
30.6337 293.023 m
30.6337 290.937 30.6220 289.721 30.5986 289.376  c
30.5400 288.561 30.3994 288.010 30.1767 287.723  c
30.0302 287.536 29.7929 287.442 29.4648 287.442  c
29.2128 287.442 29.0136 287.512 28.8671 287.653  c
28.6503 287.858 28.5039 288.220 28.4277 288.738  c
28.3515 289.257 28.3134 291.066 28.3134 294.166  c
28.3134 295.853 28.3720 296.984 28.4892 297.558  c
28.5771 297.974 28.7031 298.252 28.8671 298.393  c
29.0312 298.534 29.2480 298.604 29.5175 298.604  c
29.8105 298.604 30.0302 298.510 30.1767 298.323  c
30.4228 297.995 30.5634 297.488 30.5986 296.802  c
h
36.2500 296.293 m
36.6601 296.293 37.0073 296.436 37.2915 296.723  c
37.5756 297.010 37.7177 297.356 37.7177 297.760  c
37.7177 298.165 37.5742 298.509 37.2871 298.793  c
37.0000 299.077 36.6543 299.219 36.2500 299.219  c
35.8457 299.219 35.5014 299.077 35.2172 298.793  c
34.9331 298.509 34.7910 298.165 34.7910 297.760  c
34.7910 297.356 34.9331 297.010 35.2172 296.723  c
35.5014 296.436 35.8457 296.293 36.2500 296.293  c
h
46.4531 299.000 m
39.4394 299.000 l
39.4394 298.806 l
41.5898 296.246 42.8950 294.523 43.3549 293.638  c
43.8149 292.753 44.0449 291.889 44.0449 291.045  c
44.0449 290.430 43.8544 289.919 43.4736 289.512  c
43.0927 289.105 42.6269 288.901 42.0761 288.901  c
41.1738 288.901 40.4736 289.352 39.9755 290.254  c
39.6503 290.140 l
39.9668 289.015 40.4472 288.183 41.0918 287.644  c
41.7363 287.105 42.4804 286.835 43.3242 286.835  c
43.9277 286.835 44.4785 286.976 44.9765 287.257  c
45.4746 287.539 45.8642 287.924 46.1455 288.413  c
46.4267 288.902 46.5673 289.361 46.5673 289.789  c
46.5673 290.568 46.3505 291.359 45.9169 292.162  c
45.3252 293.246 44.0332 294.757 42.0410 296.697  c
44.6162 296.697 l
45.2490 296.697 45.6606 296.670 45.8510 296.618  c
46.0415 296.565 46.1982 296.476 46.3212 296.350  c
46.4443 296.224 46.6054 295.959 46.8046 295.554  c
47.1210 295.554 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 149.000 m
45.0000 149.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 155.041 m
33.3408 156.230 33.1738 157.340 32.8398 158.372  c
32.6406 159.004 32.3725 159.523 32.0356 159.927  c
31.6987 160.332 31.3164 160.652 30.8886 160.890  c
30.4609 161.127 29.9951 161.246 29.4912 161.246  c
28.9169 161.246 28.3984 161.099 27.9355 160.806  c
27.4726 160.513 27.0625 160.094 26.7050 159.549  c
26.4472 159.151 26.2216 158.621 26.0283 157.959  c
25.7763 157.062 25.6503 156.136 25.6503 155.181  c
25.6503 153.886 25.8320 152.697 26.1953 151.613  c
26.4941 150.716 26.9482 150.029 27.5576 149.552  c
28.1669 149.074 28.8115 148.835 29.4912 148.835  c
30.1826 148.835 30.8286 149.071 31.4292 149.543  c
32.0297 150.015 32.4707 150.649 32.7519 151.446  c
33.1445 152.542 33.3408 153.740 33.3408 155.041  c
h
30.6337 155.023 m
30.6337 152.937 30.6220 151.721 30.5986 151.376  c
30.5400 150.561 30.3994 150.010 30.1767 149.723  c
30.0302 149.536 29.7929 149.442 29.4648 149.442  c
29.2128 149.442 29.0136 149.512 28.8671 149.653  c
28.6503 149.858 28.5039 150.220 28.4277 150.738  c
28.3515 151.257 28.3134 153.066 28.3134 156.166  c
28.3134 157.853 28.3720 158.984 28.4892 159.558  c
28.5771 159.974 28.7031 160.252 28.8671 160.393  c
29.0312 160.534 29.2480 160.604 29.5175 160.604  c
29.8105 160.604 30.0302 160.510 30.1767 160.323  c
30.4228 159.995 30.5634 159.488 30.5986 158.802  c
h
36.2500 158.293 m
36.6601 158.293 37.0073 158.436 37.2915 158.723  c
37.5756 159.010 37.7177 159.356 37.7177 159.760  c
37.7177 160.165 37.5742 160.509 37.2871 160.793  c
37.0000 161.077 36.6543 161.219 36.2500 161.219  c
35.8457 161.219 35.5014 161.077 35.2172 160.793  c
34.9331 160.509 34.7910 160.165 34.7910 159.760  c
34.7910 159.356 34.9331 159.010 35.2172 158.723  c
35.5014 158.436 35.8457 158.293 36.2500 158.293  c
h
41.6630 155.023 m
41.6630 154.715 l
42.3310 154.522 42.7939 154.342 43.0517 154.175  c
43.3095 154.008 43.5322 153.753 43.7197 153.410  c
43.9072 153.067 44.0009 152.720 44.0009 152.369  c
44.0009 151.882 43.8237 151.465 43.4692 151.116  c
43.1147 150.768 42.6738 150.593 42.1464 150.593  c
41.3261 150.593 40.6289 151.027 40.0546 151.894  c
39.7294 151.780 l
40.1513 150.801 40.6918 150.066 41.3510 149.574  c
42.0102 149.082 42.7441 148.835 43.5527 148.835  c
44.3789 148.835 45.0600 149.087 45.5961 149.591  c
46.1323 150.095 46.4003 150.684 46.4003 151.358  c
46.4003 151.797 46.2758 152.221 46.0268 152.628  c
45.7778 153.035 45.3867 153.394 44.8535 153.705  c
45.5390 154.039 46.0620 154.450 46.4223 154.939  c
46.7827 155.429 46.9628 156.043 46.9628 156.781  c
46.9628 158.023 46.5131 159.079 45.6137 159.949  c
44.7143 160.819 43.5087 161.254 41.9970 161.254  c
40.9892 161.254 40.2539 161.087 39.7910 160.753  c
39.4570 160.519 39.2900 160.217 39.2900 159.848  c
39.2900 159.579 39.3867 159.349 39.5800 159.158  c
39.7734 158.968 39.9960 158.873 40.2480 158.873  c
40.4414 158.873 40.6230 158.914 40.7929 158.996  c
40.8867 159.043 41.2192 159.299 41.7905 159.765  c
42.3618 160.231 42.8964 160.463 43.3945 160.463  c
43.8281 160.463 44.2002 160.292 44.5107 159.949  c
44.8212 159.606 44.9765 159.171 44.9765 158.644  c
44.9765 157.841 44.6953 157.102 44.1328 156.425  c
43.5703 155.748 42.7470 155.281 41.6630 155.023  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 11.0000 m
45.0000 11.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 17.0410 m
33.3408 18.2304 33.1738 19.3408 32.8398 20.3720  c
32.6406 21.0048 32.3725 21.5234 32.0356 21.9277  c
31.6987 22.3320 31.3164 22.6528 30.8886 22.8901  c
30.4609 23.1274 29.9951 23.2460 29.4912 23.2460  c
28.9169 23.2460 28.3984 23.0996 27.9355 22.8066  c
27.4726 22.5136 27.0625 22.0947 26.7050 21.5498  c
26.4472 21.1513 26.2216 20.6210 26.0283 19.9589  c
25.7763 19.0625 25.6503 18.1367 25.6503 17.1816  c
25.6503 15.8867 25.8320 14.6972 26.1953 13.6132  c
26.4941 12.7168 26.9482 12.0297 27.5576 11.5522  c
28.1669 11.0747 28.8115 10.8359 29.4912 10.8359  c
30.1826 10.8359 30.8286 11.0717 31.4292 11.5434  c
32.0297 12.0151 32.4707 12.6494 32.7519 13.4462  c
33.1445 14.5419 33.3408 15.7402 33.3408 17.0410  c
h
30.6337 17.0234 m
30.6337 14.9375 30.6220 13.7216 30.5986 13.3759  c
30.5400 12.5615 30.3994 12.0107 30.1767 11.7236  c
30.0302 11.5361 29.7929 11.4423 29.4648 11.4423  c
29.2128 11.4423 29.0136 11.5127 28.8671 11.6533  c
28.6503 11.8584 28.5039 12.2202 28.4277 12.7387  c
28.3515 13.2573 28.3134 15.0664 28.3134 18.1660  c
28.3134 19.8535 28.3720 20.9843 28.4892 21.5585  c
28.5771 21.9746 28.7031 22.2529 28.8671 22.3935  c
29.0312 22.5341 29.2480 22.6044 29.5175 22.6044  c
29.8105 22.6044 30.0302 22.5107 30.1767 22.3232  c
30.4228 21.9951 30.5634 21.4882 30.5986 20.8027  c
h
36.2500 20.2929 m
36.6601 20.2929 37.0073 20.4365 37.2915 20.7236  c
37.5756 21.0107 37.7177 21.3564 37.7177 21.7607  c
37.7177 22.1650 37.5742 22.5092 37.2871 22.7934  c
37.0000 23.0776 36.6543 23.2197 36.2500 23.2197  c
35.8457 23.2197 35.5014 23.0776 35.2172 22.7934  c
34.9331 22.5092 34.7910 22.1650 34.7910 21.7607  c
34.7910 21.3564 34.9331 21.0107 35.2172 20.7236  c
35.5014 20.4365 35.8457 20.2929 36.2500 20.2929  c
h
39.4482 18.5087 m
45.1084 10.8359 l
46.1806 10.8359 l
46.1806 18.5087 l
47.2705 18.5087 l
47.2705 20.3281 l
46.1806 20.3281 l
46.1806 23.0000 l
43.7636 23.0000 l
43.7636 20.3281 l
39.4482 20.3281 l
h
40.3007 18.5087 m
43.7636 18.5087 l
43.7636 13.8066 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 357.000 m
49.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 218.000 m
49.0000 218.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 80.0000 m
49.0000 80.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 774 551 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument

gcln
grestore
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%%IncludeResource: font TimesNewRomanPSMT
/QSRITG+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/QSRITG+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one 6{/.notdef}rp /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C /D 8{/.notdef}rp /M 3{/.notdef}rp /Q 33{/.notdef}rp /s 6{/.notdef}rp /z 54{/.notdef}rp /plusminus 78{/.notdef}rp]QSRITG+TimesNewRomanPSMT nfQSRITG+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf133.094 350.876 mo(QCD )sh%%IncludeResource: font Symbol
/QSRITH+Symbol /Symbol findfont ct_VMDictPut/QSRITH+Symbol*1 [97{/.notdef}rp /alpha 158{/.notdef}rp]QSRITH+Symbol nfQSRITH+Symbol*1 [21 0 0 -21 0 0 ]msf182.682 350.876 mo(a)shQSRITG+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf195.933 354.876 mo(s)shQSRITG+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf202.938 350.876 mo(\(M)[6.99316 0 ]xshQSRITG+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf228.603 354.876 mo(z)shQSRITG+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf236.592 350.876 mo(\) =)sh260.678 350.876 mo( 0.1)sh291.398 350.876 mo(181 \261 0.001)sh391.395 350.876 mo(1)sh.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
99.6016 341.876 mo
120.602 341.876 li
@
99.6016 344.876 mo
120.602 344.876 li
@
99.6016 347.876 mo
120.602 347.876 li
@
542.577 38.2104 mo
554.744 38.2104 li
554.744 371.377 li
542.577 371.377 li
0 0 0 0 cmyk
f
543.686 397.627 mo
59.8242 397.627 li
59.8242 361.127 li
543.686 360.75 li
543.686 397.627 li
cp
f
541.577 53.0366 mo
52.5762 54.2104 li
52.5762 38.7104 li
541.577 39.2104 li
541.577 53.0366 li
cp
f
65.6772 371.127 mo
23.769 371.127 li
23.769 28.4604 li
65.6772 28.4604 li
65.6772 371.127 li
cp
f
1.00001 lw
11.5 ml
507.024 339.825 mo
512.241 339.825 li
506.843 329.542 mo
512.06 329.542 li
509.445 339.825 mo
509.445 329.491 li
.976471 .952941 0 0 cmyk
@
509.524 338.039 mo
508.399 335.542 li
508.399 335.542 li
507.274 333.044 li
507.274 333.044 li
509.524 333.044 li
509.524 333.044 li
511.774 333.044 li
511.774 333.044 li
510.649 335.542 li
510.649 335.542 li
509.524 338.039 li
509.524 338.039 li
cp
0 0 0 0 cmyk
f
509.524 338.039 mo
508.399 335.542 li
508.399 335.542 li
507.274 333.044 li
507.274 333.044 li
509.524 333.044 li
509.524 333.044 li
511.774 333.044 li
511.774 333.044 li
510.649 335.542 li
510.649 335.542 li
509.524 338.039 li
509.524 338.039 li
cp
.976471 .952941 0 0 cmyk
@
486.024 334.825 mo
491.241 334.825 li
485.843 327.542 mo
491.06 327.542 li
488.445 334.825 mo
488.445 327.491 li
@
488.524 334.039 mo
487.399 331.542 li
487.399 331.542 li
486.274 329.044 li
486.274 329.044 li
488.524 329.044 li
488.524 329.044 li
490.774 329.044 li
490.774 329.044 li
489.649 331.542 li
489.649 331.542 li
488.524 334.039 li
488.524 334.039 li
cp
0 0 0 0 cmyk
f
488.524 334.039 mo
487.399 331.542 li
487.399 331.542 li
486.274 329.044 li
486.274 329.044 li
488.524 329.044 li
488.524 329.044 li
490.774 329.044 li
490.774 329.044 li
489.649 331.542 li
489.649 331.542 li
488.524 334.039 li
488.524 334.039 li
cp
.976471 .952941 0 0 cmyk
@
466.024 333.825 mo
471.241 333.825 li
465.843 326.542 mo
471.06 326.542 li
468.445 333.825 mo
468.445 326.491 li
@
468.524 333.039 mo
467.399 330.542 li
467.399 330.542 li
466.274 328.044 li
466.274 328.044 li
468.524 328.044 li
468.524 328.044 li
470.774 328.044 li
470.774 328.044 li
469.649 330.542 li
469.649 330.542 li
468.524 333.039 li
468.524 333.039 li
cp
0 0 0 0 cmyk
f
468.524 333.039 mo
467.399 330.542 li
467.399 330.542 li
466.274 328.044 li
466.274 328.044 li
468.524 328.044 li
468.524 328.044 li
470.774 328.044 li
470.774 328.044 li
469.649 330.542 li
469.649 330.542 li
468.524 333.039 li
468.524 333.039 li
cp
.976471 .952941 0 0 cmyk
@
440.024 327.825 mo
445.241 327.825 li
439.843 320.542 mo
445.06 320.542 li
442.445 327.825 mo
442.445 320.491 li
@
442.524 327.039 mo
441.399 324.542 li
441.399 324.542 li
440.274 322.044 li
440.274 322.044 li
442.524 322.044 li
442.524 322.044 li
444.774 322.044 li
444.774 322.044 li
443.649 324.542 li
443.649 324.542 li
442.524 327.039 li
442.524 327.039 li
cp
0 0 0 0 cmyk
f
442.524 327.039 mo
441.399 324.542 li
441.399 324.542 li
440.274 322.044 li
440.274 322.044 li
442.524 322.044 li
442.524 322.044 li
444.774 322.044 li
444.774 322.044 li
443.649 324.542 li
443.649 324.542 li
442.524 327.039 li
442.524 327.039 li
cp
.976471 .952941 0 0 cmyk
@
414.024 323.825 mo
419.241 323.825 li
413.843 315.542 mo
419.06 315.542 li
416.445 323.825 mo
416.445 315.491 li
@
416.524 323.039 mo
415.399 320.542 li
415.399 320.542 li
414.274 318.044 li
414.274 318.044 li
416.524 318.044 li
416.524 318.044 li
418.774 318.044 li
418.774 318.044 li
417.649 320.542 li
417.649 320.542 li
416.524 323.039 li
416.524 323.039 li
cp
0 0 0 0 cmyk
f
416.524 323.039 mo
415.399 320.542 li
415.399 320.542 li
414.274 318.044 li
414.274 318.044 li
416.524 318.044 li
416.524 318.044 li
418.774 318.044 li
418.774 318.044 li
417.649 320.542 li
417.649 320.542 li
416.524 323.039 li
416.524 323.039 li
cp
.976471 .952941 0 0 cmyk
@
375.024 316.825 mo
380.241 316.825 li
374.843 306.542 mo
380.06 306.542 li
377.445 316.825 mo
377.445 306.491 li
@
377.524 315.039 mo
376.399 312.542 li
376.399 312.542 li
375.274 310.044 li
375.274 310.044 li
377.524 310.044 li
377.524 310.044 li
379.774 310.044 li
379.774 310.044 li
378.649 312.542 li
378.649 312.542 li
377.524 315.039 li
377.524 315.039 li
cp
0 0 0 0 cmyk
f
377.524 315.039 mo
376.399 312.542 li
376.399 312.542 li
375.274 310.044 li
375.274 310.044 li
377.524 310.044 li
377.524 310.044 li
379.774 310.044 li
379.774 310.044 li
378.649 312.542 li
378.649 312.542 li
377.524 315.039 li
377.524 315.039 li
cp
.976471 .952941 0 0 cmyk
@
530.024 344.825 mo
535.241 344.825 li
529.843 334.542 mo
535.06 334.542 li
532.445 344.825 mo
532.445 334.491 li
@
532.524 343.039 mo
531.399 340.542 li
531.399 340.542 li
530.274 338.044 li
530.274 338.044 li
532.524 338.044 li
532.524 338.044 li
534.774 338.044 li
534.774 338.044 li
533.649 340.542 li
533.649 340.542 li
532.524 343.039 li
532.524 343.039 li
cp
0 0 0 0 cmyk
f
532.524 343.039 mo
531.399 340.542 li
531.399 340.542 li
530.274 338.044 li
530.274 338.044 li
532.524 338.044 li
532.524 338.044 li
534.774 338.044 li
534.774 338.044 li
533.649 340.542 li
533.649 340.542 li
532.524 343.039 li
532.524 343.039 li
cp
.976471 .952941 0 0 cmyk
@
519.024 340.825 mo
524.241 340.825 li
518.843 331.542 mo
524.06 331.542 li
521.445 340.825 mo
521.445 331.491 li
@
521.524 339.039 mo
520.399 336.542 li
520.399 336.542 li
519.274 334.044 li
519.274 334.044 li
521.524 334.044 li
521.524 334.044 li
523.774 334.044 li
523.774 334.044 li
522.649 336.542 li
522.649 336.542 li
521.524 339.039 li
521.524 339.039 li
cp
0 0 0 0 cmyk
f
521.524 339.039 mo
520.399 336.542 li
520.399 336.542 li
519.274 334.044 li
519.274 334.044 li
521.524 334.044 li
521.524 334.044 li
523.774 334.044 li
523.774 334.044 li
522.649 336.542 li
522.649 336.542 li
521.524 339.039 li
521.524 339.039 li
cp
.976471 .952941 0 0 cmyk
@
490.024 335.825 mo
495.241 335.825 li
489.843 328.542 mo
495.06 328.542 li
492.445 335.825 mo
492.445 328.491 li
@
492.524 336.039 mo
491.399 333.542 li
491.399 333.542 li
490.274 331.044 li
490.274 331.044 li
492.524 331.044 li
492.524 331.044 li
494.774 331.044 li
494.774 331.044 li
493.649 333.542 li
493.649 333.542 li
492.524 336.039 li
492.524 336.039 li
cp
0 0 0 0 cmyk
f
492.524 336.039 mo
491.399 333.542 li
491.399 333.542 li
490.274 331.044 li
490.274 331.044 li
492.524 331.044 li
492.524 331.044 li
494.774 331.044 li
494.774 331.044 li
493.649 333.542 li
493.649 333.542 li
492.524 336.039 li
492.524 336.039 li
cp
.976471 .952941 0 0 cmyk
@
473.024 334.825 mo
478.241 334.825 li
472.843 327.542 mo
478.06 327.542 li
475.445 334.825 mo
475.445 327.491 li
@
475.524 335.039 mo
474.399 332.542 li
474.399 332.542 li
473.274 330.044 li
473.274 330.044 li
475.524 330.044 li
475.524 330.044 li
477.774 330.044 li
477.774 330.044 li
476.649 332.542 li
476.649 332.542 li
475.524 335.039 li
475.524 335.039 li
cp
0 0 0 0 cmyk
f
475.524 335.039 mo
474.399 332.542 li
474.399 332.542 li
473.274 330.044 li
473.274 330.044 li
475.524 330.044 li
475.524 330.044 li
477.774 330.044 li
477.774 330.044 li
476.649 332.542 li
476.649 332.542 li
475.524 335.039 li
475.524 335.039 li
cp
.976471 .952941 0 0 cmyk
@
461.024 333.825 mo
466.241 333.825 li
460.843 324.542 mo
466.06 324.542 li
463.445 332.825 mo
463.445 324.491 li
@
463.524 333.039 mo
462.399 330.542 li
462.399 330.542 li
461.274 328.044 li
461.274 328.044 li
463.524 328.044 li
463.524 328.044 li
465.774 328.044 li
465.774 328.044 li
464.649 330.542 li
464.649 330.542 li
463.524 333.039 li
463.524 333.039 li
cp
0 0 0 0 cmyk
f
463.524 333.039 mo
462.399 330.542 li
462.399 330.542 li
461.274 328.044 li
461.274 328.044 li
463.524 328.044 li
463.524 328.044 li
465.774 328.044 li
465.774 328.044 li
464.649 330.542 li
464.649 330.542 li
463.524 333.039 li
463.524 333.039 li
cp
.976471 .952941 0 0 cmyk
@
453.024 333.825 mo
458.241 333.825 li
452.843 324.542 mo
458.06 324.542 li
455.445 332.825 mo
455.445 324.491 li
@
455.524 333.039 mo
454.399 330.542 li
454.399 330.542 li
453.274 328.044 li
453.274 328.044 li
455.524 328.044 li
455.524 328.044 li
457.774 328.044 li
457.774 328.044 li
456.649 330.542 li
456.649 330.542 li
455.524 333.039 li
455.524 333.039 li
cp
0 0 0 0 cmyk
f
455.524 333.039 mo
454.399 330.542 li
454.399 330.542 li
453.274 328.044 li
453.274 328.044 li
455.524 328.044 li
455.524 328.044 li
457.774 328.044 li
457.774 328.044 li
456.649 330.542 li
456.649 330.542 li
455.524 333.039 li
455.524 333.039 li
cp
.976471 .952941 0 0 cmyk
@
442.024 326.825 mo
447.241 326.825 li
441.843 316.542 mo
447.06 316.542 li
444.445 326.825 mo
444.445 316.491 li
@
444.524 325.039 mo
443.399 322.542 li
443.399 322.542 li
442.274 320.044 li
442.274 320.044 li
444.524 320.044 li
444.524 320.044 li
446.774 320.044 li
446.774 320.044 li
445.649 322.542 li
445.649 322.542 li
444.524 325.039 li
444.524 325.039 li
cp
0 0 0 0 cmyk
f
444.524 325.039 mo
443.399 322.542 li
443.399 322.542 li
442.274 320.044 li
442.274 320.044 li
444.524 320.044 li
444.524 320.044 li
446.774 320.044 li
446.774 320.044 li
445.649 322.542 li
445.649 322.542 li
444.524 325.039 li
444.524 325.039 li
cp
.976471 .952941 0 0 cmyk
@
322.13 310.543 mo
327.347 310.543 li
321.948 294.835 mo
327.165 294.835 li
324.551 310.21 mo
324.551 294.793 li
.945098 .827451 0 0 cmyk
@
324.63 304.439 mo
323.505 302.189 li
323.505 302.189 li
322.38 299.939 li
322.38 299.939 li
324.63 299.939 li
324.63 299.939 li
326.88 299.939 li
326.88 299.939 li
325.755 302.189 li
325.755 302.189 li
324.63 304.439 li
324.63 304.439 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
324.63 304.439 mo
323.505 302.189 li
323.505 302.189 li
322.38 299.939 li
322.38 299.939 li
324.63 299.939 li
324.63 299.939 li
326.88 299.939 li
326.88 299.939 li
325.755 302.189 li
325.755 302.189 li
324.63 304.439 li
324.63 304.439 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
324.63 304.439 mo
323.505 303.189 li
323.505 302.189 li
322.38 299.939 li
322.38 299.939 li
324.63 299.939 li
324.63 299.939 li
326.88 299.939 li
326.88 299.939 li
325.755 302.189 li
325.755 302.189 li
324.63 304.439 li
324.63 304.439 li
cp
@
330.88 310.543 mo
336.097 310.543 li
330.653 299.648 mo
335.87 299.648 li
333.301 310.876 mo
333.301 300.046 li
@
333.38 307.439 mo
332.255 305.189 li
332.255 305.189 li
331.13 302.939 li
331.13 302.939 li
333.38 302.939 li
333.38 302.939 li
335.63 302.939 li
335.63 302.939 li
334.505 305.189 li
334.505 305.189 li
333.38 307.439 li
333.38 307.439 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
333.38 307.439 mo
332.255 305.189 li
332.255 305.189 li
331.13 302.939 li
331.13 302.939 li
333.38 302.939 li
333.38 302.939 li
335.63 302.939 li
335.63 302.939 li
334.505 305.189 li
334.505 305.189 li
333.38 307.439 li
333.38 307.439 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
333.38 307.439 mo
332.255 306.189 li
332.255 305.189 li
331.13 302.939 li
331.13 302.939 li
333.38 302.939 li
333.38 302.939 li
335.63 302.939 li
335.63 302.939 li
334.505 305.189 li
334.505 305.189 li
333.38 307.439 li
333.38 307.439 li
cp
@
340.138 311.403 mo
345.354 311.403 li
339.956 300.695 mo
345.173 300.695 li
342.559 311.72 mo
342.559 300.72 li
@
342.638 309.298 mo
341.513 308.048 li
341.513 307.048 li
340.388 304.798 li
340.388 304.798 li
342.638 304.798 li
342.638 304.798 li
344.888 304.798 li
344.888 304.798 li
343.763 307.048 li
343.763 307.048 li
342.638 309.298 li
342.638 309.298 li
cp
@
342.638 309.298 mo
341.513 307.048 li
341.513 307.048 li
340.388 304.798 li
340.388 304.798 li
342.638 304.798 li
342.638 304.798 li
344.888 304.798 li
344.888 304.798 li
343.763 307.048 li
343.763 307.048 li
342.638 309.298 li
342.638 309.298 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
342.638 309.298 mo
341.513 307.048 li
341.513 307.048 li
340.388 304.798 li
340.388 304.798 li
342.638 304.798 li
342.638 304.798 li
344.888 304.798 li
344.888 304.798 li
343.763 307.048 li
343.763 307.048 li
342.638 309.298 li
342.638 309.298 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
347.463 314.209 mo
352.68 314.209 li
347.281 303.501 mo
352.498 303.501 li
349.884 313.568 mo
350.099 303.235 li
@
349.963 312.105 mo
348.838 309.855 li
348.838 309.855 li
347.713 307.605 li
347.713 307.605 li
349.963 307.605 li
349.963 307.605 li
352.213 307.605 li
352.213 307.605 li
351.088 309.855 li
351.088 309.855 li
349.963 312.105 li
349.963 312.105 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
349.963 312.105 mo
348.838 309.855 li
348.838 309.855 li
347.713 307.605 li
347.713 307.605 li
349.963 307.605 li
349.963 307.605 li
352.213 307.605 li
352.213 307.605 li
351.088 309.855 li
351.088 309.855 li
349.963 312.105 li
349.963 312.105 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
349.963 312.105 mo
348.838 310.855 li
348.838 309.855 li
347.713 307.605 li
347.713 307.605 li
349.963 307.605 li
349.963 307.605 li
352.213 307.605 li
352.213 307.605 li
351.088 309.855 li
351.088 309.855 li
349.963 312.105 li
349.963 312.105 li
cp
@
355.63 315.043 mo
360.847 315.043 li
355.448 306.335 mo
360.665 306.335 li
358.265 314.739 mo
358.265 306.406 li
@
358.13 312.939 mo
357.005 310.689 li
357.005 310.689 li
355.88 308.439 li
355.88 308.439 li
358.13 308.439 li
358.13 308.439 li
360.38 308.439 li
360.38 308.439 li
359.255 310.689 li
359.255 310.689 li
358.13 312.939 li
358.13 312.939 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
358.13 312.939 mo
357.005 310.689 li
357.005 310.689 li
355.88 308.439 li
355.88 308.439 li
358.13 308.439 li
358.13 308.439 li
360.38 308.439 li
360.38 308.439 li
359.255 310.689 li
359.255 310.689 li
358.13 312.939 li
358.13 312.939 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
358.13 312.939 mo
357.005 310.689 li
357.005 310.689 li
355.88 308.439 li
355.88 308.439 li
358.13 308.439 li
358.13 308.439 li
360.38 308.439 li
360.38 308.439 li
359.255 310.689 li
359.255 310.689 li
358.13 312.939 li
358.13 312.939 li
cp
@
362.306 316.093 mo
367.522 316.093 li
362.124 307.385 mo
367.341 307.385 li
364.94 315.789 mo
364.94 307.456 li
@
364.806 313.989 mo
363.681 311.739 li
363.681 311.739 li
362.556 309.489 li
362.556 309.489 li
364.806 309.489 li
364.806 309.489 li
367.056 309.489 li
367.056 309.489 li
365.931 311.739 li
365.931 311.739 li
364.806 313.989 li
364.806 313.989 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
364.806 313.989 mo
363.681 311.739 li
363.681 311.739 li
362.556 309.489 li
362.556 309.489 li
364.806 309.489 li
364.806 309.489 li
367.056 309.489 li
367.056 309.489 li
365.931 311.739 li
365.931 311.739 li
364.806 313.989 li
364.806 313.989 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
364.806 313.989 mo
363.681 311.739 li
363.681 311.739 li
362.556 309.489 li
362.556 309.489 li
364.806 309.489 li
364.806 309.489 li
367.056 309.489 li
367.056 309.489 li
365.931 311.739 li
365.931 311.739 li
364.806 313.989 li
364.806 313.989 li
cp
@
368.964 317.71 mo
374.181 317.71 li
368.782 309.002 mo
373.999 309.002 li
371.599 317.406 mo
371.599 309.073 li
@
371.464 315.606 mo
370.339 313.356 li
370.339 313.356 li
369.214 311.106 li
369.214 311.106 li
371.464 311.106 li
371.464 311.106 li
373.714 311.106 li
373.714 311.106 li
372.589 313.356 li
372.589 313.356 li
371.464 315.606 li
371.464 315.606 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
371.464 315.606 mo
370.339 313.356 li
370.339 313.356 li
369.214 311.106 li
369.214 311.106 li
371.464 311.106 li
371.464 311.106 li
373.714 311.106 li
373.714 311.106 li
372.589 313.356 li
372.589 313.356 li
371.464 315.606 li
371.464 315.606 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
371.464 315.606 mo
370.339 313.356 li
370.339 313.356 li
369.214 311.106 li
369.214 311.106 li
371.464 311.106 li
371.464 311.106 li
373.714 311.106 li
373.714 311.106 li
372.589 313.356 li
372.589 313.356 li
371.464 315.606 li
371.464 315.606 li
cp
@
373.436 317.94 mo
378.652 317.94 li
373.254 310.232 mo
378.471 310.232 li
376.07 317.635 mo
376.07 310.302 li
@
375.936 316.835 mo
374.811 314.585 li
374.811 314.585 li
373.686 312.335 li
373.686 312.335 li
375.936 312.335 li
375.936 312.335 li
378.186 312.335 li
378.186 312.335 li
377.061 314.585 li
377.061 314.585 li
375.936 316.835 li
375.936 316.835 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
375.936 316.835 mo
374.811 314.585 li
374.811 314.585 li
373.686 312.335 li
373.686 312.335 li
375.936 312.335 li
375.936 312.335 li
378.186 312.335 li
378.186 312.335 li
377.061 314.585 li
377.061 314.585 li
375.936 316.835 li
375.936 316.835 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
375.936 316.835 mo
374.811 314.585 li
374.811 314.585 li
373.686 312.335 li
373.686 312.335 li
375.936 312.335 li
375.936 312.335 li
378.186 312.335 li
378.186 312.335 li
377.061 314.585 li
377.061 314.585 li
375.936 316.835 li
375.936 316.835 li
cp
@
354.146 312.173 mo
359.362 312.173 li
353.964 301.958 mo
359.181 301.958 li
356.566 312.173 mo
356.566 301.923 li
.976471 .952941 0 0 cmyk
@
356.646 310.264 mo
355.521 308.093 li
355.521 308.093 li
354.396 305.922 li
354.396 305.922 li
356.646 305.922 li
356.646 305.922 li
358.896 305.922 li
358.896 305.922 li
357.771 308.093 li
357.771 308.093 li
356.646 310.264 li
356.646 310.264 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
356.646 310.264 mo
355.521 308.093 li
355.521 308.093 li
354.396 305.922 li
354.396 305.922 li
356.646 305.922 li
356.646 305.922 li
358.896 305.922 li
358.896 305.922 li
357.771 308.093 li
357.771 308.093 li
356.646 310.264 li
356.646 310.264 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
356.646 310.264 mo
355.521 308.093 li
355.521 308.093 li
354.396 305.922 li
354.396 305.922 li
356.646 305.922 li
356.646 305.922 li
358.896 305.922 li
358.896 305.922 li
357.771 308.093 li
357.771 308.093 li
356.646 310.264 li
356.646 310.264 li
cp
@
.9414 .7617 0 0 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman /Times-Roman findfont ct_VMDictPut/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 29{/.notdef}rp /greater 38{/.notdef}rp /e 4{/.notdef}rp /j 5{/.notdef}rp /p 2{/.notdef}rp /s /t 91{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf294.054 182.841 mo(pp \320> jets)sh.027451 .992157 .811765 .58 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 4{/.notdef}rp /three 10{/.notdef}rp /greater 13{/.notdef}rp /L /.notdef /N /O 19{/.notdef}rp /c /.notdef /e /f 2{/.notdef}rp /i /j 3{/.notdef}rp /n /o /p /.notdef /r /s /t 2{/.notdef}rp /w 88{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf292.483 163.435 mo(e.w. precision fits )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf424.952 163.435 mo(\(N)[4.66211 0 ]xshQSRITI+Times-Roman*1 [12 0 0 -12 0 0 ]msf439.725 159.435 mo(3)shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf445.725 163.435 mo(LO\))shQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf469.049 163.435 mo( )sh.8711 .3633 .0625 0 cmyk
QSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf365.21 160.271 mo( )sh199.405 249.421 mo
205.405 249.421 li
202.405 232.308 mo
202.405 249.576 li
199.405 219.599 mo
205.405 219.599 li
202.405 231.061 mo
202.405 219.236 li
.7695 .2383 .9766 .1367 cmyk
@
202.405 230.488 mo
203.905 233.488 li
203.905 233.488 li
205.405 236.488 li
205.405 236.488 li
202.405 236.488 li
202.405 236.488 li
199.405 236.488 li
199.405 236.488 li
200.905 233.488 li
200.905 233.488 li
202.405 230.488 li
202.405 230.488 li
cp
0 0 0 0 cmyk
ef
326.053 319.331 mo
332.053 319.331 li
329.053 299.107 mo
329.053 319.548 li
326.053 282.661 mo
332.053 282.661 li
329.053 298.36 mo
329.053 282.649 li
202.405 230.488 mo
203.905 233.488 li
203.905 233.488 li
205.405 236.488 li
205.405 236.488 li
202.405 236.488 li
202.405 236.488 li
199.405 236.488 li
199.405 236.488 li
200.905 233.488 li
200.905 233.488 li
202.405 230.488 li
202.405 230.488 li
cp
.7695 .2383 .9766 .1367 cmyk
@
329.053 296.145 mo
330.553 299.145 li
330.553 299.145 li
332.053 302.145 li
332.053 302.145 li
329.053 302.145 li
329.053 302.145 li
326.053 302.145 li
326.053 302.145 li
327.553 299.145 li
327.553 299.145 li
329.053 296.145 li
329.053 296.145 li
cp
0 0 0 0 cmyk
ef
257.429 280.942 mo
263.428 280.942 li
260.429 276.117 mo
260.429 280.736 li
257.429 265.132 mo
263.428 265.132 li
260.429 273.12 mo
260.429 264.639 li
329.053 296.145 mo
330.553 299.145 li
330.553 299.145 li
332.053 302.145 li
332.053 302.145 li
329.053 302.145 li
329.053 302.145 li
326.053 302.145 li
326.053 302.145 li
327.553 299.145 li
327.553 299.145 li
329.053 296.145 li
329.053 296.145 li
cp
.7695 .2383 .9766 .1367 cmyk
@
260.429 270.37 mo
261.928 273.37 li
261.928 273.37 li
263.428 276.37 li
263.428 276.37 li
260.429 276.37 li
260.429 276.37 li
257.429 276.37 li
257.429 276.37 li
258.929 273.37 li
258.929 273.37 li
260.429 270.37 li
260.429 270.37 li
cp
0 0 0 0 cmyk
ef
277.785 287.786 mo
283.785 287.786 li
280.785 282.234 mo
280.785 287.627 li
277.785 274.041 mo
283.785 274.041 li
280.785 278.807 mo
280.785 273.68 li
260.429 270.37 mo
261.928 273.37 li
261.928 273.37 li
263.428 276.37 li
263.428 276.37 li
260.429 276.37 li
260.429 276.37 li
257.429 276.37 li
257.429 276.37 li
258.929 273.37 li
258.929 273.37 li
260.429 270.37 li
260.429 270.37 li
cp
.7695 .2383 .9766 .1367 cmyk
@
280.785 276.523 mo
282.285 279.523 li
282.285 279.523 li
283.785 282.523 li
283.785 282.523 li
280.785 282.523 li
280.785 282.523 li
277.785 282.523 li
277.785 282.523 li
279.285 279.523 li
279.285 279.523 li
280.785 276.523 li
280.785 276.523 li
cp
0 0 0 0 cmyk
ef
233.338 271.268 mo
239.338 271.268 li
236.338 259.895 mo
236.338 271.299 li
233.338 252.106 mo
239.338 252.106 li
236.338 258.648 mo
236.338 251.762 li
280.785 276.523 mo
282.285 279.523 li
282.285 279.523 li
283.785 282.523 li
283.785 282.523 li
280.785 282.523 li
280.785 282.523 li
277.785 282.523 li
277.785 282.523 li
279.285 279.523 li
279.285 279.523 li
280.785 276.523 li
280.785 276.523 li
cp
.7695 .2383 .9766 .1367 cmyk
@
236.338 257.8 mo
237.838 260.8 li
237.838 260.8 li
239.338 263.8 li
239.338 263.8 li
236.338 263.8 li
236.338 263.8 li
233.338 263.8 li
233.338 263.8 li
234.838 260.8 li
234.838 260.8 li
236.338 257.8 li
236.338 257.8 li
cp
0 0 0 0 cmyk
ef
296.71 296.901 mo
302.71 296.901 li
299.71 284.204 mo
299.71 297.27 li
296.71 277.581 mo
302.71 277.581 li
299.71 284.55 mo
299.457 277.182 li
236.338 257.8 mo
237.838 260.8 li
237.838 260.8 li
239.338 263.8 li
239.338 263.8 li
236.338 263.8 li
236.338 263.8 li
233.338 263.8 li
233.338 263.8 li
234.838 260.8 li
234.838 260.8 li
236.338 257.8 li
236.338 257.8 li
cp
.7695 .2383 .9766 .1367 cmyk
@
299.71 282.039 mo
301.21 285.039 li
301.21 285.039 li
302.71 288.039 li
302.71 288.039 li
299.71 288.039 li
299.71 288.039 li
296.71 288.039 li
296.71 288.039 li
298.21 285.039 li
298.21 285.039 li
299.71 282.039 li
299.71 282.039 li
cp
0 0 0 0 cmyk
ef
299.71 282.039 mo
301.21 285.039 li
301.21 285.039 li
302.71 288.039 li
302.71 288.039 li
299.71 288.039 li
299.71 288.039 li
296.71 288.039 li
296.71 288.039 li
298.21 285.039 li
298.21 285.039 li
299.71 282.039 li
299.71 282.039 li
cp
.7695 .2383 .9766 .1367 cmyk
@
352.732 302.707 mo
352.732 306.957 li
349.873 307.076 mo
355.092 307.076 li
349.623 298.686 mo
354.842 298.686 li
352.215 305.297 mo
352.248 298.411 li
0 .9492 .832 0 cmyk
@
354.982 302.727 mo
354.982 302.727 li
354.982 304.21 353.813 305.415 352.373 305.415 cv
350.934 305.415 349.765 304.21 349.765 302.727 cv
349.765 301.244 350.934 300.04 352.373 300.04 cv
353.813 300.04 354.982 301.244 354.982 302.727 cv
354.982 302.727 li
cp
0 0 0 0 cmyk
ef
354.419 304.75 mo
354.419 308.779 li
351.561 308.892 mo
356.777 308.892 li
351.311 300.94 mo
356.527 300.94 li
353.902 307.207 mo
353.936 300.679 li
354.982 302.727 mo
354.982 302.727 li
354.982 304.21 353.813 305.415 352.373 305.415 cv
350.934 305.415 349.765 304.21 349.765 302.727 cv
349.765 301.244 350.934 300.04 352.373 300.04 cv
353.813 300.04 354.982 301.244 354.982 302.727 cv
354.982 302.727 li
cp
0 .9492 .832 0 cmyk
@
356.669 304.771 mo
356.669 304.771 li
356.669 306.176 355.5 307.318 354.061 307.318 cv
352.619 307.318 351.452 306.176 351.452 304.771 cv
351.452 303.365 352.619 302.223 354.061 302.223 cv
355.5 302.223 356.669 303.365 356.669 304.771 cv
356.669 304.771 li
cp
0 0 0 0 cmyk
ef
356.669 304.771 mo
356.669 304.771 li
356.669 306.176 355.5 307.318 354.061 307.318 cv
352.619 307.318 351.452 306.176 351.452 304.771 cv
351.452 303.365 352.619 302.223 354.061 302.223 cv
355.5 302.223 356.669 303.365 356.669 304.771 cv
356.669 304.771 li
cp
0 .9492 .832 0 cmyk
@
66.0586 359.5 mo
67.0586 359.5 li
66.0586 69.4487 mo
67.0586 69.4487 li
66.0586 87.7163 mo
67.0586 87.7163 li
66.0586 51.7163 mo
70.0586 51.7163 li
66.0586 105.449 mo
67.0586 105.449 li
66.0586 124.787 mo
67.0586 124.787 li
66.0586 160.449 mo
67.0586 160.449 li
66.0586 178.448 mo
67.0586 178.448 li
66.0586 196.449 mo
67.0586 196.449 li
66.0586 214.449 mo
67.0586 214.449 li
66.0586 251.251 mo
67.0586 251.251 li
66.0586 269.251 mo
67.0586 269.251 li
66.0586 287.251 mo
67.0586 287.251 li
66.0586 305.251 mo
67.0586 305.251 li
66.0586 341.518 mo
67.0586 341.518 li
66.0586 142.251 mo
69.5586 142.251 li
66.0586 232.449 mo
70.0586 232.449 li
66.0586 323.25 mo
70.0586 323.25 li
65.6421 51.6455 mo
558.592 51.6455 li
558.592 367.75 li
65.6421 367.75 li
65.6421 51.6455 li
cp
.8359 .7188 .7188 .9297 cmyk
@
290.928 294.059 mo
296.928 294.059 li
293.928 289.169 mo
293.928 293.878 li
290.928 283.085 mo
296.928 283.085 li
293.928 283.1 mo
293.928 285.506 li
101.91 133.44 mo
107.91 133.44 li
104.91 133.32 mo
104.91 104.945 li
101.91 105.342 mo
107.91 105.342 li
0 .9492 .832 0 cmyk
@
296.928 288.73 mo
296.928 288.73 li
296.928 290.385 295.585 291.73 293.928 291.73 cv
292.272 291.73 290.928 290.385 290.928 288.73 cv
290.928 287.074 292.272 285.73 293.928 285.73 cv
295.585 285.73 296.928 287.074 296.928 288.73 cv
296.928 288.73 li
cp
0 0 0 0 cmyk
ef
296.928 288.73 mo
296.928 288.73 li
296.928 290.385 295.585 291.73 293.928 291.73 cv
292.272 291.73 290.928 290.385 290.928 288.73 cv
290.928 287.074 292.272 285.73 293.928 285.73 cv
295.585 285.73 296.928 287.074 296.928 288.73 cv
296.928 288.73 li
cp
0 .9492 .832 0 cmyk
@
.8359 .7188 .7188 .9297 cmyk
%%IncludeResource: font Times-Bold
/QSRITJ+Times-Bold /Times-Bold findfont ct_VMDictPut/QSRITJ+Times-Bold*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]QSRITJ+Times-Bold nfQSRITJ+Times-Bold*1 [18 0 0 -18 0 0 ]msf35.0459 326.24 mo(0.1)sh35.0459 236.24 mo(0.2)sh35.0459 146.24 mo(0.3)shQSRITH+Symbol*1 [24 0 0 -24 0 0 ]msf.288086 87.5522 mo(a)shQSRITH+Symbol*1 [24 0 0 -24 0 0 ]msf.288086 87.5522 mo(a) false chp.576 lw
@
%%IncludeResource: font Times-Bold
/QSRITJ+Times-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three 19{/.notdef}rp /G 9{/.notdef}rp /Q 4{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 13{/.notdef}rp /s 140{/.notdef}rp]QSRITJ+Times-Bold nfQSRITJ+Times-Bold*1 [18 0 0 -18 0 0 ]msf16.2803 95.2397 mo(s )[7.00488 0 ]xshQSRITJ+Times-Bold*1 [24 0 0 -24 0 0 ]msf22.0459 88.7476 mo(\(Q)[7.99219 0 ]xshQSRITJ+Times-Bold*1 [13.992 0 0 -13.992 0 0 ]msf48.7021 80.7554 mo(2)shQSRITJ+Times-Bold*1 [24 0 0 -24 0 0 ]msf55.6982 88.7476 mo(\))shQSRITJ+Times-Bold*1 [18 0 0 -18 0 0 ]msf60.2803 386.24 mo(11)[142.758 0 ]xsh212.03 386.24 mo(0)sh346.038 386.24 mo(100)shQSRITJ+Times-Bold*1 [24 0 0 -24 0 0 ]msf235.046 400.755 mo(Q [GeV)sh314.351 400.755 mo(])sh.0312 .9102 .0312 0 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 4{/.notdef}rp /three 10{/.notdef}rp /greater 9{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O /.notdef /Q 15{/.notdef}rp /a /.notdef /c /.notdef /e /f 2{/.notdef}rp /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf291.991 124.748 mo(Heavy Quarkonia )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf423.952 124.755 mo(\(NLO)sh457.39 124.755 mo(\))sh0 .9492 .832 0 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period 4{/.notdef}rp /three 10{/.notdef}rp /greater 9{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O /.notdef /Q 15{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf293.226 142.974 mo(e)shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf300.405 136.404 mo(+)shQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf306.226 142.974 mo(e)shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf312.397 135.396 mo(\320 )[6.76172 0 ]xsh322.663 135.396 mo( )shQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf322.069 142.974 mo( jets & shapes )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf427.054 142.99 mo(\(res. NNLO\))sh.7695 .2383 .9766 .1367 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period 4{/.notdef}rp /three 10{/.notdef}rp /greater 5{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf291.991 103.966 mo(DIS jets)sh350.491 103.966 mo( )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf354.999 103.974 mo(\(NLO)sh388.437 103.974 mo(\))sh282.835 137.789 mo
282.835 137.789 li
282.835 139.445 281.49 140.789 279.835 140.789 cv
278.178 140.789 276.835 139.445 276.835 137.789 cv
276.835 136.133 278.178 134.789 279.835 134.789 cv
281.49 134.789 282.835 136.133 282.835 137.789 cv
282.835 137.789 li
cp
0 0 0 0 cmyk
ef
1.00001 lw
376.713 307.865 mo
376.713 312.115 li
374.104 311.984 mo
379.323 311.984 li
373.854 303.458 mo
379.073 303.458 li
376.629 310.706 mo
376.662 303.819 li
282.835 137.789 mo
282.835 137.789 li
282.835 139.445 281.49 140.789 279.835 140.789 cv
278.178 140.789 276.835 139.445 276.835 137.789 cv
276.835 136.133 278.178 134.789 279.835 134.789 cv
281.49 134.789 282.835 136.133 282.835 137.789 cv
282.835 137.789 li
cp
0 .9492 .832 0 cmyk
@
379.213 307.76 mo
379.213 307.76 li
379.213 309.175 378.044 310.323 376.604 310.323 cv
375.165 310.323 373.994 309.175 373.994 307.76 cv
373.994 306.346 375.165 305.198 376.604 305.198 cv
378.044 305.198 379.213 306.346 379.213 307.76 cv
379.213 307.76 li
cp
0 0 0 0 cmyk
ef
379.213 307.76 mo
379.213 307.76 li
379.213 309.175 378.044 310.323 376.604 310.323 cv
375.165 310.323 373.994 309.175 373.994 307.76 cv
373.994 306.346 375.165 305.198 376.604 305.198 cv
378.044 305.198 379.213 306.346 379.213 307.76 cv
379.213 307.76 li
cp
0 .9492 .832 0 cmyk
@
65.5586 367.75 mo
404.557 367.75 li
65.5586 362.75 mo
65.5586 366.75 li
66.5586 367.75 mo
70.5586 367.75 li
353.557 366.25 mo
353.557 367.25 li
345.557 366.25 mo
345.557 367.25 li
337.557 366.25 mo
337.557 367.25 li
327.557 366.25 mo
327.557 367.25 li
315.557 366.25 mo
315.557 367.25 li
301.557 366.25 mo
301.557 367.25 li
283.557 366.25 mo
283.557 367.25 li
257.558 366.25 mo
257.558 367.25 li
205.558 366.25 mo
205.558 367.25 li
198.558 366.25 mo
198.558 367.25 li
189.558 366.25 mo
189.558 367.25 li
179.558 366.25 mo
179.558 367.25 li
168.558 366.25 mo
168.558 367.25 li
154.558 366.25 mo
154.558 367.25 li
135.558 366.25 mo
135.558 367.25 li
109.558 366.25 mo
109.558 367.25 li
360.557 363.25 mo
360.557 367.25 li
212.558 363.25 mo
212.558 367.25 li
405.557 366.25 mo
405.557 367.25 li
360.557 363.25 mo
360.557 367.25 li
.8359 .7188 .7188 .9297 cmyk
@
395.078 312.181 mo
395.078 316.431 li
392.078 316.317 mo
398.078 316.317 li
392.078 308.228 mo
398.078 308.228 li
395.078 312.643 mo
395.078 307.832 li
0 .9492 .832 0 cmyk
@
397.79 312.224 mo
397.79 312.224 li
397.79 313.691 396.568 314.881 395.064 314.881 cv
393.559 314.881 392.338 313.691 392.338 312.224 cv
392.338 310.757 393.559 309.567 395.064 309.567 cv
396.568 309.567 397.79 310.757 397.79 312.224 cv
397.79 312.224 li
cp
0 0 0 0 cmyk
ef
261.059 292.269 mo
267.057 292.269 li
264.057 283.097 mo
264.057 291.975 li
261.059 273.199 mo
267.057 273.199 li
264.057 283.417 mo
264.057 273.274 li
397.79 312.224 mo
397.79 312.224 li
397.79 313.691 396.568 314.881 395.064 314.881 cv
393.559 314.881 392.338 313.691 392.338 312.224 cv
392.338 310.757 393.559 309.567 395.064 309.567 cv
396.568 309.567 397.79 310.757 397.79 312.224 cv
397.79 312.224 li
cp
0 .9492 .832 0 cmyk
@
267.057 282.704 mo
267.057 282.704 li
267.057 284.36 265.713 285.704 264.057 285.704 cv
262.402 285.704 261.059 284.36 261.059 282.704 cv
261.059 281.047 262.402 279.704 264.057 279.704 cv
265.713 279.704 267.057 281.047 267.057 282.704 cv
267.057 282.704 li
cp
0 0 0 0 cmyk
ef
305.723 301.013 mo
311.723 301.013 li
308.723 291.616 mo
308.723 301.155 li
305.723 291.806 mo
311.723 291.806 li
308.723 299.955 mo
308.723 292.955 li
267.057 282.704 mo
267.057 282.704 li
267.057 284.36 265.713 285.704 264.057 285.704 cv
262.402 285.704 261.059 284.36 261.059 282.704 cv
261.059 281.047 262.402 279.704 264.057 279.704 cv
265.713 279.704 267.057 281.047 267.057 282.704 cv
267.057 282.704 li
cp
0 .9492 .832 0 cmyk
@
311.723 296.316 mo
311.723 296.316 li
311.723 297.972 310.377 299.316 308.723 299.316 cv
307.067 299.316 305.723 297.972 305.723 296.316 cv
305.723 294.66 307.067 293.316 308.723 293.316 cv
310.377 293.316 311.723 294.66 311.723 296.316 cv
311.723 296.316 li
cp
0 0 0 0 cmyk
ef
311.723 296.316 mo
311.723 296.316 li
311.723 297.972 310.377 299.316 308.723 299.316 cv
307.067 299.316 305.723 297.972 305.723 296.316 cv
305.723 294.66 307.067 293.316 308.723 293.316 cv
310.377 293.316 311.723 294.66 311.723 296.316 cv
311.723 296.316 li
cp
0 .9492 .832 0 cmyk
@
352.692 301.836 mo
360.432 301.836 li
.027451 .92 .69 .61 cmyk
f
352.692 301.836 mo
360.432 301.836 li
0 .917647 .643137 .63 cmyk
@
359.794 305.145 mo
359.794 305.145 li
359.794 306.8 358.449 308.145 356.794 308.145 cv
355.137 308.145 353.794 306.8 353.794 305.145 cv
353.794 303.489 355.137 302.145 356.794 302.145 cv
358.449 302.145 359.794 303.489 359.794 305.145 cv
359.794 305.145 li
cp
.027451 .92 .69 .61 cmyk
ef
1 lw
0 lj
4 ml
359.794 305.145 mo
359.794 305.145 li
359.794 306.8 358.449 308.145 356.794 308.145 cv
355.137 308.145 353.794 306.8 353.794 305.145 cv
353.794 303.489 355.137 302.145 356.794 302.145 cv
358.449 302.145 359.794 303.489 359.794 305.145 cv
359.794 305.145 li
cp
0 .917647 .643137 .63 cmyk
@
1.00001 lw
1 lj
11.5 ml
236.02 285.38 mo
242.02 285.38 li
239.02 270.428 mo
239.02 285.209 li
236.02 252.134 mo
242.02 252.134 li
239.02 267.411 mo
239.02 252.366 li
0 .9492 .832 0 cmyk
@
242.02 268.715 mo
242.02 268.715 li
242.02 270.372 240.676 271.715 239.02 271.715 cv
237.364 271.715 236.02 270.372 236.02 268.715 cv
236.02 267.059 237.364 265.715 239.02 265.715 cv
240.676 265.715 242.02 267.059 242.02 268.715 cv
242.02 268.715 li
cp
0 0 0 0 cmyk
ef
242.02 268.715 mo
242.02 268.715 li
242.02 270.372 240.676 271.715 239.02 271.715 cv
237.364 271.715 236.02 270.372 236.02 268.715 cv
236.02 267.059 237.364 265.715 239.02 265.715 cv
240.676 265.715 242.02 267.059 242.02 268.715 cv
242.02 268.715 li
cp
0 .9492 .832 0 cmyk
@
280.111 95.9048 mo
281.611 98.9048 li
281.611 98.9048 li
283.111 101.905 li
283.111 101.905 li
280.111 101.905 li
280.111 101.905 li
277.111 101.905 li
277.111 101.905 li
278.611 98.9048 li
278.611 98.9048 li
280.111 95.9048 li
280.111 95.9048 li
cp
0 0 0 0 cmyk
ef
280.111 95.9048 mo
281.611 98.9048 li
281.611 98.9048 li
283.111 101.905 li
283.111 101.905 li
280.111 101.905 li
280.111 101.905 li
277.111 101.905 li
277.111 101.905 li
278.611 98.9048 li
278.611 98.9048 li
280.111 95.9048 li
280.111 95.9048 li
cp
.7695 .2383 .9766 .1367 cmyk
@
402.115 312.834 mo
402.115 317.084 li
399.506 316.59 mo
404.723 316.59 li
399.394 308.791 mo
404.61 308.791 li
402.166 315.265 mo
402.199 308.378 li
0 .9492 .832 0 cmyk
@
404.75 312.73 mo
404.75 312.73 li
404.75 314.145 403.582 315.292 402.144 315.292 cv
400.702 315.292 399.533 314.145 399.533 312.73 cv
399.533 311.316 400.702 310.167 402.144 310.167 cv
403.582 310.167 404.75 311.316 404.75 312.73 cv
404.75 312.73 li
cp
0 0 0 0 cmyk
ef
407.502 316.924 mo
407.502 321.174 li
404.894 320.975 mo
410.11 320.975 li
404.711 313.767 mo
409.928 313.767 li
407.279 320.265 mo
407.313 313.378 li
404.75 312.73 mo
404.75 312.73 li
404.75 314.145 403.582 315.292 402.144 315.292 cv
400.702 315.292 399.533 314.145 399.533 312.73 cv
399.533 311.316 400.702 310.167 402.144 310.167 cv
403.582 310.167 404.75 311.316 404.75 312.73 cv
404.75 312.73 li
cp
0 .9492 .832 0 cmyk
@
410 317.434 mo
410 317.434 li
410 318.848 408.832 319.997 407.394 319.997 cv
405.952 319.997 404.783 318.848 404.783 317.434 cv
404.783 316.019 405.952 314.872 407.394 314.872 cv
408.832 314.872 410 316.019 410 317.434 cv
410 317.434 li
cp
0 0 0 0 cmyk
ef
410 317.434 mo
410 317.434 li
410 318.848 408.832 319.997 407.394 319.997 cv
405.952 319.997 404.783 318.848 404.783 317.434 cv
404.783 316.019 405.952 314.872 407.394 314.872 cv
408.832 314.872 410 316.019 410 317.434 cv
410 317.434 li
cp
0 .9492 .832 0 cmyk
@
0 0 0 1 cmyk
%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three 2{/.notdef}rp /six 7{/.notdef}rp /greater 2{/.notdef}rp /A 2{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /j /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [10 0 0 -10 0 0 ]msf491.968 62.0366 mo(April 2016)sh298.324 296.873 mo
304.324 296.873 li
301.324 281.246 mo
301.324 296.889 li
298.324 281.154 mo
304.324 281.154 li
301.324 293.124 mo
301.324 286.124 li
0 .9492 .832 0 cmyk
@
304.324 289.131 mo
304.324 289.131 li
304.324 290.788 302.981 292.131 301.324 292.131 cv
299.67 292.131 298.324 290.788 298.324 289.131 cv
298.324 287.475 299.67 286.131 301.324 286.131 cv
302.981 286.131 304.324 287.475 304.324 289.131 cv
304.324 289.131 li
cp
0 0 0 0 cmyk
ef
304.324 289.131 mo
304.324 289.131 li
304.324 290.788 302.981 292.131 301.324 292.131 cv
299.67 292.131 298.324 290.788 298.324 289.131 cv
298.324 287.475 299.67 286.131 301.324 286.131 cv
302.981 286.131 304.324 287.475 304.324 289.131 cv
304.324 289.131 li
cp
0 .9492 .832 0 cmyk
@
210.08 260.509 mo
210.08 249.604 li
210.08 246.881 mo
210.08 233.996 li
207.08 261.057 mo
213.08 261.057 li
.0312 .9102 .0312 0 cmyk
@
207.08 244.692 mo
213.08 244.692 li
213.08 250.692 li
207.08 250.692 li
207.08 244.692 li
cp
0 0 0 0 cmyk
ef
207.08 244.692 mo
213.08 244.692 li
213.08 250.692 li
207.08 250.692 li
207.08 244.692 li
cp
.0312 .9102 .0312 0 cmyk
@
277.094 114.771 mo
283.094 114.771 li
283.094 120.771 li
277.094 120.771 li
277.094 114.771 li
cp
0 0 0 0 cmyk
ef
277.094 114.771 mo
283.094 114.771 li
283.094 120.771 li
277.094 120.771 li
277.094 114.771 li
cp
.0312 .9102 .0312 0 cmyk
@
282.89 157.25 mo
282.89 157.25 li
282.89 158.907 281.545 160.25 279.89 160.25 cv
278.232 160.25 276.89 158.907 276.89 157.25 cv
276.89 155.595 278.232 154.25 279.89 154.25 cv
281.545 154.25 282.89 155.595 282.89 157.25 cv
282.89 157.25 li
cp
0 .92 .72 .56 cmyk
ef
1 lw
0 lj
4 ml
282.89 157.25 mo
282.89 157.25 li
282.89 158.907 281.545 160.25 279.89 160.25 cv
278.232 160.25 276.89 158.907 276.89 157.25 cv
276.89 155.595 278.232 154.25 279.89 154.25 cv
281.545 154.25 282.89 155.595 282.89 157.25 cv
282.89 157.25 li
cp
0 .752941 .67 .57 cmyk
@
282.89 157.25 mo
282.89 157.25 li
282.89 158.907 281.545 158.25 279.89 158.25 cv
278.232 158.25 276.89 158.907 276.89 157.25 cv
276.89 155.595 278.232 154.25 279.89 154.25 cv
281.545 154.25 282.89 155.595 282.89 157.25 cv
282.89 157.25 li
cp
0 .92 .72 .56 cmyk
f
1.00001 lw
1 lj
11.5 ml
282.89 157.25 mo
282.89 157.25 li
282.89 158.907 281.545 158.25 279.89 158.25 cv
278.232 158.25 276.89 158.907 276.89 157.25 cv
276.89 155.595 278.232 154.25 279.89 154.25 cv
281.545 154.25 282.89 155.595 282.89 157.25 cv
282.89 157.25 li
cp
0 .752941 .67 .57 cmyk
@
0 .9375 1 0 cmyk
%%IncludeResource: font Symbol
/QSRITH+Symbol*1 [97{/.notdef}rp /alpha 18{/.notdef}rp /tau 139{/.notdef}rp]QSRITH+Symbol nfQSRITH+Symbol*1 [18 0 0 -18 0 0 ]msf292.218 83.0054 mo(t)sh%%IncludeResource: font Times-Roman
/QSRITI+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three 2{/.notdef}rp /six 7{/.notdef}rp /greater 2{/.notdef}rp /A 2{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i /j /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]QSRITI+Times-Roman nfQSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf299.89 83.0054 mo( decays )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf357.866 83.0132 mo(\(N)[4.63379 0 ]xshQSRITI+Times-Roman*1 [12 0 0 -12 0 0 ]msf372.554 79.1694 mo(3)shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf378.64 83.0132 mo(LO)[8.55176 0 ]xsh397.194 83.0132 mo(\))sh280.586 82.5 mo
279.086 79.5 li
279.086 79.5 li
277.586 76.5 li
277.586 76.5 li
280.586 76.5 li
280.586 76.5 li
283.586 76.5 li
283.586 76.5 li
282.086 79.5 li
282.086 79.5 li
280.586 82.5 li
280.586 82.5 li
cp
ef
280.586 82.5 mo
279.086 79.5 li
279.086 79.5 li
277.586 76.5 li
277.586 76.5 li
280.586 76.5 li
280.586 76.5 li
283.586 76.5 li
283.586 76.5 li
282.086 79.5 li
282.086 79.5 li
280.586 82.5 li
280.586 82.5 li
cp
@
104.993 122.857 mo
103.493 119.857 li
103.493 119.857 li
101.993 116.857 li
101.993 116.857 li
104.993 116.857 li
104.993 116.857 li
107.993 116.857 li
107.993 116.857 li
106.493 119.857 li
106.493 119.857 li
104.993 122.857 li
104.993 122.857 li
cp
ef
104.993 122.857 mo
103.493 119.857 li
103.493 119.857 li
101.993 116.857 li
101.993 116.857 li
104.993 116.857 li
104.993 116.857 li
107.993 116.857 li
107.993 116.857 li
106.493 119.857 li
106.493 119.857 li
104.993 122.857 li
104.993 122.857 li
cp
@
378.27 313.962 mo
378.27 318.212 li
375.662 318.082 mo
380.879 318.082 li
375.412 309.555 mo
380.629 309.555 li
378.186 316.803 mo
378.219 309.917 li
0 .9492 .832 0 cmyk
@
380.77 313.859 mo
380.77 313.859 li
380.77 315.273 379.603 316.421 378.16 316.421 cv
376.721 316.421 375.553 315.273 375.553 313.859 cv
375.553 312.444 376.721 311.296 378.16 311.296 cv
379.603 311.296 380.77 312.444 380.77 313.859 cv
380.77 313.859 li
cp
0 0 0 0 cmyk
ef
390.077 318.24 mo
390.077 322.736 li
387.469 322.597 mo
392.686 322.597 li
387.219 313.578 mo
392.436 313.578 li
389.992 321.245 mo
390.025 313.96 li
380.77 313.859 mo
380.77 313.859 li
380.77 315.273 379.603 316.421 378.16 316.421 cv
376.721 316.421 375.553 315.273 375.553 313.859 cv
375.553 312.444 376.721 311.296 378.16 311.296 cv
379.603 311.296 380.77 312.444 380.77 313.859 cv
380.77 313.859 li
cp
0 .9492 .832 0 cmyk
@
392.577 318.129 mo
392.577 318.129 li
392.577 319.626 391.408 320.84 389.967 320.84 cv
388.527 320.84 387.36 319.626 387.36 318.129 cv
387.36 316.633 388.527 315.418 389.967 315.418 cv
391.408 315.418 392.577 316.633 392.577 318.129 cv
392.577 318.129 li
cp
0 0 0 0 cmyk
ef
404.258 316.514 mo
404.258 321.049 li
401.648 320.836 mo
406.867 320.836 li
401.467 313.145 mo
406.686 313.145 li
404.035 320.079 mo
404.068 312.73 li
392.577 318.129 mo
392.577 318.129 li
392.577 319.626 391.408 320.84 389.967 320.84 cv
388.527 320.84 387.36 319.626 387.36 318.129 cv
387.36 316.633 388.527 315.418 389.967 315.418 cv
391.408 315.418 392.577 316.633 392.577 318.129 cv
392.577 318.129 li
cp
0 .9492 .832 0 cmyk
@
406.758 317.057 mo
406.758 317.057 li
406.758 318.567 405.588 319.792 404.148 319.792 cv
402.709 319.792 401.54 318.567 401.54 317.057 cv
401.54 315.547 402.709 314.323 404.148 314.323 cv
405.588 314.323 406.758 315.547 406.758 317.057 cv
406.758 317.057 li
cp
0 0 0 0 cmyk
ef
406.758 317.057 mo
406.758 317.057 li
406.758 318.567 405.588 319.792 404.148 319.792 cv
402.709 319.792 401.54 318.567 401.54 317.057 cv
401.54 315.547 402.709 314.323 404.148 314.323 cv
405.588 314.323 406.758 315.547 406.758 317.057 cv
406.758 317.057 li
cp
0 .9492 .832 0 cmyk
@
207.08 234.33 mo
213.08 234.33 li
.0312 .9102 .0312 0 cmyk
@
386.834 304.65 mo
386.834 309.177 li
384.225 309.039 mo
389.442 309.038 li
383.975 299.955 mo
389.192 299.955 li
386.748 307.676 mo
386.781 300.339 li
0 .9492 .832 0 cmyk
@
389.332 304.539 mo
389.332 304.539 li
389.332 306.045 388.165 307.269 386.725 307.269 cv
385.283 307.269 384.115 306.045 384.115 304.539 cv
384.115 303.032 385.283 301.809 386.725 301.809 cv
388.165 301.809 389.332 303.032 389.332 304.539 cv
389.332 304.539 li
cp
0 0 0 0 cmyk
ef
389.332 304.539 mo
389.332 304.539 li
389.332 306.045 388.165 307.269 386.725 307.269 cv
385.283 307.269 384.115 306.045 384.115 304.539 cv
384.115 303.032 385.283 301.809 386.725 301.809 cv
388.165 301.809 389.332 303.032 389.332 304.539 cv
389.332 304.539 li
cp
0 .9492 .832 0 cmyk
@
501.686 366.273 mo
501.686 367.273 li
493.686 366.273 mo
493.686 367.273 li
485.686 366.273 mo
485.686 367.273 li
475.686 366.273 mo
475.686 367.273 li
463.686 366.273 mo
463.686 367.273 li
449.686 366.273 mo
449.686 367.273 li
431.686 366.273 mo
431.686 367.273 li
554.686 366.273 mo
553.686 367.273 li
405.686 366.273 mo
405.686 367.273 li
508.686 363.273 mo
508.686 367.273 li
360.686 363.273 mo
360.686 367.273 li
.8359 .7188 .7188 .9297 cmyk
@
457.631 331.21 mo
462.848 331.21 li
457.449 325.502 mo
462.666 325.502 li
460.052 331.356 mo
460.052 325.364 li
.957 .9062 .3281 .2695 cmyk
@
460.131 332.106 mo
459.006 329.856 li
459.006 329.856 li
457.881 327.606 li
457.881 327.606 li
460.131 327.606 li
460.131 327.606 li
462.381 327.606 li
462.381 327.606 li
461.256 329.856 li
461.256 329.856 li
460.131 332.106 li
460.131 332.106 li
cp
0 0 0 0 cmyk
ef
460.131 332.106 mo
459.006 329.856 li
459.006 329.856 li
457.881 327.606 li
457.881 327.606 li
460.131 327.606 li
460.131 327.606 li
462.381 327.606 li
462.381 327.606 li
461.256 329.856 li
461.256 329.856 li
460.131 332.106 li
460.131 332.106 li
cp
.9414 .7617 0 0 cmyk
@
480.631 335.262 mo
485.848 335.262 li
480.449 329.804 mo
485.666 329.804 li
483.051 334.908 mo
483.051 329.106 li
.957 .9062 .3281 .2695 cmyk
@
483.131 335.409 mo
482.006 333.159 li
482.006 333.159 li
480.881 330.908 li
480.881 330.908 li
483.131 330.908 li
483.131 330.908 li
485.381 330.908 li
485.381 330.908 li
484.256 333.159 li
484.256 333.159 li
483.131 335.409 li
483.131 335.409 li
cp
0 0 0 0 cmyk
ef
483.131 335.409 mo
482.006 333.159 li
482.006 333.159 li
480.881 330.908 li
480.881 330.908 li
483.131 330.908 li
483.131 330.908 li
485.381 330.908 li
485.381 330.908 li
484.256 333.159 li
484.256 333.159 li
483.131 335.409 li
483.131 335.409 li
cp
.9414 .7617 0 0 cmyk
@
499.131 335.611 mo
504.348 335.611 li
498.949 330.153 mo
504.166 330.153 li
501.551 335.507 mo
501.551 329.706 li
.957 .9062 .3281 .2695 cmyk
@
501.631 336.007 mo
500.506 333.757 li
500.506 333.757 li
499.381 331.507 li
499.381 331.507 li
501.631 331.507 li
501.631 331.507 li
503.881 331.507 li
503.881 331.507 li
502.756 333.757 li
502.756 333.757 li
501.631 336.007 li
501.631 336.007 li
cp
0 0 0 0 cmyk
ef
501.631 336.007 mo
500.506 333.757 li
500.506 333.757 li
499.381 331.507 li
499.381 331.507 li
501.631 331.507 li
501.631 331.507 li
503.881 331.507 li
503.881 331.507 li
502.756 333.757 li
502.756 333.757 li
501.631 336.007 li
501.631 336.007 li
cp
.9414 .7617 0 0 cmyk
@
.8359 .7188 .7188 .9297 cmyk
QSRITJ+Times-Bold*1 [18 0 0 -18 0 0 ]msf490.858 386.24 mo(1000)sh557.057 359.5 mo
558.057 359.5 li
557.057 69.4487 mo
558.057 69.4487 li
557.057 87.7163 mo
558.057 87.7163 li
544.557 51.7163 mo
548.557 51.7163 li
557.057 105.449 mo
558.057 105.449 li
557.057 124.787 mo
558.057 124.787 li
557.057 160.449 mo
558.057 160.449 li
557.057 178.448 mo
558.057 178.448 li
557.057 196.449 mo
558.057 196.449 li
557.057 214.449 mo
558.057 214.449 li
557.057 251.251 mo
558.057 251.251 li
557.057 269.251 mo
558.057 269.251 li
557.057 287.251 mo
558.057 287.251 li
557.057 305.251 mo
558.057 305.251 li
557.057 341.518 mo
558.057 341.518 li
554.557 142.251 mo
558.057 142.251 li
554.557 232.449 mo
558.557 232.449 li
554.557 323.25 mo
558.557 323.25 li
@
281.131 183.357 mo
279.631 180.357 li
279.631 180.357 li
278.131 177.357 li
278.131 177.357 li
281.131 177.357 li
281.131 177.357 li
284.131 177.357 li
284.131 177.357 li
282.631 180.357 li
282.631 180.357 li
281.131 183.357 li
281.131 183.357 li
cp
0 0 0 0 cmyk
ef
281.131 183.357 mo
279.631 180.357 li
279.631 180.357 li
278.131 177.357 li
278.131 177.357 li
281.131 177.357 li
281.131 177.357 li
284.131 177.357 li
284.131 177.357 li
282.631 180.357 li
282.631 180.357 li
281.131 183.357 li
281.131 183.357 li
cp
.9414 .7617 0 0 cmyk
@
QSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf365.202 182.841 mo( )shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf369.702 182.865 mo(\(NLO)sh281.131 203.357 mo
279.631 200.357 li
279.631 200.357 li
278.131 197.357 li
278.131 197.357 li
281.131 197.357 li
281.131 197.357 li
284.131 197.357 li
284.131 197.357 li
282.631 200.357 li
282.631 200.357 li
281.131 203.357 li
281.131 203.357 li
cp
.919554 .869078 0 0 cmyk
f
281.131 203.357 mo
279.631 200.357 li
279.631 200.357 li
278.131 197.357 li
278.131 197.357 li
281.131 197.357 li
281.131 197.357 li
284.131 197.357 li
284.131 197.357 li
282.631 200.357 li
282.631 200.357 li
281.131 203.357 li
281.131 203.357 li
cp
.9414 .7617 0 0 cmyk
@
QSRITI+Times-Roman*1 [18 0 0 -18 0 0 ]msf294.054 202.841 mo(pp \320> tt)shQSRITI+Times-Roman*1 [14 0 0 -14 0 0 ]msf354.702 202.865 mo(\(NNLO\))sh403.14 182.865 mo(\))sh353.136 308.649 mo
360.432 308.649 li
359.794 305.145 mo
359.794 305.145 li
359.794 306.8 358.449 308.145 356.794 308.145 cv
355.137 308.145 353.794 306.8 353.794 305.145 cv
353.794 303.489 355.137 302.145 356.794 302.145 cv
358.447 302.145 359.794 303.489 359.794 305.145 cv
359.794 305.145 li
cp
.027451 .92 .69 .61 cmyk
f
353.136 308.649 mo
360.432 308.649 li
359.794 305.145 mo
359.794 305.145 li
359.794 306.8 358.449 308.145 356.794 308.145 cv
355.137 308.145 353.794 306.8 353.794 305.145 cv
353.794 303.489 355.137 302.145 356.794 302.145 cv
358.447 302.145 359.794 303.489 359.794 305.145 cv
359.794 305.145 li
cp
0 .917647 .643137 .63 cmyk
@
321.631 296.21 mo
326.848 296.21 li
321.449 283.502 mo
326.666 283.502 li
324.052 296.21 mo
324.052 283.46 li
.945098 .827451 0 0 cmyk
@
324.131 293.106 mo
323.006 290.856 li
323.006 290.856 li
321.881 288.606 li
321.881 288.606 li
324.131 288.606 li
324.131 288.606 li
326.381 288.606 li
326.381 288.606 li
325.256 290.856 li
325.256 290.856 li
324.131 293.106 li
324.131 293.106 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
324.131 293.106 mo
323.006 290.856 li
323.006 290.856 li
321.881 288.606 li
321.881 288.606 li
324.131 288.606 li
324.131 288.606 li
326.381 288.606 li
326.381 288.606 li
325.256 290.856 li
325.256 290.856 li
324.131 293.106 li
324.131 293.106 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
324.131 293.106 mo
323.006 290.856 li
323.006 290.856 li
321.881 288.606 li
321.881 288.606 li
324.131 288.606 li
324.131 288.606 li
326.381 288.606 li
326.381 288.606 li
325.256 290.856 li
325.256 290.856 li
324.131 293.106 li
324.131 293.106 li
cp
@
330.756 302.71 mo
335.973 302.71 li
330.574 289.002 mo
335.791 289.002 li
333.177 303.21 mo
333.186 288.96 li
.976471 .952941 0 0 cmyk
@
333.256 299.606 mo
332.131 297.356 li
332.131 297.356 li
331.006 295.106 li
331.006 295.106 li
333.256 295.106 li
333.256 295.106 li
335.506 295.106 li
335.506 295.106 li
334.381 297.356 li
334.381 297.356 li
333.256 299.606 li
333.256 299.606 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
333.256 299.606 mo
332.131 297.356 li
332.131 297.356 li
331.006 295.106 li
331.006 295.106 li
333.256 295.106 li
333.256 295.106 li
335.506 295.106 li
335.506 295.106 li
334.381 297.356 li
334.381 297.356 li
333.256 299.606 li
333.256 299.606 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
333.256 299.606 mo
332.131 297.356 li
332.131 297.356 li
331.006 295.106 li
331.006 295.106 li
333.256 295.106 li
333.256 295.106 li
335.506 295.106 li
335.506 295.106 li
334.381 297.356 li
334.381 297.356 li
333.256 299.606 li
333.256 299.606 li
cp
@
340.506 307.21 mo
345.723 307.21 li
340.324 296.62 mo
345.541 296.62 li
342.927 307.21 mo
342.927 296.585 li
.960784 .917647 0 0 cmyk
@
343.006 305.231 mo
341.881 302.981 li
341.881 302.981 li
340.756 300.731 li
340.756 300.731 li
343.006 300.731 li
343.006 300.731 li
345.256 300.731 li
345.256 300.731 li
344.131 302.981 li
344.131 302.981 li
343.006 305.231 li
343.006 305.231 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
343.006 305.231 mo
341.881 302.981 li
341.881 302.981 li
340.756 300.731 li
340.756 300.731 li
343.006 300.731 li
343.006 300.731 li
345.256 300.731 li
345.256 300.731 li
344.131 302.981 li
344.131 302.981 li
343.006 305.231 li
343.006 305.231 li
cp
.960784 .917647 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
343.006 305.231 mo
341.881 302.981 li
341.881 302.981 li
340.756 300.731 li
340.756 300.731 li
343.006 300.731 li
343.006 300.731 li
345.256 300.731 li
345.256 300.731 li
344.131 302.981 li
344.131 302.981 li
343.006 305.231 li
343.006 305.231 li
cp
@
385.979 321.074 mo
391.195 321.074 li
385.797 311.887 mo
391.014 311.887 li
388.399 321.074 mo
388.399 311.857 li
.976471 .952941 0 0 cmyk
@
388.479 319.198 mo
387.354 317.027 li
387.354 317.027 li
386.229 314.856 li
386.229 314.856 li
388.479 314.856 li
388.479 314.856 li
390.729 314.856 li
390.729 314.856 li
389.604 317.027 li
389.604 317.027 li
388.479 319.198 li
388.479 319.198 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
388.479 319.198 mo
387.354 317.027 li
387.354 317.027 li
386.229 314.856 li
386.229 314.856 li
388.479 314.856 li
388.479 314.856 li
390.729 314.856 li
390.729 314.856 li
389.604 317.027 li
389.604 317.027 li
388.479 319.198 li
388.479 319.198 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
388.479 319.198 mo
387.354 317.027 li
387.354 317.027 li
386.229 314.856 li
386.229 314.856 li
388.479 314.856 li
388.479 314.856 li
390.729 314.856 li
390.729 314.856 li
389.604 317.027 li
389.604 317.027 li
388.479 319.198 li
388.479 319.198 li
cp
@
399.645 322.385 mo
404.861 322.385 li
399.463 312.75 mo
404.68 312.75 li
402.065 322.385 mo
402.065 312.718 li
@
402.145 320.556 mo
401.02 318.385 li
401.02 318.385 li
399.895 316.214 li
399.895 316.214 li
402.145 316.214 li
402.145 316.214 li
404.395 316.214 li
404.395 316.214 li
403.27 318.385 li
403.27 318.385 li
402.145 320.556 li
402.145 320.556 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
402.145 320.556 mo
401.02 318.385 li
401.02 318.385 li
399.895 316.214 li
399.895 316.214 li
402.145 316.214 li
402.145 316.214 li
404.395 316.214 li
404.395 316.214 li
403.27 318.385 li
403.27 318.385 li
402.145 320.556 li
402.145 320.556 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
402.145 320.556 mo
401.02 318.385 li
401.02 318.385 li
399.895 316.214 li
399.895 316.214 li
402.145 316.214 li
402.145 316.214 li
404.395 316.214 li
404.395 316.214 li
403.27 318.385 li
403.27 318.385 li
402.145 320.556 li
402.145 320.556 li
cp
@
412.311 322.218 mo
417.527 322.218 li
412.129 313.581 mo
417.346 313.581 li
414.731 322.218 mo
414.731 313.552 li
@
414.811 321.056 mo
413.686 318.885 li
413.686 318.885 li
412.561 316.714 li
412.561 316.714 li
414.811 316.714 li
414.811 316.714 li
417.061 316.714 li
417.061 316.714 li
415.936 318.885 li
415.936 318.885 li
414.811 321.056 li
414.811 321.056 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
414.811 321.056 mo
413.686 318.885 li
413.686 318.885 li
412.561 316.714 li
412.561 316.714 li
414.811 316.714 li
414.811 316.714 li
417.061 316.714 li
417.061 316.714 li
415.936 318.885 li
415.936 318.885 li
414.811 321.056 li
414.811 321.056 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
414.811 321.056 mo
413.686 318.885 li
413.686 318.885 li
412.561 316.714 li
412.561 316.714 li
414.811 316.714 li
414.811 316.714 li
417.061 316.714 li
417.061 316.714 li
415.936 318.885 li
415.936 318.885 li
414.811 321.056 li
414.811 321.056 li
cp
@
421.811 323.219 mo
427.027 323.219 li
421.629 312.256 mo
426.846 312.256 li
424.231 323.219 mo
424.231 312.219 li
@
424.311 320.474 mo
423.186 318.086 li
423.186 318.086 li
422.061 315.698 li
422.061 315.698 li
424.311 315.698 li
424.311 315.698 li
426.561 315.698 li
426.561 315.698 li
425.436 318.086 li
425.436 318.086 li
424.311 320.474 li
424.311 320.474 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
424.311 320.474 mo
423.186 318.086 li
423.186 318.086 li
422.061 315.698 li
422.061 315.698 li
424.311 315.698 li
424.311 315.698 li
426.561 315.698 li
426.561 315.698 li
425.436 318.086 li
425.436 318.086 li
424.311 320.474 li
424.311 320.474 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
424.311 320.474 mo
423.186 318.086 li
423.186 318.086 li
422.061 315.698 li
422.061 315.698 li
424.311 315.698 li
424.311 315.698 li
426.561 315.698 li
426.561 315.698 li
425.436 318.086 li
425.436 318.086 li
424.311 320.474 li
424.311 320.474 li
cp
@
432.271 325.464 mo
437.487 325.464 li
432.089 314.501 mo
437.306 314.501 li
434.691 325.464 mo
434.691 314.464 li
@
434.771 322.719 mo
433.646 320.332 li
433.646 320.332 li
432.521 317.943 li
432.521 317.943 li
434.771 317.943 li
434.771 317.943 li
437.021 317.943 li
437.021 317.943 li
435.896 320.332 li
435.896 320.332 li
434.771 322.719 li
434.771 322.719 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
434.771 322.719 mo
433.646 320.332 li
433.646 320.332 li
432.521 317.943 li
432.521 317.943 li
434.771 317.943 li
434.771 317.943 li
437.021 317.943 li
437.021 317.943 li
435.896 320.332 li
435.896 320.332 li
434.771 322.719 li
434.771 322.719 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
434.771 322.719 mo
433.646 320.332 li
433.646 320.332 li
432.521 317.943 li
432.521 317.943 li
434.771 317.943 li
434.771 317.943 li
437.021 317.943 li
437.021 317.943 li
435.896 320.332 li
435.896 320.332 li
434.771 322.719 li
434.771 322.719 li
cp
@
446.144 334.718 mo
451.36 334.718 li
445.962 319.435 mo
451.179 319.435 li
448.564 334.718 mo
448.564 319.384 li
@
448.644 329.932 mo
447.519 327.436 li
447.519 327.436 li
446.394 324.938 li
446.394 324.938 li
448.644 324.938 li
448.644 324.938 li
450.894 324.938 li
450.894 324.938 li
449.769 327.436 li
449.769 327.436 li
448.644 329.932 li
448.644 329.932 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
448.644 329.932 mo
447.519 327.436 li
447.519 327.436 li
446.394 324.938 li
446.394 324.938 li
448.644 324.938 li
448.644 324.938 li
450.894 324.938 li
450.894 324.938 li
449.769 327.436 li
449.769 327.436 li
448.644 329.932 li
448.644 329.932 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
448.644 329.932 mo
447.519 327.436 li
447.519 327.436 li
446.394 324.938 li
446.394 324.938 li
448.644 324.938 li
448.644 324.938 li
450.894 324.938 li
450.894 324.938 li
449.769 327.436 li
449.769 327.436 li
448.644 329.932 li
448.644 329.932 li
cp
@
366.646 316.673 mo
371.862 316.673 li
366.464 306.458 mo
371.681 306.458 li
369.066 316.673 mo
369.066 306.423 li
@
369.146 312.764 mo
368.021 310.593 li
368.021 310.593 li
366.896 308.422 li
366.896 308.422 li
369.146 308.422 li
369.146 308.422 li
371.396 308.422 li
371.396 308.422 li
370.271 310.593 li
370.271 310.593 li
369.146 312.764 li
369.146 312.764 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
369.146 312.764 mo
368.021 310.593 li
368.021 310.593 li
366.896 308.422 li
366.896 308.422 li
369.146 308.422 li
369.146 308.422 li
371.396 308.422 li
371.396 308.422 li
370.271 310.593 li
370.271 310.593 li
369.146 312.764 li
369.146 312.764 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
369.146 312.764 mo
368.021 310.593 li
368.021 310.593 li
366.896 308.422 li
366.896 308.422 li
369.146 308.422 li
369.146 308.422 li
371.396 308.422 li
371.396 308.422 li
370.271 310.593 li
370.271 310.593 li
369.146 312.764 li
369.146 312.764 li
cp
@
377.646 318.173 mo
382.862 318.173 li
377.464 309.577 mo
382.681 309.577 li
380.066 318.173 mo
380.066 309.548 li
@
380.146 316.889 mo
379.021 314.718 li
379.021 314.718 li
377.896 312.547 li
377.896 312.547 li
380.146 312.547 li
380.146 312.547 li
382.396 312.547 li
382.396 312.547 li
381.271 314.718 li
381.271 314.718 li
380.146 316.889 li
380.146 316.889 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
380.146 316.889 mo
379.021 314.718 li
379.021 314.718 li
377.896 312.547 li
377.896 312.547 li
380.146 312.547 li
380.146 312.547 li
382.396 312.547 li
382.396 312.547 li
381.271 314.718 li
381.271 314.718 li
380.146 316.889 li
380.146 316.889 li
cp
.976471 .952941 0 0 cmyk
@
.862745 .619608 0 0 cmyk
%%IncludeResource: font MyriadPro-Regular
/QSRITK+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QSRITK+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 135{/.notdef}rp /endash 78{/.notdef}rp]QSRITK+MyriadPro-Regular nfQSRITK+MyriadPro-Regular*1 [9 0 0 -9 0 0 ]msf301.429 175.21 mo(\()shQSRITK+MyriadPro-Regular*1 [14 0 0 -14 0 0 ]msf303.984 175.21 mo(\261)shQSRITK+MyriadPro-Regular*1 [9 0 0 -9 0 0 ]msf310.984 175.21 mo(\))sh1.00001 lw
1 lj
11.5 ml
392.024 319.825 mo
397.241 319.825 li
391.843 315.542 mo
397.06 315.542 li
394.445 319.825 mo
394.445 315.491 li
.976471 .952941 0 0 cmyk
@
394.524 321.039 mo
393.399 318.542 li
393.399 318.542 li
392.274 316.044 li
392.274 316.044 li
394.524 316.044 li
394.524 316.044 li
396.774 316.044 li
396.774 316.044 li
395.649 318.542 li
395.649 318.542 li
394.524 321.039 li
394.524 321.039 li
cp
.854902 .733333 0 0 cmyk
f
394.524 321.039 mo
393.399 318.542 li
393.399 318.542 li
392.274 316.044 li
392.274 316.044 li
394.524 316.044 li
394.524 316.044 li
396.774 316.044 li
396.774 316.044 li
395.649 318.542 li
395.649 318.542 li
394.524 321.039 li
394.524 321.039 li
cp
.976471 .952941 0 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QSRITK+MyriadPro-Regular*1 uf/QSRITG+TimesNewRomanPSMT*1 uf/QSRITI+Times-Roman*1 uf/QSRITJ+Times-Bold*1 uf/QSRITH+Symbol*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.0%%For: (Siggi Bethke) ()%%Title: (asq-2016.eps)%%CreationDate: 26.08.16 12:58%%Canvassize: 16383%AI9_DataStream%Gb"-6f66FMZiE'M^d!?dCbcV@N(m%O)f0JR!^n`i&tJC=&+_[M%J)DppW$lI.17FgLHB9PYP%urWZ>j+:0"pKl-(g3oDWtubV/rh%fg??5),An\M24;a&2pGm3kh@l<Kf\<LleQ@+;0NcTlE%':Ia<FA26D>UBu1I\EL&-oR,1u(-S*t$]F8$@8lm:Dea1)VM=SnZ9Qge%l/E5#IS08[Z<,2,q$NQss(98M+5ZbLdDPXA@\AS0hYo\(/uJDRB0;qls4q-Rc"5f(MeQPpH:.^`)mn>N*>sYPRdSZ'IfN;j4Jg_1%n=HHo2TUo6_m+\drt,qdZU'HX&S/8XAq&-DJ0Ye=J6oO[>D%-'bkN!^UA_3AYfKXj^ppWB=tN9>QQqBq0;f1ko@*%&Vj'D6P$U?j%q&;E?eY8[lb4:.P;(F^G$4uDk1A$uAO/MrGorLeB.=3TX69g5iYpA,2+9EYpkVN&qr`P`,05Z$C6@`!X,^G+0kIOoG;Ke6'ch6"d%=J01o0b\m4mcJk.(/+9-H6*!C-DQ,gJdC*E&MfG=&gZ)/6dM&s+I!Q$A3:D2-Y)j@L^58g/8tI'^BG>22uFp5%>7$om3He3`BP.$%?\oF!re5\fRK<&a1&XVb?DXVbc#=ZG0rt$C044euM%BgaQ[<b^T$kj]I#K<aUR^CIG.m+g;nuL_^HA?I4K6\YoTs@?TpR":JuQAL%Y#jZ&4Cq:o&7A$Ie8H7"8!;dQ1mdjIZZs9!qFP'rN(>'3!9D)8FtsW:-V7,?+^fa#6]*7!qF<s3V"C"+JN?3T$%Tn_E&\gEKjo$=%fG4m<P8OnOo+[7(r3O8!qpOuS6hUZW#EoimaSnsBs)Y+@)ceJ8c8,jHY&Gs+,9h*_#)K+$^Ta)66&0B()F/pc9c$1bRJ7XaJ_/LH%gT)or%0!=E/"21+VR/K($P"'>(C_R[#j1tnRXli&0ZUuh@%g*ba3uIP/5a+RM@SLE5kaGM;eTbNhMZ;K>S@J=(8Q7d"pAKkV>gs%%;B,%P$?t>?3iDM;[NNi.9$:P;`E1)bpLCAN=Oq(8[[H1DD8?D-G/:RlaP&8b[L3S12:lrp2-ijLD8EX4[SI?f1_]3XJi"M7!Pa9R%MIr`A$C:*'5n%qgdj_s;/h%!E?o\Q(d6sT#]2RW#!s=)1T_lR^@L7p;3*HJe$qqWtZ\'5-,.PF9Z0Kej@'12[Z;ZW$fu0MKdks3+%cdu&>iSWPb4?-QGJ$s4$'E28kr;d@5NTW.p4JUQcHA]EB%4M"BL]4WW=[ZeMn]*a_s4Nl>1].i\CYY\^n:LGd!9Wou^59i@[-!UE%/QPerY`c_?S,e1%?6[PF-.ScC3GpNk]Wgr+P_'8g,P+*l'VoC:+"YLK@bdsPL$KD%PCD\Dm#QXUOar6]'7'R.IMsmS2km-+ZbVsf%R3LXM^Z"Ts_8-rok/@EF#F>F'd747ia'+pE?&GII"S!:A\f*0O/;T*6R$3A?8bP0b8Oc9>Y/ITB`r05-Mec%'<9"lS\OK:rIfeG#%Y/NQUia1Kd4nkn97Z(ct6.t#J5g6/JKB+'F5Ais`n:]_s1cM1H_9mQmUmUgk9!)/K%i9;5''rKbSukr.W\f%pfjV^YV!L&0O>AIj%9pOkS"nKc5p<O0Y7`2-L%;n'3DSF3Vo?I^K#]ugA`h)KL\od-0P.$;bk<]KHeEb+Rqu8l/5N#+Mj7NVTebStV(f+m]$dQ!n"`E'7%4[p>&1cTd]P62,V/P+-PW%FG_m(,,ZN@=Q6F=]RFo9''o:IY\*fJ,GgIgpK8dZcZ:[^-j-,?C3jIX4=^S6GfJAenc*@%;kM5N("*%"R7!SojZ1=WVm2gZX]@8/4_h=O9:+l-L,g__@2K;A,[^A0$rfpN<fMO!R;N,WD<**I)rBD<B9,gg4FTr"b-oTYq9(RVs&1.Zlne<%Kmp+")#4ej;Hog/WtE!2g4FH^\V.-qC=_di^Xm7*n-8l1!\t15*T$4CE;+Q$TWC9tU7OC[1qFK2YinRi]gWIji=ilQ@c>W@I]j,o%E'g`f2?R3=*\8.3r13"2E"lQOrj[_2,E+4aJntrV"RCf$"4AV47rK2fgd@n13I5B?QR2KJaO,oMNA8-91E\[9W1EM/cIPO,@,M0&%QXcUC!#/;REn%6'[;,f[!`;P[s4W'S_E1CYm9_'F1e2<t&V@dh1pZ/p(fU/NR8<k]&'/dKJjse0%lnlJMXV9IYd,t2o)X(ZX5>hl%G5qr;Y.Gf#@qrG;'7WDKbR1B_A@a4E=o?ZQTIGmcEeB*2JpY[h&/53BN#WQOn%.0trs;EU*q#VlW]XUoolN&t:'$h1`*E`TiJ9?(%huKdV599fQS?HQ=h$KaDIi\N>G]QL'Oi@L.AJTb&:O!t:7gi;S$;V-'AH[,TKt`+p"Npto"Sh9+*).E!$&$l[>E]fM8pB9m5A2bF%/GP;tlQ@D]rfi4#pRP66&/_R!ZO#AAE_CY,($f9jH%8T`FcHBn7PN.sc:ZuF2Kmoq+,-Rt776J^9V*-QD0,&eEM"Zo@3?&T#[kB0%r*TeN`rhgl$hN7EO-oqW!;l*=9%5.FjDT#&?#i*Ice(kZT-=3rLEG;'8Q^4=;>MVsN8QWe?TGrj0)hU.6^jp,HWd.rR^7#Yn5kGN%r"Y_.5a^T=@('*/fbZL3ig9(*Tm0F%fiQ[&p/Pd"bF@KEZZ0@G9l,UA([!3DLF3rG"q8pZqLlEn5,6__cWu7L'a__66qZr-)(B$!%q0*]2MY=EO2>9h>7r0['_7O2ChCIVQpVSt:Z36R>=U%'flt]GS9HSWeD#Y!l;*%IDR1j#(Da@Nq6UR/Pr\SYH!ZpnSK:=Mt_!72D%Oh?.OPOYlU9]8W<1_-h,=#;*nbtTNU'`Z>JZo%L[709'4.*6WfOlTah]8]KR"VkMpPB".mL@5Go40s^`#d<b%X^DZ.#h0\?3F31[%[0/5,Z1nu7h?"(?Z8f:^-$kaLCe`ONW5:+:bM%?JYdq!.g)iRSA#mtc2nRu:`GKhT:qb8<rehil7WTIL97%]]1AG-k)kb2D[pcaW%E+EWDpCQ3"?\O!Sh_$)pE$i9DrE=UWL#\h-kPc8'B30T-JCd_E>+5JcVdM7GTU>,-'XKV$ciPL'd2N!ik[32I]nT2t=MXG[q[Alq%B[d#Ph;4lVXVUa<V7f8$n<^on,qPeqZ:>Z1JW[8$!PprMp74Ph(WHqOisf<<,.QdtICFPO29=GAbaKR*4,_'W"OUQ(It@5Fa)dQ<%W^-'WiO@0,rujWZr5-*,kLd3LmWslZXX:CpZhdHaK%Bcpd)>li!i&#3j,,X]j.7$R3raR]VDY&emr'Fn=FZ@aR3ZUS?Wp"8K5]ND%%HB:O4Q,p2IgeA9B@7a-C&^K$HDAIsr"!C5)pV59'O\*e#.D"mitX.45V,3HqB6<nnm<oo_k9LS260Rl^X*bnN?U/-2\geVYmoC_%Kd?Bq/_7"PK/p=ClZ7#gnJ?NZ3&b3gm3G!-mD0`V7b`>>JM70V-aY#_9q/@V19h//1kbhl2gi/f&)Zm*+81NhgA^qDf_b1(diE?#%"HFJQeb4'R*UN%krmc`u)FG%RA'([?#_^'O0Np>ja("NK)32]92N1!&3K1iT3K,0^3K0\E;B/4sOs.1<(P]\S)]H!]"rd%3"r`?u%"rbV`"<+)8UA\`O0[[E1'H1RuQ3`Z[M'OK[]C>3+6cMg;rhIQ%.G'%`)&'[j64u`A)<,0N+oRT5-3#kt:R\67IfUc-D>PtoA>4>K%"cQ,sn3;t2a@%'K$Q,<-_Z)_fAkMola2gqQs77(qWU#$TU]6iJ$N9/[;<YclO()PH;2^.f&JS6aa<]Kt8Gm=*58Gu[YlmCI6l\dQ%aClPRMdQa!#eOd0Do*u4Wj(M/67El^US*g,Kqa&9LD"4!3Z0(c88_mIr,3RRKUFarLX7_RJc?9"B"mOpKZ8Md5ttJ&#))#6%/FhY%^d97'DoTRZ%cHfp+DE"ss-kaI&Gc@N(mt)^Ik(`,m1hMI;b[5I6Gf4EIqKGChf[,pO?2%PKR@LjQdYE$3W0^NV,o/c,LPf1o]epX%8uum)Whe1O[IPLQTs&<6$lWW!V;U)4&\,e4CD.u04lY%?:cJCZs"ebmqGF/3*a,15V+@^:S+BR[$%h,(ho9m['ZL"4^->m^DAIY(%oAR79p#g-PLW=jY[:7/3onmA;+=5Aka"Z"-e&;@aQaQ+<`m[,((=5pJO?H\JcA59DT@NBVbrp3?cIpNN'Z6N["DP'd:2a^m?ds0L%Zpha93pl&`\[Z66-EQ4]s&/98!i%>$B"I2#ke7eW#VCK)/m[9f/rh2/cj%A7VH5^D#]ok'XUd8dHZF]pjFeiUa&I7T>7l83;>oB/%d8Re2:Nb1Z?^>@n?>n)k(:/KlPPooMQsqN*[ih.F;p;7$rpB:YE;:$<o)FDHaq"FG%pS(DGoEp9EUSCh/rgR,5V/'lg4OT+2:\UI%KZfO[%'e1Mhc7P@=<nH=K]?ZdrA!`D7TRUi)udHKJ]-[e$NkF\M\VVM#!H(.-/qrRgO/2A,r->E7#@kA7/jV]g[BW])"+npQl.W.%>#Lsl$0.)S?@/qhH8Ih<jBoCq@&*^<'P?upl@Un"0-84unMot.f`s%e,\r?f+aDZ'+HRR1;`VJqIFB=>AktOO%!*e&`8bh]&<0.H%S?TI<j7s$jmD=X!aE<C@W]4UW;sO*7`CtLX!:Tg\\-Jr>kY(Fb.86I:mZ(B>_BC4Y%-/Elm4@ZbE#<t<_2],Iph<:75WIB6nscFI%"kVBHZg'.kVI-,(e9\-N1jKiE/MR'H<iYp2(3RNXlM!aHE%kl<4&LQ?Q]%-/'f@$'o04iUU],9Ri-E9@dT]B_EThI$HZ$N#f^H=Z%k.bS0O1?0#g'.#N:ZdSlA?fIoLYQ3IK;N.%JW>MjG>XJ'N8I+bUjYfdBu\GYBBq"LRSdfse7-BnEu(*eomR"eE?ABa74W"#C.IgL%[A2/`T"&G^&k_ArZ%i<8@CDO]7C>I'Mes=TP7idC_bpAuU^R:QVD89JgPQ8u0sp7HBIT`%$e5(j`O=lUP`9%.Timi[7GBorT.@Q?%Sa)65itX5RY1N"0C'Bfg#-f%>s6'DofCRtuk$5lRM$["+&r`AG@0VH+"'O;g'08_kZB%PfVV.([O]XI,dKr%k)du)'7WZ7HJlir+%6\rD-7'8i#LMLWqgKTT4,h`/F6)\pnX=OSs[dsg:JjNhee&?oaT]Ta-">%@U\S`%B0KT"W&LM#WO'-DBAO]ZkFFg#Y97O*&['KZM%%qBe,%9@gEXa&DDa<X"uLo<J.N0)d:crhp]</CJu,2;dSa'PUTX&p>t"SZT/+"aq@P>M?(9:SFgm<4GRN)a`OVuLSnqX*\,.?>@t%":US8rUJ?`9dJmEUFu8Khk5n`ClEX%:'s-e)KsVoeu6d"'k&2?.V1'mXi2r^=eb!qf(asUFM%aAM3:qig/3Fo6:aV.KM57a?X^0^%nc-JVO7k1U!:OXS9DL)G/(#5)p(_7>V0PuQglVXA8K"NI<Dh<.@U><'eoJhd).[Kr)V`(MTNGtHZ7BNA&YfSR<^IBm[-;:i>(H`l%/:,e[BlR2AenDP3Kp9!>]VYOG#GoQS<8Po^OT5t9ABsKd="CJP;aG7bTOV4BF*Pj^K2=ZG2q!d&aatFGd_)GSenfX[(g?k=_sNmc%W[Cus8CXk\RHi20DUY[ERNUn8$!f[?)03M^E3iW/cu(qWOa[mi?t")<VD"Vf=cE0::?gdVWD<QWNa-E?ZphWi2iU3=nVE>(PmN5.%+Q9blJ=&50"XFciOa79UA7b8*M.D2pBW@:mK8(/;'5)XP_Pu9&PLCK[=BZPe?,8qk[BNa@]FX?%M&K!(W'6LeCcRsIW+g1do]c@P%]!;QZ(+[@6JXm7sha/;`.r%,PDkV,@E+rmtCrd*+P(EY5<5L&\6J=AR['(>Ca:/aLYCJ0#J[[mg$4EYIg>nN@>HXb.]iH0$fYjUO%JSW+_a?ctZhk$1(0N-H.WA::#3(;OoXgW@QTuJFlid.uO/?Z*(\!5.Efu:A(`\5%jIEs-PT._J9`'0c&cNE8CKX?WA"A:9U8r::?%pS&U/U;M=#G#9Ejd1!jfVGlMUlt!cq!f7Se^/d0[#OsN"NR20o>=(kA'n&u>P`E>g&BerWOmn78QGghKLs]:^/h3*o99+]4UI,sH%HF!VD7E\t5XYtb9g7/%!i1I+0!Zc;nbeNRj25<upFWAS=8pU$iE&J#Q%n64/K0b%2jR[O][lHW08DRO/4D!\kQ3K9!O1pL_6,'2?%@$$L9E9BM9Z?[Ahg!qq+kE9P(TERfQa:NZWD_ECrXh;",cf">8DAfEbhf@o8"p"0&Xg)1b)8;NT(dK#]\sW*=**Hr&>G=_X6@,cp%lZ6T'YLOJ\-lkS93a$7/>4Cd?BKU1fP**O-#h$5b>XD`82:EMt3t+:?Jr'N*N9=]>=W%_Rl>&"26_!"[.c0DK)CZmb]ri,+O3+%N%<O5DrJQh#;W3Nqte*(I<NEiK\o'Gp_2F]jhL5WlMmD<XSA!YSFQIWZX3&[b-1''3^NEc#jF*+c08qn;3Jm+'*[u1a=k8=ucCsDSS%&8@oWof'44l@oE19L]EP04*jb=tTOR"=%'b:ko'=iT&\jP,0Y8>HoUE')FA#pWJpn[^Ve#IN+Y=gnm#3kIT/[<o^0,.6rYP(oJgj%2!4tuc2`')\*,ip/Jr2/e;?],Lb21NDU)s3Bjt1i#=O"u?AVT0&CT.eW%$pejI7WAOb$XnC"$Q-99U^DOW9"WAC?DuMNBQ\(E?8Y%*mpf$emKJ_NeM"S/2U\T82=s2ZSWH1+UJScNC>ZT[$@>Y22_\1<M2Q6<d@r>,r8ZINV"6+L/,l*JoIhH@Y)m5o[I7_=`?WgVek!r%:(JdfI9<BZ$?m>/]XOTaTQX^\k/MgD8^n\*jqkDFT+/"LFAE$V^a7Kd?D1Wf*,lPr7^G$bX14Ies)T&S,_a-h(/S\`W',I>rh\.c%W8[Vh[H"B^P\/L00<#tYlnrYeB$Cl4KoaM[7I=7f(X&D$<l#5IK+Z-5qJ4>$K^S]3WWQa$"6*&+ge-L*KCuli+=CD555?ACMMZ&_%mniVdYaDU7lf2%:&4()(6Z=Jg%i9RoakLU-!ij\.q*P22,W%lNWQ`mk7aa;jTe)LqVc9D=Jnf*!-Tu=ob^f,`AE#0leoKH?$@bGs%5-'fMmkn;-j^)\pFA7eS?G[*"lBd`s\@g%oTX_H^^_4`G89rN1p"kLa-DSO%eT'JMp.%aoa7IE;>m9/Y&;gm^>'kn/gQM[!.nbJ1%gcMcPmpT5b0hq$dmsfl5;ahWfX8sGC!45'43O&j<P>%7Q\O<P;p7rURX]_VE.N(-VrJ/o$S%TA6^CW+f.',nZN;K<NKI<j1Vj;m1%Mjb%l=,U5Z"_r-E1$Dl`hirL%X'Qm2W](t,^eMbjCk@XL.B-rL"-,&E*)h,eC:]#41h*G,Qu>]&P@Fd=!R4#k]^J$IB/`nCoK).h%$!WgJ+XNV;KjDq6@puXrYJB>J<`kGaL7=D<G=46W;rF@WYcBk@;I_L.[Uo\WWZ6?5$D&-8U`<BV.#8`NgB_"c.;Tbg;\5W&W>UuC%7pCt3+es>WGq7+@9lG%kYm[V>N8Zm]CB?:\VkD@Pgd?s=[l1;(eo4[]foR#^%*Eb)+Ckon'rS/BG=]p*nb7?u)EZ@uT=m8T_clQ`%^!Ro98mn+aG-XOO71U,Zg,4:A,Y'd)2jp)0Eb64cLld!N#_>Wc5-^m2IJN/8IOmJ3\TXZI914[pMMKQr8>^\/l:jKLS=NSS^8pa;%e"=rAQ.[QCS3*mr%\N'g0W"p<8aO/pMB/V#pQ`qf81)l341icnlX%5/$=,$LA0c1h&8^mK3:me1g%18T-_'f]fdp><"`;QOH,IH(%NNQ=X@J.'k9h4Dj@=3(J.g?&f_[TG%r\M?J(X(*'r2$\KI_Y%j07I8G[V2nU>'i-t?H/#Wj^R<31&jC"HaGek"6->]g"AqZ3J]oT%^:r\iKtr=):jK\&HT"#9^LpJ]@-0';SEmJ]dN@,3Qs&OScfVeuG^k\8VqL<5C60O>$D[A(WF3cuBsC/dI^84^fd#)ZTZe08L*$fu%FS\q;okTT#5Oj/bC\s1U*"GbDIr06R^Ko]&W>E6j'h4>3o5r7q55"&VHsb`HiU"9`T\#dYLTBI_H*9_4d&4.X1h_h-a<V@nilq2Y%.lI=9lK>(jbaG*n^9)I9p?<+)hjlpF)MN%Rf_NF32E1)qc+FkEkJ?r[m:%&r#MDC&a7O,BGEO/h*dbjVp&We]5GR8"@A9A4(P3?[%06r!)o)%YK1u=[@'Ke=Efg79=r)iM9UF_?sm59'7))!O)]]k4NCF[gsI`L8NcCI5IA^#4SL?(5c(qZ=`5$d:um[0U_c%gb#+Q&6`%Ma8h@>'>-t(^).>*dlmPE"e_)kT87upp9_#SE<&4+%paZH,3SYi]7H1LM@sC:PAK5ZK)B.1W'U7T>ul^H2md("-9760_Eu@7sQN0%."<Nen1GkL\h<DI,<CF+M`UFJ:X&)Jc"80)Qe6L8f-u/qMh>F9VaOBp-i$m=r\iGM52GCjKm]p\BTIYK5OYSFc'aVTG<S$!^;Tk$%V,,P:OH2NcRcWQ'j(Dfu*=JGLB$Ohq0^t1>^rrp+r3!eri$I)AZ[/e-nC5WMGJDGn7US&#q_7lIA`2./H(]UGJhCO>.XU#T*T]=`%X7[fR.aH33+:Q1%it/e:_oug1<]4UTV=,CY^=&Dn;1?]CYm@/?dcDZDLWAT&09RFBYu5UC5-VmhE0?D&Z"qQ0TLI/(X%"E0Gsu2!%8UHfe?Y.i^*lnrXc:c6,nr`&G;6hFT^.ZmcfBL^h(rbni-#Y#)Q6[1l_".VAR!,Hi,W#mmC3Br[*P2]s;2L:)p[7KjnX%UtH44!-%l%>`!UIrYslR'#o,WVRa"e.="\aFf1_d"OHq8W"o$X;CaeunQ`+2F[$KnrPOEkNn^X&dp0R\#k(d?fshZL[+d3@27eWnsCR.RrIo%R(rHI'i':\556hY@dn0taa^MjZi"qEYfLrV:FFLXh(*ZQ/GU&?U%50IrgLG<N6^@hpX=N6gDFqadTmi_<F^RH@`2usd_f!`:uMDI%rn[sJZbq\KUu9"Fh8ne7GOOn'b''\n]?]_!nNHQCYssoc!C2d=0<U+QIc=OkbNTAuP3M\,3tEY#$.olYZ6kFr]&^HtH'Bk>l7#90%CD@omH?=MoH/d"o?=O55Z$XO=4Lq&tk1X0D"o`3kpQ\HS$NXr3o`/0gELJ7^et9MH\eC3til7Y3i.kI$l(q.cd?;gO?Se6e(?Y/!%_=3EMIba,'\[9,1A@b$,$B6l^<?X$CV_!9.O8=cYW8.W'E$;o'F/!k2dB@964GP!jF>n=k^4X148=urE_-bS/H*Q,4oGW/iCH"R3%o]I!>`Ou89c^/3?r8ECJ!qdsa(7Pi\Y9cSU'Bpr9bGjNt`"@j_Q+Fj"CefgfZ-bRXIa.sj?rdj/cK!20+qY^_<qX%VhaJqNALp*=%30%FCnea8s(@G5a4T9D^RV.^^a[lB'^>#mql#(LbJd2p\g3A9)<A=9J+7s_BUa<)&ign#0OV;GCbf,.Hck)9iI`ar:hgRgj_hjsC%YfNdtPga*%fqlbJ)8DHl^(b.R_$us^"LP!bg_V.d2uAOtmKsJl'dskj0&DHFMe2`)K?$fu-3ss6#f;-;%EgS[a3Bs6LtO)?'<s?R%b=]3K7Xr/(<t`ap9be&_f9V"(Bh2']>#S?XpD)/bU*4n##X\sBX>jKO_e?GWYuP85eo,;[#@'@=E:U>5,"'dlk0k]]Pj&er$cL2b%e/6Ydk%pTPA1\cqUfI\!j<Elo.;;sW!UroF/dl-Ge\[6mU\*V.&+t3.HU`3%J/Et#FsrcJK*`SWb$WcHWNsDT(a2]^_1hBNfUUk2%'dq\Tj837nr:-1,od2o$S;!2Q.FD-g5>%)c1YtY#.*5C-qV<%7UMSK9Dj'?a"EDA"p>O5\/<&/(0?&89-SHhqs%2DAk/Cr@rP<S!%es__9-sdmVUi)"QBA3Ac?:`DQVnjVP/&\k,b>Q[<$0Ga3OC&c`P54OM8:*s/REO0l=skW)fUTTqpQfL8BU/HA&FlKV3B8ZE#$P:t%#>YqVc+aNjhnA+_?@E.\U+]E_"$Zb91!fP*&+YsnNHqsmGegdV`,UpL,,G4*8:aQG)ITTC(u.2#]\E+$Q,hadP#$I,b&@N2I>8>8%<8e1IZ+hGi_9oe)UfH:pZDcqrB)oa'c/3,?4o&=Fq[.]'81DJ7p`pAiYh3=&l@EF34&2d-`\Th<YC\#a9H0O-o=b^o%^T)nMI*C$%naeLOo8"'QP+TaKYH"6^oO)6dd`l64ihU"/h54&PU^*N>X31"3RnS.S,<*b_)`k6"q@!JN[AR.\]K?#lqpN+"1dfrC8!4C54!#<-%22R^]&je78j21$)OTLb35D@L7%fj.kH@Bo%L$5BkM"%boAu8D;nWBGs/f`:a;;@"-Il8V"0O6+omo[;o0"hG,Bbi@O]R,[^V>9s<%j@mi3S6YkbK!.(F,2R*?j_n@+n.2.(2a!i#B4pZ+VYu$3Gi?L!GF02$`@2CkXLg'YYma;VCm/Ii+krMjYkNo(#\5s=0V`ua1Qo=u%b[:G67-=CT"cW[pO=\mlI5dMgC-JrK';Y)gFXY8focoecYPZ9DS]FT7S:d^c?^<^`Wg5ec?c;(0FnH#KPHR1UlZ?2\J%?XF6u+cO%mXEBdO13upeB$AcKDA/h@l]likDd,FeR,su4C9R`iT<=slmQ.[/]IOdkcFVmAbLjf\Pq>d.V:>9jN[K>Q?&DAr7.7L1.9LUKa;`S%.#ci!X>o^ah@WhcT*"FVSfP5#4HO]4lN#*[bhb$u-M8g*Os1R"S$Mq%[E@$lahFF30BtLp@Xj^9$0(,/K((ul'FWH$Nh?<)j"eF3%(H<*$GS*Zt?`,a,VeR`LT*F^SkdEX@glBn/IH%s4q;H_?)3U[<qih&!M&'kParP0OfSL8$OfT^q1G![$04UghK/N?Q:'pF`\hO>=%\mDfkbAD;m/`Z)7M(X35]:\#NS0N_DE0klWi[ksd-#Z'M4si6rJ-R/[cDEDlVo@A+r0i[149]c7T%5T>fC>.WcH:Jr59]n4G#VjM%Eioa^:bI@=g2"TYS;fVc#deZaXbD.sF*c7eIib4G(C.aZr%rEQ.pfdA0$1Z_rJ7.g!qU!I-BHFW-gd&O5N75`^kgjP-*J[SOIJ0c%<m/he8+tnP[1XWA@#0SufW%f_b==Vp^[qMergAD;]iNR/(SZ>sM;RXf_&tU!]=eE8cBg$tT;s"bdM2)ChXgK\l^QCW\&aFr&"`Pj%n%>XbkFDNj:N1V4FYc-%Q[F]-&i=*_bdF5-pW@=63CE2J3=VaJ+m`JSZX?G/8"B=9M*4iG2hd$Gkh#?&`%?j#N`U1hJ*p^+ZTg56%OI$4s!:5,=i`-_i#Kr/o!9RoW(:u!p<7Ag#,:Y^ir%NR>4,S[af:jr_3f/Gr8".!aASn+qS3]p2RZ$#XGs)Fr0OL9J;E]Au?ckNM%*j`4(bP79:Um&-qpj<%<3(SK%9/#r&<5m2E2fmON]DqDk>E#!lQ)K5h(\535LGoNb5Uo]r$..d&/?C-?a[rYbai0HffPUO;%W9r\%V^QdpX2p/5Eppnd+Zm?;Sm7Ab>V\:\W>b;$Eh;ad6`3D=e&@R\)plOD8(lB:4j57=bbm#J.>Le.\NP2E5`/_i's5'3Ec.J%#jN^A%R9n4PQgm[*qt"k-/.N?Aao,A!7G7]FOH/eYm),L&QM#YD]36!QGC=s!Fn7bY3Ton0'0@\i$iGmB3*h#STgjJ8[SOUm!l3*Y_%HY9%-*Wh^fm.a?S*OPVK4TtTDRl!TT/c:*(8$*IZfYh@;dO@&^jo-cnrn.C"^3P<"@oR-7/!Ip5d3`eB!N:VA)G$NcEa4:AWAuU`PI-4%BF&DeXQIlhQAhEXKg@&u3ITcE.(ag0:lpT85'cuG';=W#<30=cBlGei0eTlgH[&u<DU6M/>5o0<QZ#Db4;I,Q#7;3s?F>e%HX,u,%PW=3rT;_=?jpMK(I-2Y/aeg_Xa7?bh\3]V`+-^n6YeHIVjaEqhMu)bK85YI`.(BRQo:m;jJ;e3qUn_s??KsuB!8/H5CG>'*(N3ZI%@18`3\OCD?U$iR-i-RV<4+P`9m(rq_'/<0dHc*%t:?U,8Br2f*^!3MfHnhNpXC)ZbjuFWM.Go_RI1`=41D;?PX32TYZ#>1u\elee%Q07KJY=E'j_L$:q,/nB%BZ6uKIa:gMfb5>tnEZi(Zt9pEXHC6,9DJg,7\j"TK".tpM>VJ,r)*dh8u%Bs.qdm[WCs&5jF/rC@uPbr%Ro2(Hlo7IM5Xb$Xd9%-3c(D`..8AA;hNE<':ejZsUY%ZL=F9=@b,*$^<Fo"d5Lm@M%[>9EZdVhYgqR>k?V'8Z>_C$K"gm?EMdJlE%ir$(BD4Z$(JKK=m]-4Pn]S:-&568jeJ0F!oCjK9.@n@GaE-5f1K6[]#pnr(08q(aajcY$`9'R!%FQ'fR5GS#7`o[\iO&KcLV%jo6%5Gu=7kfDC5)h/clEet.867_@#ZKo[5:a#4>loCUtSH6uZDE6e$T,I)dApUgf>HW%(mW'^3$<Z9$geq/AobPLA?qiFle[t;bK<dGS%ljFStfFOBdK=BYhQa=Tr'TN+'dl3WN(_1mI-Vte%%0H/=!e2JDSSS,.0J5`=>U>i8hYQFlQgb6?5a&r,N2a`'bgDs+7je1`m,@sB%+VE$7WeJi9rs6SG8(mNOpnLrpViSbRB_?0(Aa6Xe4b(3OV_`ef"hPlIrU`@u^J)H*%[OZ;C%P8rKW1k#l[ClEeuusZ\b:#lWMNFF%blFl4Gis-2LN\B0i\2949)I1XA!m.[5FrKU6(X]h]%l>B;:JC9C(dldYK'a/W+_`J0=(,C,2SI_LqFP`mJ\;8=e:$9V&7,49_J:r%:+AYW>5>.ilr9Q_T&q^ZX1X\Aj-nbNFP#WXp[nf/i]+i\Oalfb6oKdh=Aa<"^eOPf_Q_q0@.`X<+Y.:d7?8Oa)7G+%XW*.8+2E1#%=9AYtSY4POf?1"P\^#W9K6[]sO1:OHAA9'Kq<Ut@Z:%ssH3=nh,hO*!^0/U!U6o*ZZZN,/)$bM&hfCrQ9DE781eu(@f2(Q%WAlO>%%e&AA^mW@>Em8nFXhkR?&LTmPP\uPt37+kleDoQ#(bC)f&!gIZ9-6qXWrOWis/aWG.sBftrT5t2U\q"DGM0Yj?^,jkG;Og:G)t\T%g9"GAMoIs\/_L$fnem8Ta\0bUS/CB5O(#e>oZ&&f@BNO>4gCV?Q+;FtfEK)kRT.-;Hgt@2G>j]`iqrNH(^h5u=3CBU@6N85R9g]g%gVPAnpD7Vo_P>97';=0ij0G_W:ZP\4^4etgddG;$_\bh8d8IGPMFs=7!Vlo0%b3a<=:6"0QR'kUi13)q[cd6l-0jgNQ^_V-Xn%hE%4bP0">Ofij+Cs^+I=H^9f:(7%=R,.b$ae8lhF.QEj0ci@0gnd.)Z[NjR<i;F67d9WDJ@-h2#6Af?$hbhn%:iO6QNVb]<">3pSZ2u%jF-:c,WU6_!3[lpap1+NSPa<Z0`4-g`LV)oFGtsf\O7/^XM'E#[oJ^n[&IF)om41f0;ineGp#U>&WtA3<:qQ.ro;/o(L>bO.[L#D%$YDqPBiH[ri7b0VifSF.*@#"_&0UcQ6F9Gu5^j&q?Il"&2(icP0^.RjJ68J1h"d:Hg8OSgqE],T21YfQf8KI!2e!OY]"%NFc<[QF%;0Jc.IL*X5*J93/>+;^!>VR%(:hqd+pV[_-AQ8O#3OV;]Al54s_GJ"VVEs7eqH,^t0bfTb]N%59`Z:_]]l?<=DY&HZP^9s=UdImO%iQ,>ii>9q)%-]p3X;X.L,1g,uZG]GebM-u7or<\Ji=I+\VH.eO[%;F'e9K.$=4Bck:eg@[ITW\:.@9?TM_;DP:qp^6qk,B224d.D%r4u=qbXd-Ne;[nqVs:CEm'L2m!lN^F??ZE<Gqi[^TmCs912u1]mKBpQ9Q8@AIk6sYa09kppU*)HH?S*\o4I.el+Yi4C@cQX/eD@V%0]O$3aSSh[7Z)aFhue>Q/(,T.>,<[;>#KDc7L\GmHJ)[IDQ0/.W[FUlXD935H5G\=HI&U/;JKGo96:O-/YBVU6`@u1=JNIC/K>D*%,6uk#hQo$S]T2>L&sGq)iRL$X%#j)`7p&nSB@S1kn,gEDTp59&ik*t_'c-DTm/3:-hQ?IeXV_Sg((]F\ED"Hg)&_+J&'!fJhE7Qb%+Ei[pGdM5W*k4\>pN2)0plo-VQ])F<FVVa5['MH!mJSb#]TDa/kj]W\**frJOIk4=oQXtd0BmIp6o/mG4G9<e%NW(B2!UCG^3"?L%_);#hqZG+@6-is>_<Ig/!1('[jB_ZLn6C?UkPAVRs7:`Vr'CW(b(/,Q_!u=Kr6,YZ)]5ei(.3hFc0TqqgOBCnq1-.:0B*)5!,GO[%1^:PYZiBj9HR&.`pOW;KXG6cHs$5p)U]i:M+ni*(khZG$i)!S&]C^cFUXKn0<P\1<kqV4pW@j(d`r(sBk,JO]K]S@Tp7lRo@1:C<%^3FgsGuKZ4@lu\"1fLcHgO/VD*Q)B0'M\$ic9P<;/3hlZh\Q:I;_pOi8E&4`jeiLN2?eMgS-o]V"kSGc*sTR,k)@Fs70aLMe0Ed<%V_F#dC@F=JUDCf+8pIcV]LnOa.PI2YrH"=OU(]#0B/U0"rekC)S+e]7(&);]\j7P(^%Qe/UK&.Z$:WCPWNc0U<r@UmS;/nk<PCF`%<[QAW]*ertOBm`>6f*a5fZ<#`R#&ZSn56MP*WC^ViUHOBD28"(O?gRH*59aJeDVHEV@N>M5:1sucYa.Tl6s/\,A`1L#3:Z*8>c3*%)9sVHM:bI;p4@LDi4P!?Pc0&Z"e1]a0%j69qXF?QXf'Ut!]@W:,sAg6SF81[Z54BDKPq4)\5$@9%c?qX,nOr>*T"tsj-9!OOQZ00%]#l/@-FhSJR`Va+hWr0kZ!MLYKr;m]+NR$QkNh(oUj,T1C*i#M2a,KK%ge`3GhcYmMM:?M4&D#Blpj@OHK">ucgCed8_W.;GtC&E%U[\V'J^F`_]^&N9&QElIM<b]k#hM6B!Q/m(c2!Ya=4qn_]sKd5eb!@E]Qf8qPaJorUA.W8mZ]AF(HqHL'`=OaJCfVAaW3k_iqnS4%M9Q@!)_AmsZQ0&*WtE0=gEdpS^l2!P<tD!c`T39IT9:%3;sKZo-eL9JSQPJn.M**-Pc-t_5NgpK^/V!!p2a(rJ-5Yf]O/G0C'1TV%5GG.27mIaOa2q%C"Va>__8aLfM@S"?_o8jUPL0Tg,2XS7Tp/%T.!t*gp=l)uZpmP<lKl'W%5dYR7$J#([3j7qE^+^[^N8:'5]'7&%/5bgt(3P/INh*:q/uJsHMl7W1ghR"opp2mA=fiWfdU_k%2\kA([a*/tUDc=':&>bUaC;WS*7JQ_4`kh!J9$MRQNp0Y)L.6H>Sk$Q%1pYaFV2o_$(MIpE4BgtM"bk6LS2q`;YR7&b?>P'+$YofTF73O#T[h-Com%\]"W<M^dZKGNMk;b.5ah9]l#aNmYO>X[M/onDW<4u#%Cic2T+..+d=sMA^7/=NBVb-,MR6>ahJe)]mTG?A\7KNqWU',g4&$nuITP6oX@@+)0"OscohV5=`'@/_B!GHk[!X]jC&^N]5@%[BM%(!p'p0mV]-QJNs""f3kTU@DEEC'$Purikq7nSJ[:[5ldE?@/'E0$rtGZ]NW:qW]E].@ScgC3-[NFoP[Z:]"0rZkDcPbdf@QS%%Z_%?4U_#GW:%B@%^'1<4"QDfBm"UT?m`;cla.95jp5>b#A`sZMTd93q9E_B=/W4aLE<U*ku`a5T_dfO"Sf*ceRdt"1:-JBmkmNn'-ks%)sC";q#+/cHSg;fY6)1:5X?bBYd9YioLXhSDe7r"p*ZsO[$c%mY;s%a$+0?lk7f)F05=Z(<QF,/dGTOQ8#qMfdU\a<j(ebuokmHl%k4-"Z@m0\lTGNOi'Q&=f@)"gJ-TnMpUdo!1:5S;+-jCSN]6%&<5Q_EV]K/MIrL<)G&TGB'a3$(dqkmS?6P[<eOrVi-X5m3=WZtS_%SoI$Q=/d\RHenGQoBO:0!ZI;R!YerUhNRq`j7F:@QIflEbW+YFJYm;e8kQ/YH08l[!tAo2)[utIa00<dqq=A#9VbC!0_cu?HM"SU%XT?eqL3@0Lh>+b9),=s3bpUf.mi-1HdSm[kA(Hkh:"8%4/'YQTeCc->Z)qN<V_A<dT>R'].AE_D)Q)5Za5Z1o&j>+`S"o7^.@;lm%VfO3AI'6"^Suu*#o(")e7pk;%mF7885*g)/T!$B)[B!e<qe;UGDg8tC[IdF,pQ+UEc^X:_qFp)>qOj+25PR+.->m-\_30P#)B<N(%-fS6Gb'YFWH;D5?/p3b_>n;Y]@ohc,hXc!/N:S%01nIcsT7pD1:&F0tY5E_,%_K-@hV=+)g!>g_HE-&Yc-uD<bQ^EqDpNkJrX#.B%Ies!!MVV-Yc$'c?hEA':HuHatq=>`m6]J"n;s<5^(GBPgV4VYJX.q#Da0>[85!&SD*GI][52PuT>`P;4el.=6pq.&KDd>!f1pAtj%R>XnUf"B8Rd.?28gUYWJlZbWEC-GpQV-G'Sg@;$4'Pun-lb`&25'eXAq;p%q?A]?P&hBs)AG,"&CG,rp>6Q`<M]7F`%T!%nKXfH3%]R*%4EuRRD*J`t2]geVt-itt[r:NkTKq9W2m`!A-`<<DZB/)LTEpu+E5D*qIBoR`c:p#AW#kSsNJ@k$V_8A>a6+@S-l:pChFEZ(&%oAS!:6>d5cO2FNe?d6)gVgEGCOd*6nBZ0k(UEhj%):5/LLL1iG;9m4N3^@2q-hHj'Vqg\j^cm5b!3J5TqEQPGk#hg*<WGinD9h16%f_S;B>F?rYr%83mBqNK"H^h^4!UZMN*_Sc3kL9;I#q5?s'F[IZ[aYL"H%+<LH;kpu\j4Y4.u53fBSC+4@Y_*-:s&cOKh*ZZ^(N!j%89BD,O5sW.]fo_p8<9$OVlET?IGemKnG!Y]&3&phV0:*n>1F)tm;''kC0ikNoZ4*u-Vg)<5Vt!3?2VY&Eu4>ScfND)fGdT^iDTdQ%Il5Fe@6hdL?YS?tO0=!0T*ul9hsgH8M!n*t>@+a55s:gQ(3hC/]0+B'>qTF]N`n:@pj@$K(S0d9YmA.?Q0&-a?AkU,s'=dbYqXd`%V"QDo92=.^d#=.&Xif&I+uFe&-9SgO_SfI(ksU6nn.-.e8%HslA(D>C.!dPYiMqif1<rth>O_;"\Z'A*(.qK;cQU7G,DGh,qsY\f%T:/>HNoc8.`,_B%dptN=F!m$j2<`5FonF?4n-=7!e5Ob>"N-X_cF)@#q6#!giSl!aI2E<gnD%Nt/F2=tC!TfM.HJNkR:XauK4SKS%,[$aB`8L"FBh-:.36TRh"\G8T<VPIbaS2>Cht_9FQLeC*/'Ylm0!piRT^8/K<DVk]Y`o5$WAdd>>dd-_)BU92oZgLU0#H<NXOL$k%VbD_eV75SZ3@d&X_7JHXrk-C;XrG#(Ta864UUG;WV<0fK-7sUc?>o0t)U?75*LjD3Pab$dL_)E9H*9l+bph$$5/gK8lh4uK&fZ]K%#nf'gl)be!8@gbi'lm'rXh^pa=-jHHA``;LM_-'n>;9`OEkU[>l!%"u,V/7>OCVfs#eY'4RJ*`JL).iP;pIJiW1cfU[O.UrMbV'Y%:>Qs`?cg@eiQ$i*>$/F+<r0nSE:S1Ef7Gu+Xtc->UMEc:Zf#NU^"C7RoqQ0o]:kinrZuid/[2t%9>_,n)Nm[$M$HG-?3)L"qjoOl%[8p:'"gOmTd>V_7A=1Sh7bRS1.nZqTBpJlSg72d84%ZOJp7D&i&'/r8`lpdA"\hid*Z<U&#p0O-*P`U7l_0Q.k,^Cg3(hU:5nfUQ%F+%YCr+o+aQd4moS0Ss!<2mL83Hs\gIn#^3_FrCES"1u;b$II[>A6go/TdlUea:4.8_5#6@nM`h-'<R]9?b;,nk[S\A`-`\;l-k1%GO3"J?#k5ncPP&,6@0a^X&e%lRo@X7W2_*4SS.&g$64D"kNc=Taq:c#/;QA*Vlj(^D5@F(=:b9eH,Fo"BXh8&X20DE8@,m"_</+T%ML^NU&5Ruc(Q!43QtZROLa[[E!>2_XBu1OiBs3C&]4&24_^J5Yrol5E>tiNqBo4?Wq,XU3?6[-_GY/iTEO?eeSYS^a"h5:Q+%AnO%kY)Nn__c5C(/"Kg,m0qQT`@?q,V.c[""=5Cmr[</?^JK#lLoN3N?)0cfG>e<]"Wd)eEV;LTm(ZJg@SD#Q9nSs?Ku80Ro:R$d>Q,]%CW(`cHJXN^\/2O<As6A%:2pAJ7CTLdS'4c*nV\-Ric8;G/"%'sc^3JYH<7*qY*1#KTCNj4D*]E4-cSHI<W=*;jHC9M'UT'C(/hG>%CB%Qb%F9G_EJC:"G"chqZD1J?ApK0Ecg6O^fu^"H+F_RE$\GP4gZRcYXB>6Cq%MGD0ab@:1+'OqPq):gF2oD1,?G&3*g>b*<6d>S%RS5,8l+5T6ecR&>I2ur='`@L8]W5NuW0mHsHn9W]bIZ+1W[5NjKcs.G*al_3eM^6".iHERlIMXcIUT'kBe<m8cJ1M!gCpC8$-CB9%Z\9C2T`S?I<Rso_?aaF&da75,!5[$Ud20Gu%IV.dE6!P`Mg\7-bH'F5!E;4i\!hLF+Y9R"F]Mq+,X+i7qi,<u=giOQZ_/''d`Ak7%k[`0\Z*.I_!'df*.lu?[<q3+k2gNO\.s4)!5]TqBSsM@u+o9SmWK;G2=mY=8fd?Hs[X41na.4Y\#e0(mPnpR1kE<S/C.n?P9PIU'%TqSWRk!kd%h^\/JYVfPTd95MYF!@2:(0N)15F!-]3@hl"*Y"*P^UH[r`oUWK!0+un1mO.bHF9p'fSTU%O-W8Q/+;2c'^@6V[mkuM%Tma<JgqU=kdB(Rjqn4j*NaH`iHi"MeQNO>&idO(6Qd2l>]t+aF18OCCA=?jcAESV`\j<TC\<1cpD[YY=3Q!B9QQF\SXrTGbBMe_Z%_e;DUgqo4:%&X7TCNEZXZd>,6=)Y0NPr]dDgO&Ysg8C\U)<GY;QD\fgXm"S5.HnhioOHn%=i;Y[b4b2UNtkI;At^=FR:GZJb?#?r%BB1,).2,j%T?7piHL100rr(T4Q7^lIi^5GdM#l)2KjmMkUGGR%U\Sd7e5\o%KAB,GW$D.LIk16&G=kLHrVc]l7pT?/SJ?LYi88>C%,-Tu?qUrh+l3u<fa<7+f]er2^_L3n<..)Bo2?1tQnB!)Xb\s'3G'(nc@d)5NR!l(/L.&jMBgV*f^7erN`1s^+ksAG`CRX/'lqY*c%Am#9FMHf#kgk*/=)%W_nq8qVY2d/@uWLujhX"mc=gZd39ktb3F7+eRZVLV-tp2&81fhAm&6V(o&Ufl?\VMt8AeU-QR=D;>eje!ki%#MO$Q3r:Wd/Md34]R#2k>O<oYRiJbt:R8O.MNn5(8?+T*lK)FLc?*<M66KsGq,T*[5tSs2+f/?Hh.a'mge[&jKknJff?:_m:>uc@%kdug(iu7-OS53BWB3[`X:=M9l%@qJBS]uGI)EQmc3n5Y[44hgs=3rCr"o"sh1TmBL<X\>%6YBXiVlgfj[>)u:K$NL@9F[P4"eDYs%E9A-#isIi]p207:3o^Q.WJ5W3)EP'1"eBOcABPlPisIhMm_Wp1Z@:K]dR)<]g]O`e$'`uqI:a3?0m[]-11hK70=ibDjagUI>a-tK%eP(GXe7:5Coh7%.WO9uWEo!EN4#5QgA<fsU.N@L#+rbI\XVHJ6\)NV$eOKIg3qFAJ5-]!#SGO6el)`;LY^d@la;0k80'6u0P-"6%%,RnA$-e"5=S52&b*Es30B-3lfp;qLgRh\caQRA8>"]7^9+/OD6`X:/lZ9=fa]@9MFgL_slhG3r\hbn5GaL6eZI(jj/9Q/&<ZAfDA%BhoICT;M)K>?l+I[`E'WPsE81%"Z]Gla-)LKkY2B/Q`Rj<kM$PU21g5DkWAoUF4lfP"F$$hV1u;>%DAO@S2n3odAtah.->fiEA.+%-ILJF@ZWSADPg#%'ak15(0@Ra$2q_i$WUT73kj42YrcC-N_bdRdF\Q973.b0mEkMm^'EKpWE&(Qa%TYi/]8NO5Y?M:]]]Z*)Sb?i%f(eX<MdRc^Bf^]4FaU&D0p[LoNQ^HE#Wk\F:5OpGc!m0f%!L0>cS=gUR2n;b^D*t2OkN;K=QYu+nJc,j>O,._O'*cq2$\J12(`4s%-bF9Qd_&m]V[KI+?%jM'5'BKbO3-`pAMe&/nPY/9Wouoef-&_pFN$TBkG(seep@3GSj'8E/^grEB$H-?WLVKNg0>NCO*U@jgs"op%MA_j_Bq_Z]@A-.c@pbkL%O9;rC4>6cYu,CDkspKbfks(>8(Pna@T?a1^*LJ"o52nkB'"":'gkTqUL+UETfh"s56aY]WVFnIgf4&Y%mjm#S625Q!6>9p7O]=R_Vfu)a@$%q9[;jr3)Y?mYd5O)/BN$PV:^V,R`Jc;5[`Z\TmS9+kica:E1*_u+YLni@42NAeV+F?n,pSTs%lfo-[G1`X7[=(M6G7XW<l9H4)+RO"F*CNsE1,:a<AS?F'A5K[Ann7D#_H4_p)-KD.=af-J)&XS"Nu53'H&d>n%e(fW8Wp4CP/sdb%l;1Eg%eG,/<h/8_r=CiCR=!A,a+2]*UFrBb[.5nT-$>Mr$Ti!<k%/3Bm_-fad,%WpPJaJfNu=Q/B!X78;<?G:oqPd1=5S#4hF:eA%:'lc_;V6AL#VN:/5GUnap<%eVeQ+h`I!hep8VQ&,`]LI_%@oud;JFAc>n<j(k<F&OS>Ghtp9'22G<r8ZiXT6)\(qPE?0gJ!qtf"O%W?+pg_sLASBY>IIK;,tBn3HYc69VW[,4<hNE-t.F:hsr0ol+*4"IpOG*_n]*`Fu=6:A&QFZ'`hB%a(UfTVTJh/$gSq@[?aVWX]ot%pFWN6M;6`0Z.n'KhnQfF.3XU2+YE>mH*#!9/%hf&<UdXG2TUa4]93QpUE;EFpV<9eGeQ+1LmaJ@E#_eN6]Ip)<5c5a1fR197:ZE$%Z1jrr"k>oS=P2.O:0X?FV7-[;1InFbFJiR3mJ1F&e+nORQi3i@oC=$%!TSX;R"fq!e5/@7R"hQ+buf;HZYm:%/6%BT*.(s#K/upP%0k5C\PX/=gjnd%CYA.DVqTZs/=UV0*"k"PD;Vup5=HNr]*NgUZmH4HaWT92Qk[p`M<9i]$\!=\VWCV_l%\PbS(YQsP?N!t4T1gb5%XWIX^OO=b^8n`en*1FJ+-6o<-I*s8STqkp?"(?0fC6l_.H>M>NSS_!X":nNd5BrPn3#Tafj`>SqL"e4u\SEXa8R-P6;E-L?oI]I(%9&[:]JqZhG]h78%r0Xm/GK>7$E$Drt7IIJ(%2(bPeO`0'=h4D^>#f4HHNI2[%pDLHUX!rk1>L`Al*AH!L3Hp.^a3g&'6Qu1dkM>G%hgrM(_%L0t=tgJm\iOU>Tf*BIG*FcnHk,A+]/<>^S/(dk`s8f#Gk%X.d*;hsq*p5:\G3`#'IRE7+1unN*n+3X@`I0jfUNb905h7_%='EuAXAF@l/,)DDQUaKi*8u"C/>)jE=a-1AaiJ8&<7f)05<QCh4&hIk@$dk0la'p&gQQN[)nMGu;ur7cf\pVRFb%JldC%]sHGscV%'m@d);2$%%<a-@g\l=$T=,Z0@eRGNGj,8Y&5a<X'po8$?W4LUj?'%(sWB,)><nJFXWIQTtU0LL'FF_AkSWTE$Q[XYEVbs_R8PC4>%jnAI<#:R0Ece0:F;gK1%G6YI.2t[E(TV^(b=cn7?YUA4W"i;Y$(2rTN#V&>OVd6et(q5]Hqb?0'o]T"$<[Gk0!mT%'[3I.Ri(3!0%<f^K>g2h2Dj]8c`hNNl/V%k3"mME@fi1s`6F.p.L9YG%HmF!Ya-Z"g+p7<d"WaN-)e7+[bCVJtHVjla(:ib9k-@&=(P-^U2_oJ>h%KMMuPR5a$T\'64>VHLFb09NS-T5a7ge\/P+.%/pL@%$7[CBYuJ1p[N)mZ4]7&k_$uhCPY6h0#V'kVb30HWS[!cGT!K9rCua-f`j1%Wp-l]ZQ6]I:2did[[M*kb/`>)YpG<UW+n@F].W6c%ouD;m=^RLX6I'saEpn8.>O+fV6c8khQiSF/'fD$Ja,MNFBZ(oqKmR4XesQf%$oRbPlrd%1gUJcbdM\RUY[]P]<\5>P.h>fXVhL;X^)X)?:90[Ukp[XIRSM$d'f3N.X/=>a5L,$EA2TpD41OS`YC8@"<`eGVQ.o?g%)0>.@eT>!&FSg%$bV:s5fO!*M>0A>*Hf0+NVNZ-F-3aX6D;BoF_NEHu@>fN[C-(`Fn;"0De*;J4abQspdjcHW2rl$eRSGAX[Mc!=%GGqCf?q/66.5\X&Y[H>[:H7.;RSM$PQ/BVpG%$hb!17a@)-$YRH=r!`RoLUi/eE(@oA+#hnB#_<X[Y3=VNVO4?eqQuD0<JJS"Ot4%SX+YDdAoI'9Q.?si02)*]FWT;Z*5PV`KfjSZr5G\-)@tH"Yu=LDjT3KSeNT$11oCQ<Bci-5-**c#"[,ga),Lh9IV%B1lTH.oB](`%&iB;(=inln*F^sl`G=o:1KBB>o"D6;;qs!<AUSg$C[O+KY;@i,gZ;+Jec'+HMse#"B]GOC4`+n8VR6"RGFBC<ogO(/<[;KfF([,I%eoi2T?ZW,Hqds^8.%IjB*a90[j)_Ahon1dtA5]mL<lWSCkm#R6Y.\UrQ?>iI0fJ,l;>$HiG?VRra5f"lc(ZD)>\U=%DVMk>)R^8Y%)!Z&!Y^UM_XSC?"*N;(0FPU[pOmFVV_]-$fZd!fjf$(.f1KbM]j_BAF02+IgDQ*7PG=/dI[s$JjO#p*#AUU7V=pX*LbHCd\f@3F+%E,h^?5DQ3#FPE=4cTp9HZ0mp)j!Hk"E+`Akf#m<seV1CL7hijZ(WKM0qPf"DZ\#c9ALe9ed8e9I*CDU:V9@#"g1/?!XnuFap/$CN%k#N9R^i(Qd1oV^>h*'9^<putFY"X+C*6+3#\iSUUL(=ZmKa`]WT:P=f:T\rD^*e-mYoVb_ToE!.G?V,grTmP1.GSF@ECB?"<%3aS%Pp[PT/S1"jaB"!'Ah1O8p[W.M':o)h%#!.>4FbE-IS8b=%<mOg+tQMWZQ&>@\@6dF)t)4@O*b5lY'Iq@XuGHZ2gt=:au`-WBCR*e%8JZ6SZ]Z9bs+WW.IBVotmOkWsE+eiCF0nNXdWNrL"^0R620Ls''Qs+`Tb^\kk(%BL>?FN=FfhGJ$q$@O]Z97:Q&c[jb:u0CMX+p$%C_k<U6U(f(X@9hdCiiRo@cmWVf!fE00o;/ElKe"aY&E3&Lj&[kd8s)\VnK"%=J&&"kV:mK-66-91<(UjidM_;AP>l]L@(GinoV+2%bu%OR[dTfs<-$2BG2FLH7"q3o(,<r%A#RW@6!l?bk85D-e9_q=4I':@(`!2P%EG[aO<L]LC6PLhm+K6uO0\@0b\s9rl(6C4Eo!LF%5?8&WKLM2fVLktFAfS-`j&u_ecfX!8LY:=pZ0gP&nnu;BCL#75H(--V]B\'9@A`!$Dee<?E!DF]Iu.S/e#rpN-o7V+%$Mj*>_uc7%'7VXKPb1%VQP,M,<F_RMS$S1eoEp;"Y`?/3[[2U1EDDe_n_#5=4`'l9l)Stj>h\]t<DIPE$UsI?D5nlu,t0tepUo,-/&I4)4O1<D%T`rs.6j6fk[=@O?\KB<)8sDF5>90BAA#VqV++7^cfTuWcME`NlWkO6?j^glRZI1S!'/MW=1hrQHeG^K!FA()MobXT7K]c(%cf?I+%WQXc>DV'e/^D^,Obr!TQKrVNNU=7Ma'a$U9d%e;r:thiRn+K>H/_+EW2m3r:TS]].nj54\gPmr,CZ7GXn6)"JPZCG:G3>1F7G\s*%qF^^PmM=E72j95gL=7SFh"#d&EVGZ*SiEdYX5%CCUj)EP\^p$):q)hVDM?K_OQb<rr9T6&C4.1cg1i-sI^PHXe(s2!QIhka^,FY9%XX9I3esXVq1^c[+A$OYFG$D!UWm\75<p`eMB!t'J;k!@(,!].PL;LJ)IF$*=Fq5M<B.TL[D3-NbogBTBj_=js]//?BAITs]/hQau%)-IHAbt(@(XoaLjFnP**lM@ejh3mh2g2Zpd;>7)1DOf6W4=/$?Wpj*aKL6+Jn42^CX#rZ$gV3KgNtT`Rm@,2M0t4AtD0E)T5r-V0%5!QJ?@k?5iR78d,1Z_bZ((^3Q[A@We82mnP=3XW5%:bj/C7&mPI@(jSPml5.%G8OtGM-r]S1O#*m^L]fWh;`#oFJR>OKoO4V0K*N%4rH\lJY6J$l@OjW,/qY%MLfd&Y)k3>;Y_OUGG\Ip"oL&<k?t>//$jZoMJT@(8iSn)l^i0*_&J`9Ue5ig-t.UAb>LU%^:."_WTP^)%P,?'Gjmd]eRn"7F44CD/&ad=*c8=/(NUbH-PmKK-^&6JC?K<7iVLQ_=%NNs4jC\^X7<CWG-l:J/%f%#.V1%%*$;bA-D:AP(SO9.+%`R[!5WM7urWrT9Q!:lS.a*b2C)F+D^dR"\AeJ^\G\!ZFL`;5I>#.:0@WW90P!*ZA-dB<VY?=ThTNpVjX0rtE2.RqunI5A#,'J"nr%#$L%Nm<^:SnVq@?\s.-F/DRCpo%>k5!Bm6%]p)=Q7^g(j;Eeq\G3DTpChEP5+IDY-Y7KH>pU=JOVghq%+YVs+]t\TK9DMO82'Qt]%<DiRPOF'Ws_8<m7&e8*SqX&A_PfCCc47%[UiEe_hNq'UT*TCl`FKaU$]5=\*lY!e)kof`s);j^lq.qICHi:%;%CP*,ISr2#iRq%S%hWngeAJ%p`*9(9h@u"?*#LP0uqPhS:hWh#,;qg2:5ND]92Y2U)V0i0"8[CDfF0FIED?)E+f?]g,hMU]KYFeX1B6:0LrqH7,ml8e!%8_gTK8A=ab/3ZD@4EImrJ$5JFD4<BJp8U_@]o'bn#ujsooeR)#"]&jiHi4(bCZ"EdrI'%uW-R:r?9dISrV!d_ch`6NIa,rWp\GbF%"2bkQLUbrs?Vo.\ePB5`]5MtP_6&0DI2@7clY!^Al.$lBmI'Yr81cBXZgn\%qAJ2UGF5D;Z8'VEZ8KA0me&ABkh;sMh=4f9j'2KU%\;tQd97i/kj4jGF&+N]8KA=L[lGQo*k-/s2TCEQ!Cq&e<p\JUR4iiWtPsO*h?9e7Wjiq$.G-"<jEdn:Zj9+3'B=Qf'J@U/kHi8o@%k\]bJg\n9m`I3+=R"j>(qX&GJhmTesf'*X5p\J`L'q`&fonb_Vh!8U#X.M]>j&YpNmB+D[h<S_?k"%89hn=Ig]Mqc$/uLUAh<VO;%Y&B)BrUbE@G^>"]Hi;0'7LjLCT5cMDVf]&5A)FTS8`s-h/^@*m:IE+7ISsaB(?,*-q!IMBdrGQO<pVO7qAHUPh(*f-Hi6?mBkDEE%c\8]'o<`eHhfa:g?17GB/st-JH#e\/Vbb>-<kkb[%iX6hBC$JXo[mLEqADAL)_6b,hWq)W9)_jU]p4^sn+AJCZ*?;"F0D5+IULFc%g)]VSe)_FL'JNleZ?CqnnH+`V\p!gprJZ_g\r(R\Hi:=26R*5Z`^'p-&MZP=ZO96XR,ZV5p`qj+WY2p%Vq*>peW'=GZ:/n.9?L[_%[dmBPm9MMnapT_3nNmdl-6SO<-030cAL*/u_&TUZpY+R:SmC@pX5o,aW515_Ls7qB6fp;jGG\-QO4Vca2!/@>[GYLgSQ4oBdZ\r>%Gr]op<c1F1Hl"nkreRCGg5j9Ck@EFeSC++.5Ls`MI)[Q4`\9LM\f'1kFh4,;hRlj<*no\\5%p!pa4'oXn9Y'&=`M&;57:flpN,u=%3GWod#>=MYG/ZGqXtte=T/_iHoHNKE:.FF7QU^G[S+L%!/q6W.%AN<](E"Q`C,nEF'qiMXau?6To3N\8P_mU1;=6Q4M9>AJL8ZqI%7LV)upmLg=nr,a'h/j7f%_gB^nu(Q^8DLkP+`ZGG2kopUs('d@eM.YPd^!;EB6sAn_=aXkm&KhYc8E`\\Vm&$"XJ;Qi*$'B:7GBb%1=@6"TDUCrH0iQ@GZ4?G8o7<t>1[,4'@3ZLWHF@`TB;]HG3/#UX'N>n,YtUR?ElI(L?Yi$O#KhK5qKZ[p8D6f4.,Pb&/B0@JSAgR%MHGh,-'EKFjd[f@X2pjio<!:p1s,U8q2gH*V+qi#8Ehl/o8jEa4@P_q=,lmAhIQ8]%%g.gm,4JVj20PUn+Ne*[*1H_V4mgn\&?BF%^?"F^o&rCj/1tkgk?O?ZeQRq`IAG;F0bkt]i64j-a\NPoQ`#[)oNCSYL`lBN7lL>Lm>18,\%uHY/10?"rD<PJf*Jtdp^@Bp6nfO!%j0-8'liOnu]_F!Nk.;`1Re?9Q4O>>?_k4gol1A'Qe,<Gt"s;N,p:T?l!:RK=;'.Om&g)AZ%gpUbpqS8,E)61E:@V1Hrb-O2&0DIh%#QBq@89f+6`fuXO`XsNrk*7g,Hj"cj!KN:\r:3A$'S1]@ng5N+6_K%-)-MqV6Ki3@lb!&Q'`5W;E_X,<dZ;-=7>5daU>i1^.(95[%;(ks8rS/%\fQa]'D;qaH\%S,0&r.o(n@@lp?FM:jGhV]HV]g78eJEaZ!ZVokI?G^>dl(=5OtZ)!aIX%U-ZY=`b;"!iWJY"^;($H)%<->8,<4";_G"]of-%j6Sg3\=p`%LL'2nA^1ho3hjpIj6a9(MRh-oY?efNeCFnOjM%OF,fU#Y]K-M+spN]g+d?,:DZJi_,9l-:"if%N:NU<pEBObqXoKe^kYO"lBD5^)FdR?;6Gi'QRqFl-%N$r6D%0^j71lrlT;iL0DCYYG:t*W2IGYGDb7rT,2Ubc;\d^.Q-o0qkU7P_%F,l84^<9:S6Vjl8)`3HFR\MG\D$]*6a+B\\4-_)m-%@HfG-5VfJBrS(S+3DMqZt2"I!Yc1jZaKZZ.L\Q[sOM(eCZScSbI/EHIU-o%Fl$NoQb*1_,I4LeUfW.QO:tkNA*$VP3h^?3,t#rqs3'WDO5u1sE`BR24^,OX3=BUV..gI.\A'X2hQMs?-0@)`)4bq,M\>X\:bO1l%mV,B)Wk*_JT?L@m*oSk8&JT9f2!brXHX<Dn_[kaN!"#n<^:pl9Bi#ea2h"\MP]YlR9(A1@n29XmPUCV'k.$Df_]ReR&nn@1EO@iJ%b$Mk@H=47.::K4scM@t;;m2YC,uC^^r%o)eTEh:]C_T9p&873laQ*])c0J[Jj``ti"uop)YR5TJ]rI:ooOqPXI33H4VGJr+&(SPK%,hE:qH^X'a9-r[h,BSq4INo?X8T<*R<pj6"OI0GiBgs2JFb^PcBl:Fp86/Nl_;\I@5sRY/!eGQN:X4_UU$qjiqTXX-MA;%#30#Lj%9(Y&\e9b"J+ZBu_qHpqpdrahD#Uurh\1?!kmhbeiOt&I+]K)"jM5s7Z$q,j*\nQ0;AtIILV@%l)#p<UC;IhYSWJ"'f0=Q2T2pu46%?+LVfr]6<ipEQuuTQ4R#E"XA.P?KS<m,sS$@>LGf?oX\J&6HeM\*O9:r7#]j=B+_26?YgnX!X[pK;/g+Si!e1N&qp^TP8<@O%)A]%YH>M_.tqSu\8%;V9#YiWUpaV=\R363:*`!5[i>U5ik\iEpk\ONT?LGWr-XhsVCWY^X?"EQEYU*]Ee8]gi"OHmGjm'l\OG"DQ4IrZ%H!DMbZC&\+Y>V60F-=3fENPdMQ)2W9DkKq[$s<4P"`QFI_Toln)CjV>,:N8rk:sVoDJtn.Y3tuR3"LZ%nX"e]f5VY$Ar5m1hLCq"%<B+"\Tt8;i/!^0Q2_Pc8Y5+/V6*BPq?5:::cp/[=9X%N;M#l;NKQE3FVFW=qF/^)@p;<7/]K<[g>&`83_Q;g1;0VeT%TB@Ve08"Q%>`e#GL(ianeudhs>hMlnf2-JL!ML_+nj%.BK%+c]'5WZ`oI5T)1E62WPt;_$)]97l_+6(F;jTo.jc$4(``D0[WW=o--#u;7?S_]S%[>8qG3Ts#B:ATDZ+_,P08qOVL93<3AE,u5E_9jBg7P8tR\9blF"3pf`^SsjKQTs5*TAZd<',i3A^k0/7"W64RppPifD`N3.,3,KF%Fcc`BR7h1oW[jksb8EF)5d4%AeenAA72dMj!dF(\FYo@SX/sm6X>o."c"bpcc$S>'mdh-+q03AnPTbktAM#lFA;c98:R:?6HPI-i%E%?Ts(suf(OF)279EW>LF'HaCZH2#J>F4UCY$qb8U;i/#D1j?mPLq@q&5k-%>MB%HaIU"u9'L^4;&TO.G4s65b#8U;]=c3/a.Imt%ju[Dil5cCOf,W.8-W)0Eb]sb^Mt><Ic&G0bLoc0F?UGlEd$V.s)aI09onH.I$jtKQaF1qV/ZVB\9$08/-Yo-Yd+mA#l&.(?8%r;m%h4M"X\e$.o+ls7p<[upAjkLt/(/'@t?[45*oB*j!nP8)1fUIN8Q`d!d!dSfFhf\+`D8Vk'#_!il/?22_pEs2U\bl%(o&[_ljP$+>%]fC*@Ee@a%U)+UgnX1's8@X4#lmcQdl$QTV?9*&(^5u?8d>HJq?QuP$58rEIa?9o4+Wq_Aj1KDi,(a)FM`NlZ9>L<\Mr7]#Sn!A'%gd2V7PWj::(M2MVN%]GeF6JCXA+Ra'>;%Pn<lmej@S3lEpr4F9nH6>G1]ufNRQta8X"2I7oe3W/A=N*8I>qZiloECpOMsqen=gKj%m&(M!=c*#.XJi2CkVg`P'dtS6&qsXHUb)sA1m:-2r;-FO_$M#'$\eZ5n]fo5ecmPA=WY0l$,jU^Ec,@@C1hC(2=gZmE)K3sS&W0'%;(nN+6H,D.bb+96M-N5$60)41`CO@9##aM*.NGuA.]H5nr,T&j/67UE0tq(lNh=IfYL(>#0tI.cfQQ;5XY71$onGH;BM*QQG)XDK%+ZGqsmGs2cI2?N\@A4f`PdZIg<9%aS(;muO7EFMf[NpI@]D<ZD(2)Z0XP/9r]s!*1TAO?li1dO9>U`V*B(g9+Jg=E`rPCItG!>!\%ZW6'jO_EFF!!<uH>E-U4"E,U3<Ua3GMP8Jolk91r-qLo.GH"`$`?^%trlJ@ipOhi.LP8RH&M'R&NM:5a$$f,j98aj-p^"5V1'r>;%eBE3?Sp]^_nO$r26WfR=p7R.WOqi3Z[uVX9TDfc"'J^HV/(BKJH9>cW-U5E?'J1]2HF8qfk@e5*`a2<K$^_mXF(B1K+?M,g0b+Hj%]N#jfj-X_5;sB9g5i6VcN?!4m.toE<#YGM7?u?Rr!gHTj_EmG:4P@IU$E2Hg9?`U>p.;oq@Q'3\FLa6B5U=eY=6sE4JiW.J)<a_!%>*TPZaHXNcP)9:p703e,Rn_hr2r<(&$Lg.89RK"07(]lp];T;&f>f2kcTQRnHf`OYAN7k`qP_tA@Y,l+ECU'$e#KiElD)e+>#l`Y%'.PZ8Wt9Nj#i7?0B%_fro'h[g/k_u%n/$>S\<oZThf+r]dDof5oZ\JnMki`9VflGi.H08&I5qVEX32L9*O67op_cI&R9<@%QOdD`%gt5.JH*HSok4#ODPL;sc#Y+5_BG6Esi+6e9NZW^CXLZ?K]gQ-QQ2!;Yb/K5YZrH39UFma^8g%$Vc1mhc(CQ:/"RuDM[%FCB^oNP?%=7S@&0bBsSm;V2`MF%Q];s!F5gdOCTl[gZP<Cgj$#k0)n6``bXMq<%2H_AV)XT]bo004Jdq!I$1q!FJ8Yul)8Pu`s^!PPI*Mdnm"%&bhc2>7WdR>M.?`7OOoXO88`<e,(*["rDY:1_=2=1@)-%OL1.iPC<("GRk7-QoIEsgX5'(]M<%MYL$H$2[85cF2FPC*EnX4k`KtW%45-iXKMQ9*5:[8RG"Wg%E\)egmK@SXs87cMKRp_G-[0JSFVLgRO#F1jO\:f?+.*60H/mb'BQu$_iC2#pea`3o`)>5uPRVsS#L.`)%/;OET(*IE?ngFekhm;3n$(9:RNgYE.;0BU^?Xs0JPX!+b,)#?t"X[KU"R08T,WTg3f[j%0Ee*TmDQS02cF`Bd'<:MPU[NP\#m%fD%*2"LJ1P(H5;G3+UN#?g/9tQ@r0^F7[\<.N\UC6MX3N`I:q1-LSY7"SpZO[OjbJ,_]GO#=fP[[5hmXX&9Z.T<;>Ik=_pSjf2;LCrR%4/)M#fmE2$2OYqAp^4M9A.t1b3Ij@C$RDI_,SNU#-5[CSr:@Po\#R#dVIq`K7_u_"h=L"/X<5((e'ld>]&L3ecI\;CG3-qqQp5-u%IjRZMh/WbC9.JElT<\/s\0'tW3"/:$AKnaB\Jf4kPK?::0Jag7668Qk(C+\mfP4Y+\,6a.djN\.F%%hOA>2ePOar/"*DknYn1J%J%b0[+-E94o?Ec^OrFn,I-frBi\XKUm;2uSg0Wb1?gMRRC!;Z1e1``DJ)DV+[shB5[BCsZ6@&!CFAS\Q:^T'%?-8F1c]]Jh#naNT%e%'9Am]\/Rj&0ap46kVHDQ7XqQSDi_<-N]P9!i%;(ZSi5Z:]r`&LYD\_:OZt6dA%4^p+2W0aIMjsUfCt]WA7Kl'C0;4P7X*/'`Rkb)%DIg/E>KMrJ\9J6Z[4pHs9];)1RNrJ"(`_E_^30J.[8M>.n`&`h0\"AN/ZEc2:nh&PXuf/TEEnd'0(O5L?ZR*aE)U[WV6?N(-dEKC%@LSK\cCuLK-"1eAocI`P3)>I"aD\8pM22?-+p!tG_tE>U?J[eGO`0<*Gi$uCCd8@bIPVr0X7s6T076R<dU8I\'T;:4`7KL?_RQ$^%.D=`<:,/&3k;ohmn_nm(9Jo7]6M"Dlba2(:eOj[<]<9V!P]s1+'OqMCkXl5km`K[SPkhap.j]+/Pfptr]X%M]oAS"9dr%:5R+Yo^%lK-44mEB>=:k@Mp`?$O!i;;W>2tMs5f!9>o6rB[F=mq`/>Z"9_@`a8HG?;>S;&=Ptd@I,'PL;1He%ba#.*#Mp0.s"jT#"*PFO2J9%X-q!<>'ht!%fLM8KqERWP.pE>GJaZ3oSB"%q]Csa5dU7A$,8p@r8!%X+2.FHOD^C^%Sj:mNYSsIOhg#-b(@(Peb/LN<\))YpfMtd%"l-2Ee<XBCVNoYopWjj3Q,B9Jn3E!gY'),W8#.pK8Wkt_%j!r5^@ja(k'65Rm;<72Bm.Yq_HXTNGW>]Q7SBq;)nWusK1D![.=mU*%QLHIJa^]f-`<<d,(_O'J[&^V;K%e&(<_mZ$,*]@3<u*J&l">VDek()K@=C:>Fg=Il:WrG09aOP>9??qlI\AD]YB#,)lXil%]<ISL%mn1,^mN&Xh$W)$_K@?=`VUn]QWs0W!SLV*pEBAi0[q)q:LnAu&I`qr$PF-j)1Pmd8ne[f542s8jk#`MY()`TMLZ\/C9!F_Shu**f%4_AqlETN8C72WpD*C&ZLfOoHEnLMR(0@A[1%G"#a&]nERrKG'.dnoF_hOK_&ds7BL;S-%,Do#S'6T`&L>9bHC0Vcq`G2>HKf"oL,%[=#3_r$(\Z^:b/c2P7-j(8q4?`\fMilG@o<;J+=(-i;R3^gSqc6.[`,>\#hk3BX+7?JaDn$e[9]*l@IY4gPf@!J;=PY-m/%\pAZX%1QNL=`1OKpb9NkQY^NlFMFFBNJSf2sG&ERdk7bPjJ%317<E`hW7TeRR`(fdoW[L>g*%(HHjiZHS9hMFZ+8B((-b"6rM6I!A'X3Y3%$G%mWM,h>/HEJY8c1ODb!Mk;<fl5MW8*!4^U=jB$7i:AL-s_N%%V+ImEuk:Wa@<0e)#D-*NK@u:eJq?\&`#L(63pl`I"1*0PJhrK%b:E(1k9V28="GOS\_4nX%p,qKhDVnhoB=(Xmop+ne9Tg359O6b=6&4\)/'P9LdJENm%]SlK>3ihe"L)l[YnnoNuQ>nm[!R4@19ag%`d^V&hZ^Djm4_3KbbUo<)W3;t=c[JsNfnOLHLX,"0)W7<I"@'"hr9MU@gY?Z)%e&'*!)$sjk-`<*1ah:4ab!=dZZF7J(buj1SL@e%c$Gm0abG2p3H$&/4/AFdr$k;o?XUu&\%ch.J/Urdo+J0kmU$_?)TB;XS!a?p?OmoajqHF?^\/=^2>\u1Yd/,>Ac3kG;B?]tnVLQR%"g5e7:0jK5Ii9#V&+abO:.Qg^Un4DI6)cN/g_8btMqZk)d`,[oL[jFR\L3+%@8?5KFD1;U)m9,9-AtV;./!5HA[pOU*K+i0l4M(2%&s@PDT2H(M_$WrV\A3*Gp$V@qpfF:`%:Mh%+qNmnh0X^n)ZEA9,sZo2#1os7p=f8%/k_(+/>\hLJC@mU+&r=To&DkWp_MoQWt""M%B1p<8^8'$6qP_Q(9D7:h:!K]m]EfWrh36^GE!%Z8H0Zl&amC"NnnSmZ:MW-%_]AdDAIFqrWj'%+EKp1FY;YLc+U`qK3'Ub9Pq*qK%+<&+CUcVS4$R2a7%T*$$pWh4(o@r)!7K'bYVVW',K\4tMT&-mG(8Z-WOBSQVG=?4O`;/HZ?/"K%AQT?J#XKgV*iZMi=fc_^odfo1%5`]f/YQQd^rlJb83I)#>#bLI@^DRU;bd0:LP^oLh+%_qGq$4;VN4R.0.eHYj*8HNf=o/L7jPdG!XpN_SRXl`&^EDFp3RMZ_H?f!e%Y"/a*L5LVO#$UCNf*:1\@t>?"[Y@'X<j1BQm0+/u*S>BSH@Z#Xs1iH2/U^@*31Zho&48+Kh+cfSV`>HIehN84'nt`^9_E`IVY[13%6n$')_P,T4-JSea/S3u+)UHr6&bN)%L(/9BJ3%=#Q&Xh!HADZCro8LTreCPF?mg^\Cceft,N"c=-(p3trVH*"B^HZ]qXEbY@gP@c%d3geRo\hgCUC0:QoPs"+$bP)7M>cCI@[iVA3$,6+f]q'&N;>ABCa_=+@96>i$'.r^Su-$d])'k!nt]Mi&/\1QU,7cXbraOIEO5FV%8IjE6QKBX3Nc:"_MtCiC5_"Lp)%-&7J\"^;"?F\,n1F"86\AK)p]K5K>8cKJ.D#7lg<.G/O%"ZUJkLO*`r7DAJGl8Q3l^9qaMD0e%rTmM:ifUX$\IOQ5^*SC"%-'Cs9>BZ>mcj.`I;UKPaDWE.F.@[=(jGi3Ed^<nM=.LPYh2&1AkbqOMbP``j"Mg%\[Ah2Gr!0gk#uN.%qFkUt5GF;m0KlM7B$Xg5Q\VlpdYmFijf^(V[CNkhGEHS.TM2jq=aE5)E/GtZVfr5aGr-M#L=9A'"[b4]Wiq)n,?5q:lAZBbO=kkj%jd)09C&C0*\]_L[^!bP?rOH&qX?>p7!Ma\G\Q]QKUOPF4XEj[tVXYO8Qq/sqNnL*[MFeg>#/q.*B')JCBD(P<kA*<Ro2iT+&8g^.%JG7P;s(?7T>A+?jf>UX,<3#>*Fg2?A8`bR_BMH2.m$1"K$lVsKSMFe?rtSg5m=5?/m++=*9F$")C+Z6>@;'Zp%eJYBVi.\'<AAZ=%D7D4,Lk7>`h>kg"Zg.F*_BS!C`RZNtnZc<b$Qn5"HQ/gJ/7(JV`#!F,dsX`A!=!k(`h3'&`%,!,MAsa[Y!+Nn'"I_72QncMhCiBa%Nsg$!r'W4Oj=kXJ?bXVTU[[n[lR7IhC:2lt9u4Q:"l?_M_--WOAZM\0$GUcep1q>B$b"VO2s1feGul<9k*ULmjAA9;Q$u`_m*>gr%CLE7p9jM*cgi]@Y8,h+]q[qp2lpOE@rV9P8km<pK])t<gJiG$*I)a/?/WOZk>Ftf:TA_hlEqrA9T>]i@rH%n[+.`pKrn[KW).\1L%G#k["_!TX!rDfK`j\K#;`HcPMXXJ$DPJ\?/@HI[qJ%.^%*Y1jE8?.d4n_So%r5Rn5?2+ikC4n+Pn,&Ju6&:XsT9->mE0"]@#,60T%J.b[Q@u*/m4rlIO4+Q_tWraY]X2Qh_\3?V>Qj?imYZOTlCS=+pM%Zfq$_]N/mWrRT[0[k]M)OISr9C1UpuB*6_d0Q6J6^4D9c7BX%kl;9dFa'?H4Zo#Cg#YsROXob\,PcM1cOTPLr#O[TJ&8/(:o?)YhbO/paLC2VG3CMVnEhXsip1SkUB]7?gt22hcW;.+`?npV-A#0q%b$FSNec.fd/a_]\=uLt'i3I2e*T+>i<C<&]7%jqD#9+cZ's4p1>PE.s-b!p9bkngX\u-/"5iKEt\>B!cA]of]/F2*#,@.4p*b?GT%$u:]Zj4j*2lKIguEuT(@k";>*S?b-#cXFq%5.":iTd(8t4Mm%;Gioi0VN,&1S?=d#]dfn[Ba?)l!Gpo2/ad%@*U);1H-X$7l3Q8?%8cpkXar'7$WnH"u&od3h#%\kV"&s$.F['e41F>\KC1bQ6$MOp,T_:V"M+t)q6Rugha'85GdlYqO5R5CaEQbD&fH-5T%H^T\Kk)U0%_M^*(8FQ?Q]<C''c4ch]q:54@`XR9?c=+0!>i2cP^-OD<>Qr7IXCVI+D]k\UI25,u3%8.O(WnGOEfJho=T45s3Hi+VqeSE7+LNc"%3%RBPSD&%a1t:<n[Hlq2f/[4E6dG-Fj6T5a,(2;4RRR:G+e'UuqfRI+Jn2K$F'J/ib=)74D+"uN&OYZqY0p/s#K;`m.imT8Q;V(2%+L&Va@CgEDfe%XH%uN"opn)NqB[/_pKYpO5:!Jf+Q4Q@01(2i"TO*:j!/_dpesUCJqXnS@Ib<I'b:9Hp/$#<mkT*g>-s!eT<)q/D%?[Aj4mb^Adel9!=<u(+#0:A3N<!?mB%^5_XK0Frhd`:[+`eDB^*SaD:;+90"_8Ppl%!,DB0pl?S^#;(Fp*EEp1</KK_OD*FSt2Tq%(A#J.%9f+Yl$0(:^GJVFq5'pf)'R=J<i[#IQO==2N=((+ZDq3Ie/!N4cBe`\VPE2AaSQb-)Nl@ff?rXK0Ga*A,)rIpb[=Zi#o.%4%GWa-Q)e9DG8j"0;0S:S?-B6%rU;BnV<"7UKoaHNl:2g9"Fa2nk*BB(4Nd/bih%GI&An*^V#V,%[mmfUEB%<o6CrT+S5@)0+N8r<2%9g%0!4C5@X8/4)P&uk`:A,sQ<<A#>i%+u&54ou[gEL7eXe?'GX6>$S[Qh_N-*@Pku.5\).(2$0CJGpms*8.jSY<>oqc_AKLVq'ho%$ORYPB)&JZ/6W>(T4K.II%[Se#>?bP/UOs=`VeAV]5=.1>lUfd3FD%5re^`9=,H:_bs'.b>]`aS$c[KFZ*=)X*8hOb3GfEn5:j*l%]CK#B`pc-La?k&W^Q?6_*n`=`n-f3mLg_3bHq?WMd*Iaocd2Y[U`lV/n69@HLAZ[@;cOWWU+orWO(0%$(jqL7Q6_X?:sPXc2LK9]%En/r9k#Vk;:@Q0]]8YI7HZ-^"4t7/M:_#s\?Nuhlo2!`)MF"i"FTNQjo:OcQ"7MS9SPB:u\bKRbDO:#o6`[+X>GU7m[="^$aYXd'%[[WG+IK*RB/9l=!p1$0#AP*EP>/q*W*[qd?F*P+e[D/Geq6H#GBcbT$'Qh=f[hSYnEZA:\>Y>Z<g(1G'4Wj@)'udQpKkdFW#^kZ$%_1\S6R04J\<hs8PU0n$<Mggtd5$jhCUL4:1MEFSRZ"ujKAK<uRWkY[W#'FR^*G$`f92RjjCBBlDgmWju"(]_D[dGBT"mn=eHP9Y:%a1\3JHe'.[TtO:3)ShA:"?qO4RPuP[1/W7PiLoX^I.'d7hi2Q.PJ&ou?[nZNXBP5kQZC9^dc*</6EV:fWJ(M]VL,@^DSC)(Z[J=?%K+31s)kjj@=?l.UDQ]cIkD97<%L2MH06D>TApu4T#V!0\So42^5NEJ"hc>/NPl<Cns6qQB[.TEALJUUoZ_R,a:_^b"kI<-!68Stb%+T#$:jQ-^-4u4(!H5<0[0*^7RNE'l)=bcNiRG]C(4@KWDEfr=1H^',D#6o/(^q@eJM,-e5`-SrTC'6u+ZiGt=*;7g3]iKC!)U"d>%rr<M>^=<7Dp/cmI=cY6)nA@3IR@GE.[Af_1^JLKT;j&Aj]BV2H_VD=l\q+1jk<R6QCf>E`au\]#KX*tZ;JEp>QW@7XR1Odu5hlOk%O`uaAXgXh:Yi*q6qA!$Z49k>GM^Y@/qLln6?cAc/]FQK]l&]V*5k\,-j7Me'/#7AX*G`gXS#Y<k['$=$YBA+68*F6X8b=W<lQQLG%_9>be(WIKqHo7drGBm@n5-]($D$938@D2"%W"(ui0mWHn:I_S<gq;s5*fig2IIZs4P1n4O*8XOEcr;MI*;1"-&Z%OC]rY^inrGL=%0-__g@H^#,F,,t`@N'PQD4sktWqBd(FI/6`1)CKbUG&TB0]"d_Geb3EZX-(?!ABSp"u/Wl91l]g?ff-35-/Ls#fYis!^t9BV4qR1%k@7njTr"i[.Vt2g#<BC&4%ESQr?@$VFm]j<q;U(E8$FK_"KODe7d',EFqqIZ,X&T<?mqW*Z0c70He&hKg?6GA`PlpsHcrp"qm,1.%?7361EB;bXK>[,QqCf+jmXdXf\;"UEMiADU4M%53B"fW&=>6A]EPNef!E5)s`7CM%YEN(8I_:\mDa&Sb:MTMM@']Kb&-n02h<:qQ%-MZ;)$]_a%MVM+ue[qF!:a5]:qn/e7#b?g$q(JZmXn6l%X%-sBZ'YTl&(II`^u\?tRql6Ql7.C^>N$-#cU/4=gm>Rh/8`3:X4<*S%k]Bd4kGXW!K2hp:^bRF0]S]i#+8mH+qEY]]$^k`jZ-_.<MBN?:Q@qBHq\ZW#mL76j@`;9"e2J!="Slni#6;)(Y4;!/h@&'5n&L-r%!PjN"\O6307brS!-5<a!"YJ^m@>6$ebdcMShoin[`JS0J64AmU?hk2[`DV6g*n/]Zp+m3SOajd<X=_#j<QYpGWn_X8\<P6sq_"*G%3R@h%ls7PhO(*a-?b1<EU>,l&Um1%FN.a^Gr*E/*oYIRB7BlL+;o91'pi>1h_^tT;6!:B*5/.C,jE-#e>,I4n>e]?eck_*]e?Db5%B8YeldN50BcDLbdX=g3GC)PUnQ^lCTS#,'+[jsR6JLB!'SaIPS),i@qI=AN2.\1Jqf=^"B^R[5h&h1N%8i:uPY-F1B5E^L'h:$ub%XT%=D@VT7WXqJcNc"E>9%Y*8EQ24*^\2fE99fsAlhH.8QZ!7`:Y@+D=O6#$HUX![TJ!@k*Y=AZdN:&FR\&YHH4C*o*;,b$MC&^Vm%\8T,pZ<ThY2Do*-;.GkgRO8tihm!M_Hm5Oc(eY,*f9#0$E*0Vk(5;fGO.p("]#71A34M6S@qC9q\5o*2$YjlLfCgnI"bU=P()7TW%!4#?g044.Z/A$(EPZ*_jQZ9NMkI_4$qcj5KE]8\@(q./0r+d-sN.cTF)7j!Pa2EqdYEEnkp:=1UR9e?.f3EuI^.>H6X"&CEKpa-/%+KZA53;iUmX3>[flC#ZrF+jj?].?k.^ZE.caXMcjdp@dClmT\H23@YemgeIW*^U'hSCY;_@p)ILca=<Q5-(MrAQr31T+3J9C%YFu%m3QMKDiem's%Xq6+>N:oS3q9(N@caCr"nh&C288._a[FFpgj326^#<CEAQ@Y=XF@C!n0KY'G3E,:\Kn4L<fcXZ_Q&oTBg780#<6e%I?sG:8"LZA9[j`fj;1Jgc70co=)E&8(>(BgZ\.@XYGKpOlbtdUbmN1'9m+\qZW$/)m$uY*+:.hhli,ZN(.$I:(k9PqSZ'(BflH<C%J;V^iE]BqlWJ44s/m>FfR%eX*97<KsWjI==VZ?VLm>1V[^=Sk->FGL?A]*s9ePKIq`IcoQg4J)Y9*n=B=D+hri&9qpQ3:sbaa94t%jI1th!0H5K=$Kac:gJ7mkd_&dZU-EIm4:.``"o=3`j4=S;ejP>jGdC;3AGN)a2+MC>LnSaG^`;a7A2k^4V]hCkW3NWL`&f\S'\\4%i+$Q0)*ESDFr2)jV-7SP]H3.n<7V/XF1qh`H`Me(ei'@UoUR"2Ib]2BkCtN5&[R+H/E=uM`8"bEe].8S&Z!I&K+RX2@]o4sY(6X]%$,5\*l!^\.WqBksJ,qd95+E59jBDJL6"gj_I_q!+VC1=PfQ)iJM&9rA^^-lTTY#;5fm*NNeE4_T:"e1PCS29de1PmWJ_DkF(HIjo%URp'#Y*$tZJV=C!p&^PL?$DQW/a`>Gh;dj[&R'(',>Y&:_X8jXbG=;\hoD)74HR?NYJrbR_'2_X7SSDKKA^O89>8co)Vifef9JWp%^>EV"XE3]@'O9^@^`nV\;N92LoG$n>6cqH$lOlu7VQLG/egm*j;B5$^@8Ss,cUf:bcrt)l0ODcjRja!N;iOa9g<#+qdNU@_2m9&q%lEF!d6'Jp/>UiJr_Be4$:$!]eR`gC<^WXM.['q&`/P[cd$G<'#VgDmK\VLNT2#/Y%/<%9*(.`L*pccY'\lfe7K1;4P23VYb-<N<h%m=W0.D^iB,!-d#q$Vp@bkhT]"*cEJH'FmcIOIn!V-V&Yei&3Q2:s;'rnC\:P#HUjEJ?j1-]qT,*DCV1@5CPU*`G"ih/Y+k+62SJA%_HjV?#mCnO/e;.lbHaPc`Y?b&gb#'tr#c`gN7g[[Jn!XDJ)(0Oqf3&SG0N;Z[YgbuF\uWB='82X?<'3>NZfCJ+;G=EFb/dYf.nO@%,n!L5[kj3LeB)?q+tMqsVo=RN6W6=&.5N3&VGma(jJJhf]3qdM9c;&-N;8b/?,MA)!P*Uq*$Va#F:HiO4>nNbeseldN4UgM[GgAA%P1=M"Gd6urf/at13b".d861En6FCbO*?6[=a>M>Z:KG%Q2'6ecps<c_3L@(X;0$X4p2TdPjJ%e)rIIcsr_'XU7rkV8/HrpMR>^4U%a(lj_&@p7B<L)BXU0HFX`k5jZd$>O3>h)_fF#Buc'SNpm&[`0pn#^o5<!9<bXXUa2#O2^tiG/RTWBD[250b3B$1Pb/iWeK;=@`7]%o6r5<Z@@?'a=J9s/*PU_T#c$F4,KJkmJO.WWlX$7k'm[EHs2#S1a5$@q#SWFMc=tOGC?D`L=%#68]me3?GSILWdl))Wk//V_*_Se%j-YC%/4QApomLFd9ZIPBr6)QOKKg-NIkOeeYtJ;b3+bL#9A_TorlXXUM<s;jd4S2e#5p>ocXDC%gbH\K9nSHD30b)Y)6,5E+_]AZ%%`4H6``au5m]fm^iWMe3o/?NN]RY/P-_SKa$ZZGkV%t[flPL/M!ce)\9*N!)+_3$\1g1,9[qMI@D]8nq<YgsuANiPsUr&i:I`"12%JA.FHl@?o`[.djJ*,#;<1Uo5no*5JoLpOEP/rk23r.1:3&`S"UB)r#h3ds";H?UKhk"m&fi@*^-8Ph6BacL\$d1fdtDKW1DkO_V.%UJSl8UO-esn[L",4K:1iN]:VZD8P6"Q@enJ8)3f[R8TG-/XT*pOXg*@!_7X=m=FaZWQj_EZKG'h"o#:5*5W<V=UdGu(8BBbM2>"s%64mk8f(tanic16jpaDSaZo4eE7Qu`D2/S4C=s/-1$Lt`j8m7hO,A0``BpC,9nh-dt[R06tcIeqT]Yi:-RJC7u>Bf&lf]jA;)i.9:%4e^kWRi'8Z5uqO0r7::t_D\[1-KSA&=4ej#f?hDs<+-_G>r+A/O^P8[8L%bH3)<sEh3X$;o[nB8!H<W.&4\</5H`.8%ZIo-UZ"'A%f&65pRTA1d)5rGs\QAJPL9j^Z^ll8K`P$S46He0-6@!VeTf^kShM".O^W!m4EteCi06Q5`2a=S>6rMq;=;1?LX4[OK2oiJ)`02Rb%RU@$L#eo'D^&c#_K4Q4AkWV;]oiU"MOBBRfeGC/R;!&jXHSK3LQt]pA'eWPHf9g8ZLo8/ucm0+A'H@@6NP[-[=+<?K;/!s:`C@E;%M^LK]HeeaILD'O]`pjE4rGq5BM.2:#nloS5"n_WYlRG?]6FSU/bGi:,qALq]cZhS&kgWIU#5Tk=Ijr9f@T&WhPoo(4&5geYk#+W$%f=1GtS\&S+!iC3L6YE1q$8@4.4Ef+hosQ3(Pmie-Zf>$o,cMHK3jR="4>1'BFT`Ge&4!UTpgd+OYY>:::+WYEe]7>WA]WgKH*5f$%-8pFWO=)$.$GctSkUn-n^;Qq*JRV5dQ(;+)ho!,-hL))M/(.jT.?]9%]&P'>.,8,&hshO)o#'X9F,/qdKX+d#1qA.Yo&0SWVM[CH%fCp-bKQkt"$V]4sB89g-/6-()>'jec`3b^P$1*hs1,uto6,j+/^:TA#'G)r.mPstc1ftCUlu.5F>g&6^mDTnPD+PcVhM!f6Pkd:P%W[EKDi-!oV1(8`D/,q416)4s58nNb'D8<JoqNqkZoBG$7*\Q64?jKZ0W7ujuP%'dj;E\WF[+,/qeLkjh0476Th$*p*@`i;9O:bo5%;DUWja<`JX.b]j>HIt9Z]tTf-+2P%F;t^"[Zij)uCD8_fQN0?d4RL9)I!pIOdSg3<9,Uk2CmcRDOSfUZoP51j5_Q91NZ"#;.=u/D%4qL*QQV%5]Cjd?[jmq#qoA;;*")143UD^W=NsMQG'1QKH7YT6K<W.\a]o3Ll1Lg#!$D^O:^DNRfL!^H`mZ=N:+jQ>iXqemb>Q!NA%Sb9;`-QUKY8Qe!>4`RkqTaM\`;'m=Z>kolU"ABk&fb+&4e.Drt*@JXFKH2C'!^Y8NE#f@2h'hn<&2_/8TIiG=LeF(=-sN,j798:n%-n`@)D029u[Jo/`q#P9:U+$R<;Ijbr[9V/CDfR]e[9%I;LURm1QUXUMNko\OaHQQfh[\.&pRJNl'#/4S="hVUQDKotQWr0&pg[a%%:/e^8]@CT)F)0qVf0"@JR(1C/.UBan8Vq#tN*egu7f8nAIi5_Gd-jA]pqIlA4:!lim!9[.o0^ZdQ-<N,X6s?hO8f;>Et;!NRlW#$%lR5*]Q+P:$$[!?uFd@g@*N;>ZjNYg@QX9JHman)-7AfSH66H)R34iO,J,7M&8$Odj']=C]^C74aFo/H+"DpU(8BKl\QJS?5?P3b$%Vh=;Hc3#G__p:KNd6.llrckWB?.OJh>3bAM8ri^0q3KqobTmCf&5F+^Z\NW)-=':FB>=@54km/I%+5SWMs.9<UUkpQ\rQTX=V(XU%/a_p'6M8^=BPCbSEgf1YAH(M84d[6%\nQ9E`tZET#SYWB%:7jpM1r+]mN75Xo59!lA&RtpLtP'f8;nKK5d7[K9p-o5hl2'HR=s3N%DQ3E(2OX7j+?hJ2O,+WZ.R)UV6Uo/e<t182J*F>1BL8cY7<]Hg-4<7dN)M2Ie!ZYWbOk;hV,FD3W+C:<R..-bc6hR-errlVQg)=+%Sb4>(N(9,sq/o;PQh9k>Sk=6!Usj9&mGu;Lf&\>)7eb<&-(O'"(88\s!3$,"e?92Z0TFk7MfS\[F';bAW+4%,f`ZHB?=KeVgQ0#l%bg"h<Q^JI.(8-.TO`HfD>?8@O`HILEMr4CQJnG<!A.E1E\l@DRpAOO.djFeq8)2Fu;k$#7WbV.`W.[&[N%;=WbU4l<+pZ\6>XSN!%@C)aAoPWi,K5JOj2Cp#@^e*p/+s^%72\FINA!P9SG]n_FB@QAG>Qs35?a+WZlO/hu_Q@FF7TaCo9"N0<D)J)sCfed4__@i1DtVF1%j)"s;dOhI"iLkIA9rreZ#>XC/)I>0LYkeeV[/*X&C"^^L$X_Gnn-tBh_RBq2U#ML_WD0e*WjL;`HJd4/%\cX^M5qIshRP*LN[_u-%,>,@.7GZP'c&DU!<)mTmY1F3dWNf-NW=\KqM@^aeM^d_(k:K"=@kKo9\r`ZPZIScpYl$?82];(c1&KUre$bYE??>CLo/OT8C\,o)%L9+_0pJ?YsGptI_@h!]a\S$d@lCEB&`5Bk+GNnu'\P6LFGkRu?WaUIAC(\W0\T(Cp>%s5;-PcTFr`T2(O=.kXW'4ca-EdA2NCp:i%lTYWTr_7oi19^b8pFR&T;SD5C`_l>#?U]im&k=R&3,0&h-oA'C"Jq7giDN6l<Hfk>hQF(tU2[Nid4i58?Hk(1VAR$:(jFA=TVklp%)S'FO1=/rN!f`W@d:Jus0]j*)i"?H&)t0SFOA^2E9Q'<-,^,061#+6f[eA9aYg,e[?OO0VrMjOt`V((*keUoiT-nueN+);V[%TDX%bScND+>K"fj.MqO%eO,P.uSV>_5uhgAoS1/o@L<.M=ltt@`7P%UTpE7b%bBN(?[ZYViT"/^Ep>;Wt<;-Nlub4>7/'rg\aGr0so)k%R.X:!m>)M@7qXtNn(VsB-RI?-f<fju=JmPK<UW6O%lij$-8<@il;equPDoic_#u.(kfsuKnBBHA#+902!O/`WDMfIO^;]'Ab2%cZ%`/>sR4#JUtgGt>!481Bd_D:H;=J"Og)o8>Edh(,fY4X=I>),Pna0f\[[-^=kHpd"]3=JaOE,1AJ8t-13I'1H_AajdHbr,T'VoCX?%U;"qj)Zj3C(b>Y*(jFLO*aTKQ(Kr3Y8\T:S2EH6OFM>,kb"OW"Da%T+:ju*5,OFKK>8h0u4Oi?2/XfelVlnQR.s\=)h-S1P)J*TY%pl%dAS!m-0$*ZH&mim_@H'+k:N#!`jqI_3O1bjoELf]XKVc.6e_c3Z1@HG(u'[+ITgOp%3Jri*K,gYp#`foY5)jr'lR7gXnq&HjA%c>HZUm8^*2l-=0=_@e:Lm;Db)0nd)G.-"J_pBoBXFHgEORm6B4-*335XCfeN9>'==/$/&deRO.;ldFII#K`3UCm;>L@_XnDG#;O6%hG#l2Z_.T167k^_1P1MMGNfJfSeJ0oXmTf>BC,?fN$rI:nsM1daEA.7ALObd(B<H0$i!dn&6EWn=CGri6)QU*M[opIs'AWne^K+7%D=G$"<V^gO\k!"qiT+ps>HIF$eh4FT2[J8C?V&Mn5g!Cd$)hH_;,2iBWAg*%O)ot)pomUIBL%VZ!unjk3?G<dQ%_l@=ET;X62#il%:Z>lI3F]L4XFK^Y`D.n,#JXGI%lcbsdCN!U1sh`.nsgro69gI+a)X$ag;)W'(:5O0:Lk?Pr)\Q<B.UE@;7o$[mn3aGHT<XXiWjlN%49k`[FF@!!_6=ql*4O4&$pC8mi[6ZO+E%PB0A#smX2&>M)B8g,KY3R)Yb9%X>N&]2nUUna1-s+e?RrM<Knm3pi&Aka+_[nI2(\qD%(nOO];g"*:TP4nha"je_r%BsT_,m8T;&h.(]q<p_7FK!cD(LBE/[K2"Tf>(DHBfY+N<-aSP$/u4(#i7VrL5g[_l>C$WcuUrA]u\>%!CK(d]i4]l=;=UDLAknpe(;F[:<CEH3<Jl$c\-6@A9?;b3KoXMXtru;0,2lf>c68##!r0A')S.*qKbH:4k7IC#(--tGjm%Il4&LH%Q,9L\6G:4L[?l[FOX3ZZoiXS]mCp&]<M,>>-S^/@gbXLuo`/+6dV58XCC:>YW3)f'X8i<8]'bi.5PNgS)/ucd2=9CFY!RC7.&5c8%caphe/8cZ=AQ,XFpFFD+nbP!o#mN=-7l:fd49m3XnW1Q32@J3fFJE\-G&>rLAnKi8b(Go66>T-2:B,ZW7T<uVc"9.TS"m<X^3/:b%J]?`S)(DjU/6rZs1Do`u@PcPO"Cl4HahS\2Atn[Ydq1B[lZlqt;ua+kl-!Z?\SqH"9_0E'Akp)LIBOGMs'+VCJQYCeLu:0j0Ng',%oeshT3rO?K`f>qaQ[^k:Gg/8T6&dX@5C:$IX2t`eoCmLS^j6dF-tV?\[S9lT.mf^4(\J]CqG24W>ad$fJ8j@HS&0E;EPR`<#&$rR%<tI"k6%jN,mGP92I>`Bi2q2.!WL5^Gl]F.un<S/M1_'P0DJGsN+pN6#,<aX<(A*i285q,th;C%OZC.?"0l'%TVloYg>S0F?Xn*:g%;+4]Q82Ir*AWY.:.k#:d@.CDi:$aKs&Sc>d?T:/Np2`[?dS+ObWF9<kX&FnVrs26Bp%^C`(_#/+>P$tmb:2INGDmUbL\ZLHO_lb8%U4@fPB[%_D'+<<kS\5@4E!*);V585,ofa+3UhSk\><Zoa)/Zlb1s0X@HEdEdI6,dbMs260Fak*>`qNVpOh*bBRONV01YfbmjK\6+%7i%;0Adi!5hD`_sL@CW<clkPOEtNdT3j1i%F=,(E>VmWU_e-[2nN=/aiK+(AS;%)b-P+,f":)@f=\h%lopWLH$^/AGKaVq.[%Wo`%&J/e*=hr#/['E`E;=qYnjmZ.iB1,((&P+-Roe1(R[9=IK1(p2S\H[e7,LY;Wb?<IbpH,W6&8hu>-`;"2blC.0$`+kj"\hM6=gLs.%Of)A,>7kHg/SUOX]h-=R=;`0i>k1K+*+?_8jmQ/mB=6PO-crcaq*\ihbAng$ZJ,Q=_;:W@BG;)<GdXUZX*eam8K3QQYFI.\BP'G_%X&^mRh*EYfRYU6dMFAkN#]JjC\<`*eO:'%MEeLVtf>l,SaG8P]k]Hoci9O!h77h=^Cp.k9e_W!D.HFM?0(CRU<_lQOII2+2ghQkc%%]8Z<YQCdBbZ>q_#c+'AQObXON4PAYMXn(HKcrnidf@`J[R;$4V<ss<1pMj`?LSl.Jo&\CaP>$)MsJT@.S:08k_C[>;J_cBd42q.%cYI9>cF+;PW1eBOV*Y*I7fu&5f.[WD*@WsB)L!,t,INSIp-j=-g10[q^Wu_`E,;9NhPM$)b@"-CnXh6ugB.Dc],]%EAqk8tW&e4J%eJ?Z[5*e)n*%306.J30Q]hs#V4_df]*h9K$*,$8C%_ip8$+Z32JSmtX[C'%<$H"DW*1rO^NF+=V*pE<?XW4eM^mK9$V3donlC`f^%dn8QC%(l3Qopcr*)8`snq*l[DI(7KgA295#nFY;b$>8kj?;#!6D.)kRN?us48knHJo.$11@m4Yu.RAp%16i8UFkj;r^FGKJP2>+#%!34dR%",#H@5AdASQ,i_fu^5HT8=$^K,+ZtR=7"lqM4g[m>_Yb.I8b;!/B:ToL"k:eK5B%-;ME+_\[C/Y#3d6bkuPo`\O\oT'HdM%^u"Vs<;76kb3j&DgD?a3CFFM5(G7e]psU;9$j=m'"$'*%B6YXC^_ppgmnEhL]s=_FDJe'*7!,(q0#Vl$:!*8SMJpl7k-in<bABPZ%J#RpPUlT73(L/Lp+%/i#Nb+N`#h9@Nr1PP<^]YR%3UL^afB9%lX=mUEr.R1$SM+ErOK+V8]4j%>Nq8]k61qm(aq<>4?!0*<jN0pD%(odMIL08;/?9^GeJ[ffL<0-0!Ja"Ie_sHL`CdA-)ET@ZPAd_3G2t%BYqYlht62a)fp"p,A8"?XZ1/@LP3YDq8ARJ!TjS/kMO-c1V%s*cA4oL)&F7p<MU<]Z@_Yb?=@;R2mb31`>R)q$DiSj+0K1k^4ch2rfhn#BG>E&QS-A(E[:hiHqR-#7F_`q(!4\B1hVlIa(SA0OVl%_NrB\'S$,HM=D*NWqm.XjQ4Jf,tA#4g0Q+b)Ii=e_mJ:DC2Q4J8th'Oq/ce-fkHieRB_q<L3B!9#pmb]ENtMm#Zd=\p%*Oh[nPDs%*]g*bAHOfJs(*Ih0tlpNi`SBsOFD@e'LhRIjI_k937.TrQ,Q&9r7p#$+obQh2/7e<dfIelPY)`4?iLF$XS\Aj_m-H)l(3_(lIDo,%eY8CgMlQu`qZ#=&Sq0Z2R'Ag!h$);flBo#YL,4bU2A^4TbPE0Aa21/jj'mQJ3M(qX`uY&/Io2g5"LA87qY\TC=\IF^'DNDjflq?!%W;GgO]7s<@Y<dl;;Q`>X_l08M6p/!SgiH<mWr\-jWDEm6?qj.lgp!$9.^-sgEd+a0Q5LtfaU^EP.Oi>)_&BDIKe'H'*q:3bmn@YV%jeJHd6VmR%<$RueJCcf5lOUp=7E5L9[:,3*K%`=XB#iEIB'/,WUJV5$*`G:5&o9J)U&@foYKq=uB-HaQm:&4U7>J'&VLB:\Rq)<V%Munga,KCi86*MM_ie=kbc'b/I;oS6aViDg[MQA^Th.fe[Sa7r%QbB3FT%b8bWE^18TaFK.^;6hp-gsi.3a+ShGeSLROl\I9oSmtr%TPhB_WER#U8@cE??\XP`?QIt`/60`^>Ui?V]"-?>POjn$5>s&&`p]817d#UC1+k"MN0Q>(+bLZM4R7P@T:S@4Egr/F\M2^OFBVIj%Z]CUu5P>YK<3eBEh&.HK\`GgbiM`[F(G0(g/8\m+@MN1`k9IP%Yr5)\]IZ+hKCH/NULg^19LJ<T`j>pF01G,W'i;*$&Y?3!E+DdG%4^-7]M:OSqTR]2$lgW6C(@tfhea5DP-YE")1e&Num1KH;?lZ8P49sF;`LuAM3_D"7Le@tGjMiQOOL"D]^4J?=8p!W8T1',9.#`ff%JO*!TSL]B9)4atpD;u-u(NFFT#@p^@Z].I*?_-dXhg->`0cKujB?]H-6_"B]nNbQ2*BlTN6JXmsh#.s?oaU"?*o=k<ER(53F?2.$%9u'*TnJYZ+67=5fXUj`:2Xh>RlPm'k7obk_1n<1iHJ\Z+YF-7;Rr:u,1F'RKrcZXr;2A(Up7O44W[slCCR9TXAKLU2>&>jb#r@YP%1<RQh:j^]m'%T\0"8.P'PQe5sY(9J<GQ57[nbusq\bXZ7(/_,P1Q_97;mT-OQ,.JMiV#qL@PpQV8KD,B_Ke^VG=j'cqUd,g/,+(6%@s.J&m-%5SYu=>)KuPsMkdBpZDSir)>8RJ7-SbX1Vt&ADN+cpi0";u2H-"a,.CmOI/-GjAY`PaoMWW?Z\:=uN:3Y)q'^UC,*uf'U%c%eD_f*Dbg:Z$WIZ&jr4h]K\6L3u.db7mDb9=>fs>&tSfm9&LrAR'^+4IZjrMl4?V\!PKCMb3j8Wefo1-8,20Z)i-CPU:]?nsF0E%BVK9br"c>:#irt1Q8O,VIlnFpesb?MA&HI6XfG=MFB4*@?p-Gk8aWZ42@s!;6+l?&1q'O7(ib4A_NbB(I.d:+MqTZJ=gGK':,ePq%2lAPed."EKf0Ie-Jd*K8^if)U)6.=J4fs:Z^[I<c7[>=,@0$Vhr^$&LWqXq.'K!YMHjH5BUHUQFVma;K.+@3PC@`\So&!F\#58RX%0[<nH5/t5=T;aIhQa49"%J]mN:%Z-+$k'<GQfCM\SJC@Z^JS22_Sa8@@SjKfMeYUQ<[?s=3YR/a^kt->0fV[lSY!Cfprp!8H$dn@%/MdB-nu[7([L3LZJQ5uJ_PH>CD=4AG0Fl?qpSE&pY(d;l4eqDk`LT,8<V0nDVC3<7Or%?W_e1>,5,jLr154EW1dTlpf/H'i(2WYt%"bf:'fB5C%ft#:@ogF4lp5[jtca>'t''<o^4h1-;NDo4Bf@Q_P+shN(#`M]6.t?Hm@Kfl!l!\_28uSS$COWFfQOcl8G`Ru[+8-Y)%IUiXJI[nu@O<6K_S$60678gd<a$W*XCetQ:H*1Z>C+?N2(e;rT-['\s,L[-W*u*@>n4ZMX_o/1<+.+^iXL+<-gZ0[`cEQGWZa55A%7N5%&C<\8ORN%2_lp!Q^+%'Zg%#C()R[a*I0Zrd*eQ'5Z><@I>O3^ug26E0+X^V^R60f.mY"&^"ge-idi=<Y?J]QAD4u7Q#U9P9$%47sZbU1slU:()H$,cX!l?A$dW<CG2.kLuR/lWA(\D#.L2BKNZmB\$"oYG#R@Ut&5sS,Q,,6J2GK&`E"&_Om*E>BF%"+$%R"j\&Y0%h)L>h&:e@P\DN"k-2U289Q0!T"W(u!M-6h[OA+^BMgL<Ik2B0H@:_N]d]rd)T$%408<-Z;"q'_b!n6?0=U-Ce@rrF)kFAjW,P*Y:%3p?UK0Jb[^/BK@i9U7:*pb&9Ga!_c5:\SBHT>-[H(o[sS\6)5N'5Q9C^Iu&g\-7M3SYWl3[Fs5;7UY<t9_h,KC=gb]feWEWHh00&%KRs-96Hb0%!YgHY+0M[u;A_aA$/sE]*LJVG]bH0RMUGgWeq7mQauZB?!&$(i&/9V^?rtjZnrb0'7UgAHmf=2*5Raca19'<8io`\;%b0V%5GnJ]V/t`,`4bpPuH7OLN>A>Bfar2c.Lo"-TGh[fXa4fZ,Y,JF;WV&7dXU;Z__q`iu-Sl+$0b=5]AaDoW;5A`=0Zsks4G^ie%Y5U5W6Zf/$NY/ML'+sb9!`iq\07k#c?kn*;JWSE]"ftV3`nZVK!:+7HJ;o]^Q=4'."`.GVNm3F=fmm(Rg"8C$ed0<^g"?0*ClH;h%_WVH6"#`UUfAM+_.60emE/inq/8jVaWRcUMf5QPs]N*mo8!Sn?MbT;o)lls5Y[?1>M%q0gY4))E!:a7J/M*3tMK56i%mI1j`K:27%+?ik$D;O//`sc(0O#T;H8R^_pQWr%s:AsReG`gI]q>:$Cg#LpmiPP_r%t<e]s,5JFCL4crYX/8(e/'@/BOH7n3'PfQF]9kbCiMgV%e-Xg_":@j3M]4dL$HHe$F8+c551?L\(`M\[R(UGc,#oYS\Alm5(A@Cl"u""8Xtb$)7pA7kj&-mQ`kWYmnJ)3Bph-VrQ&qM,)ZQsu%hc[IWn?[<+9>VY\%*0ht&9D`#7:4][089N`KIVdq<HG97pBTE:,VO#N"tAoL:,OUj?J:2X=$K&Mj*5_E9:[M)8up9VelJX=/`W;o%S%uP&08YqM>30<-NL^d]Ob>kukaii+PfohlTq-#7Im&6q5.?c&nN9NjS+&d3)(KV\eWW\^H;m.39Fl%i,Rhq*cm'unH;NYD7'Z-8%.KH.`)kTq)H;$g$(tDtYYN03C<%aF&^Sm@g*N37*kke;RpD>bgVH6MVg;.86d=[YIVggl8bCmb(*j)(6q$bAuE6^OIY%^l<rf_-9%PlrC4^_icWb[,p`;^tCkH!mahOc2]E,Qc;p6i)Xl<X$U\3Z&9IkNtp$D!d$`aXgTRf%87tKFh3W)qb0r$(0Co`A;%e37rnF//t#-%PHS<qqI`DdP?oSH>7:69d#T0NY461hK:@`hA%0qd9B2;g]"7D/1mE0gkJ\o=:9+S#bL`R7g0iaRcel_L69s@aX6'=3i661"]Y;ua%rZ&<;lG^3cZ:hfLXa[e!o7O/oIKg2)%9?o/BQif>$4k0I/U]oH0R^i9-rV3hs8%0H")WtCkelL2,cb]<>fIjpG+L>hZW#Z=I:'X>%7WAB4P.Y'$Ma%4BZr"(G1cm*U(.Oa`W4Cl*M)dY!Qm>oU<,'Rc>46-,Xgs!=@RaP'&U7mGX6^_h]N<1X6=hnR?F-_*\WS)o4SAH;%0koFP(1`2IL2*L\Ku-B,Z=g,C]W>nJq)NO1D@S/9-G3r:7JZchKYU)(j>A1KFAiASc6aJ?oUTYOT;([0bGkSaI2oFn5/RqR8#kl6%VUnMC$OEaMEXQ8eQ-o&FANeVEB_@$V#)TTq7BfesH]!sJ"[ZJ6ZemJk!!\FB4$PsZm(&*U(XB6!<;%'(D;OfeR<=4K2@NX3Cfdei%^u3KrHQ6tCp(m3WbS4q>L/5n\-Id0\JD\;rCKQ.8/]quUeJsdXTh7s>+2]Q8mX0NSPdGD8`S^oX5h-]M@P5)"ql94>1K)=;p`!2O%f;1g+k[jEUf#7GRe9T_CIHoWX+kOZ7G)Jsr2TT=6PX1!B=Cj1#-VjhL$[4ABCL%kpS:fu/;]8_u%m@EXO[kCRJ?Xd,`iSa8]94nU%:6G_`T$g/TgO7q&jDbRr[^4[%ej4QscYIKWcHtD@BO]ZD2=fO#_&#<T&fm3J&hD(5XJJ[5PiQZ_kAQTHrM>q!.;CV/S"9=V@8Rpa%?>qa6.3`*Cb[YB]DEN"YPDi4.Tt-c`QP#GjA3Z&fErh,C/Ok[ta?nlT3MF)+Ydp96.]\I5oh0jN-F%$M#jH#IPgd*+]!CjN:_HW#%5B8:j9JXBZ7tIfL4:6*!?_Ue$Z-9npn)Kds/1Zcm$8YgkZY<k[JU^aYl@c&IG^'sV]>S/M2Mopf9c!<L[G@^(1)r,ge^;hB\@kB'%m2`B:J2`lPU]kCe+))eSr;FjLUViSJ%kJ:r3."thl3t:NVVlXbVWPh+N8a,RVo*9:`c]1Q_;A1B8/9eSEs8bD+.c8UMSP's3'/;K%9S'Y`k3T2Ce+gR=OfP5JF-TFF)!HW\5n?rl;?LNJ(NJ.7WV*jfYSi^Ls.H8UbW?%5GV?1-]*`Js@X#]O^j2$D0RmGDX-js.917'U%BpQ+>Q9a)4")WV+&u_2__HZuP`tEXl?AN"rj?E+J[_V-0![W7ZdM=e_9;%e\41]PdY&/$ch/XF"^jcg*jV07sO,n2m7&n&OE@laj%7*b7>$,gs(A.+of,qpSnp"0>D@gSrEgB"auku\#K;]0-SS;nm,^L`KYE&s:MaYk3pg,6Gf&AMe</T<b:5f+Q^?jiKb,uEAMe!Q^*%Q9Ys\UQ7!G3gN$g\Jei`S;nm,^Lb%pnPLig'KJ:k(-!=-+N&g!D[W(q,uC`n4<T6)6;*t^)iq?0"tY=dT,7s')e]OO7p,n5Nt&Au%:<*taiT1Bu!iKN7KPq`G]U`/67LMdMn$t)+K61@G)p*<l8)+RFSkgOb7s]EX/holJJ=*d`4M!@5Nl4%95Ag3[Xu&=jM:o)Xn1tK(%21idE1CSdKP*l8A7!F^19K-uCn+e4Ao?;Sen+e4A1ZaS6nt&W$0mg=VL3h/nOdN[J0o#FM&rE#ci5bO%a-?tQEYZcE5)I4:dWdnC%q'6TZW5pl&I3L3sHe+d^hXa;aAi_TM]]YJLbhW4R;-)dtM0UGVpO!U1RA)cPH-[k#R&,UpGWD[38^%le)9[B`,;CkNbf9=H$QSs#%hXa;aAjXe(jZT5(@`DV'T(dUFM)eZ[GrcT0iG1V&0h9b/S\E$)`,7R]M-7,f:Cq(t9Eq%U)NQO+a0f)H-8?$s`ht+;LT>"&$_G'Z%`g3"NfdM]FoTp0M9h1P;0m7ZgGgk%djtUUlN$0oc4TDAMVP?f._?N(o]]nVm1S:q7i_;q0Ql2LDB^qr5>N#OE`(UsA&`ZSUQ^If]%"eJ<0=RC=^Ggk%dAutefC:rfp'(^3b8GYp%_2?Zj94Gn(2JTnhkS!L^(AL`PAqg`u4RsA5o#CA!8f0gMJpsWu!2>qZ0H)n^XF?c&%E#\:6!Oh;e6Juh\A7@@&U[o+sSt/TIY9=HJVq96l^oEZ$<9qKfh16Ot2bN/.N)UG$[l/f,K!:40?1F"cY^G7\UmQS63]9S9@3j(U%-[q:.4Jj>n<M#^m'V9N,"U(l_l6N7.V;g-qO8*fL(km0'!!o7H=VRF&+YlC7O%u-]k2Ys@e![rfS`Ig<`JK?7ND:s(&BFI:8Mtp\%NT5YSRf28aZP++A7@f$q0L?N;d47a0Co$@fh04h+4'BG71&\]4e5EE'UMN&9QMg6LhL'*!Wfcj&2iq$e9e')[BFMc#8=B-<JRqsZ%poc,E&GdY<-Pe&3ARd22QQMug%6PXtQ3tWmWS./q_Fi5T#"&3?EN(_igu"#_oe.`)p\hU$3>`8p^Wq^\%LfbuknIjc_JsbS(c1)Q%Pa(<ZQ.2rG\eqj10_<KI%/&1u(b[3t3eqq5[fN&B=Adb8+]"h/3\KtK5+@UQ)[JVc]f^tHgL+WBg3Es$[m:iSAGfQ[6+6m4*Xpp2%e%Q9i*ad6A0_oS$E`pOLb*)H*];U!G5S?Y,7b?2eq,3>7$jq23r/-(865_=<0Fg^U`8DITJV969\m1n=O[VS<='t0DLqo&^E(g$T%2`@(>N)=W7%K<6N'oSDP:'AE.SmdRU`4A1WXR^C'57gV.VraPNo@MhT=o!gTou?kP0E6"+Ep*Co83c1tepmO7fh1f,UX#2Vd<mGh%2/f)L]A=&Yq1mQJ]UQ@B!\7I^WQ/bsl=frgNFR+J2P'U=hT`8of<6ZqceY+8)!4qS!MD.\"A8OCc`Y-bSTS/koM=$il80uo7!7;#%=G>"<O#m3QTB0WjX<hdo!pJk%e$o.!ekM\CI%u5rVu/c02C$heK5M(Gkr.1n&k"Sn=ROc*J[&4`cYep4RS99"9CSL"I&_0rg>V"e%^X98VaJ5,S6YY"_[FP]H-CBQ.HD>Yhc:k?DXh/H@^HETNr,84*kNnA6VlhZIhm@_D4"seB(FO!si1B"$0Z'8,$EmonooaRWQ`6aP%@QZ$,1nMnPRpY"_L3J,R9Aac8R&Kjt[.9Hr:R?::G9+PRO_m]sobbPo=n)Cr_;J>cq9S_<n^=`F47N^4J\b%*$d5Fps'+mU_*9U:%&#,BIT?H3`CfgAW)RZIrh=BG%O2^s<DXEPN:Ea'oE1!,U=3J?4Z.=aLYY#]I=B8T6R'A2f$&E5f^o).CF]cE<l6n/BO(F@`efV7t%<,5]PJY3Bp>CgUb<27f5/V$cfh*d9(bldk#52s2_fhRCXH]8*ALDWt.5H^#]nADhhG,AQ<V&&9U)=\A23s>0Wg2_4jF5k^rqMZ\=%kF5BgZC:/kO=@PXm"b`O/(?J7^Hn2mD</A^I\tH%O&)%=0/!cDAi'$"J*O!D_nN=bQLQ,[KYZ'Xq9hM*ZVs]ElZS-V0ml.R0lO[A%#qlfEZQ.jkjo;eN@lpibG:^_#FY$P9)ht?<(A9qaDVqn[*pt+VB!X;:1PPD2WZJh.r,01'hX9;#f154Pp[e4Sj^WIJ[SZs(?!hg"%g26TYc0]>5eX*U*[O=c%E)BC!-f_IP<jb#uq:PPT[rPK\;iXq+!:BI1$A!9DbTid/0p10NE>.#t&+J'0>s=DH>l'c-DB@=@3Fu-!%nL`b=K]Cl*>24u-HrA0o2LaD9\oQ9[JK^\`EqXWkA$,.4Y<&fF@D;:/`;!Ygqf/>ARTs@!][A+uD$^`uGB*6iBiu29Zc4AnBQ99X%IQt$ri*2&.PJ'M_pWHS]X#6o6Chg),jh0;F]3JKWU!,XfFh9m_Q?)l-k)`^-mC./r<&=.4g:Nf#rkV^bilWugQ(li3:7tehGZOsC%`tmb\AE_d#e!Ti),G)lU-X@@YR]"&mpDtm\C5$!jr`To3a@Q.4,BUTr+(P[kFUd3es5^4fTi7hZI@dX!+$,:$r1qq'QUhNWa_up_%k/B^(m)e^N6g%5q9]3`+4*_gFCg/'M<]K!_+7RSY"Rc5Gj[MF=h>sQ$fHeYfg3;+h^+]"4c&^"B-Vo`3>edVCTZ!hH+#iu@,M"Gm%'j8P@QC?!pKIjB'.g^-nWlt=:a4pDTL?7fJlE:!4C2EL)EIRj#En^dj_YJ]V\VAJk?6Q>`RJHB"4A[4U*&"?WmIk=@^\gDWOfMJW%e*!s!R<[(AHLN1*h:l8&o(l[:ZJL1=EOa*U4d(]/B^8Bt^Kl9`:>@\lhbLh9,q2-aQ&=o"2nlZNpElFI')e*4j$=`?GL\4%Re%*X%EcBs:.ss17=2(>K%G`+jB'.'.pP-2p:/"62-lk-J6MijdeI#Bs"g9E$YCIh:J?Ga'bJ2f-h"mbX)a@(*Ub8=l1!T\E[$nWimZ2^c%BEAfB*fY=5gj6!Vc+i_b4]X*S)8[\GLA%P$,Srcgjqm*q3C<b>]b(ZiLkF>M7Y?bU7&mb.i-k)8DhD4;e'2f@@A$jLe,7Z\=soI4%Ed/G;2s8&*1PeRmG(kCQPsF5YIicA@Si2aFXN?[7l%pOe)BZ#0:k;$0!%'e%!->XE-c>o5a1q4N)q,SS&nbIOWoe<um:9q?'crB!%nkAh*a=_&Fa$L\acPaSA0JSc^0^fOXf-uLrO#+4ZV^-0&R*Y%i7LZiP5o`-/_f'5kkI848WgAe.)qq/Q)\k\/>Er3farcQ$#^k9>%p4Xrmhm*D#p.@:ol`\07!s/l:<kk"YeB0XJlp1!N<SBgJBK&Y^WFk;kJ-XEh,iTU#eEIO+7*pnRSJP_m@AoMChs*/Cc2:3Dn,8O>%JfL@*Tk$!PW&`ip)SSm2['+t\cV<[+3k1[jGOTmko*71Go1>95h"qI,g4j,N,EX+REXYXaf_[qGfE!hD.gF4)a#e_dM$<Kp,M[ja%Id2+W\cqE:8+<FAAm:pJZ)FLj.lN:J8[NmoBNI`Eg=;fPV`fLNi"b</VOPB6P<;TIrHYrLP4X=SnM@k%R(e0)P\IoDPZ,<fRsmmS%9;bSbgbG@T$<.h.T@(T#oEeln3l@0XKibF+3hZ>GgUCPZVrPS2CaT+'3D03%eD^;=eDK+4a/>_ccqBSSF*g,Zo,17>%IA-rpkAd(%BuW=M1h1ET9r@H0\q'C:^m?,$%q#;*82H<AUR6Wj?(-B@@cC9ZJPkp7?tLJ#oB8sOSUE[.[J+Ur,lE`OiU_0GRt@En'P*u9!-`Hk%'(iTfA<Ka*<G=NK#ts`7')5*5nraEM!Y=Zfh0A+p^QN>YPL)A6J,+3u@il8d/`4M?p*612m8Ki1i!B:LjmMhS^O<?-m/(VSgAPp]%<Z9Hg=ie833*$h(\ohBcn1B:)+NW6p-_c(qBM9*r2Vr)f)fea[rD+`5UZNp!$o55J)&r$#:tmVph,L'Xn@V/20lUJ0+%&r_Pr7XE%,G4D"]IW$I#Jp5L0'%F@%YmWu]2EadAh<@b,aje,G78-_`kXX&nb(\5^G#Jf7VV,W7<FY%c\&k\"'^Y&r]$P/n&s+&-,ZBJqYP<K%9FNm"8UjekXkL7"dD>?GGfEY\p/;n,'lUJ"B>GWfZ1_;XX2937'nc5iSCpmA4Vi72VYiS8dW(Ob/2$DWq\erG$VY,NNt(poIufT7%Fk@a.p"Nu]V_Zh_S62lkf]?CPn)qM>dNRI+nefgGNSJ_)#*0o3kJJ6acm[t'3R3XUb;]!:N%7'jN@[2\Kn'8lWR5)"b.*^-4Zn;6%pLNWr-chMnE9^UMQ'lA*6lR)CBPPJpoJ&7!dF9RK'LTm[.@M0#oqs3JitP4ISkZ39fJl;u,OVg#`l9Hr)X/j$`l9Hr)I`=9)&oJe%C?-f!;9$U)RMpU4@ZRd6MP`k#m#*b[:=7S4HqBI?`gEXCMC?O(<MsCj@cNju,ZnE.'/0[?\rgI,/A0C)5Bu_ZO]*PP:?=2HKiM_A%<@1kd+"ON/,K1iWY.f9nc<*aaq(jf[64;CcKnkrZ'IN1;A6-%ohh9D&k'[$n@-KN7B4jH!A$uC3B.eGCG:K/=S@so<YYka\qgfO'%G/bKl)7R;]<bVf%)#MBjDqT4/<f4BUm!g/o7XdlD4&!Uq<*m$$+R+.E5Cj)eD]iQHb&_dfgm[_e!r!m.W6['QQUTdQ$bOW%:YP:;%[lUi(B6.?Y0Bt2LZK#q:INBopDEg<lZ%70t\\3K;l!42]mG!R\bPnETs5:Ze+311,RJ9;8H7&HcHSbP@[A'Wm-Dqc]g!7dbr'd=W%p/-2#IQ[OW\U+/Afd.maD0?E?CU6[?prLG'e]!%&[0q6GikMkC"[0FZRtLel([s,c9VDR\!X='-UWf%_s,[.X)W/ih<VI8`hKX:V%h>crqgSJ%ak#BI7VQ6.<N=c)_R'*:1l=sW_'k:9enrDrQB<rM(N,-b.[Q+`qT#L^Y1WdMMqsE-biVha7rZV#Vqk"$H619Mu[tk!n%qRFf;<!p%BX8dQl\UU5W?S>YI^&GZjT7).a%;k$uE_fas9iZ0So!bgkWCn)cqFgSIoB$gD\MWt<bks[`,HuWE5,)XQWT4fj^XR)Y%gW(9*4e&NPb$B8dhX?LUCb!];4.Apg*Z["+2=;.A6^]O!],KMVd#e6LomFCNEc_+bn8D7CIXf-2[iiK$n\Oe>a2?HV_ppi_&UiOm%$K"I[QN%EofRUa7!n)S8!c6/RSgh!)\BK:UeDb)[i^6RT)$qC'_k-c0CC=qPT=?%'B2m-sl\]E&C8RQRCfd6WSl#qQ7-i'EP?Sq;%/WIi;C.(]pC,oLIKu%Wt!@kF:1X\e<Qkm?l;>")@K)LK;!RER!mH+kqd<o-<VeMTj[r$n6i`V,h!3277*S5mKXQE7%_&aVLrQQR0%I$3pY'ohr8SckLUQpI2@kT*JO5&/!XX/`5;4)>mqJg<\lg*=FX)#QJ.-V`4i[[u@F*NfGsVN9a>I%E'#=LPC/UlIr#D'a,2e=Ch<%Jg<L(2p)=_ibi/XE1u)J_L'N%#:8ks:;o<X`0YPU*_rh.S6D>'@?[.!4L@;b=riZ*X"en-MS,App'?kWrcKh[-ZotNZ)t[8_dQAA%6QB.Y%[$8-qsDniG%sE,`T_(a8D%h0CX'XXY%r=%[;:#g=oV`B;npnJp`%Xop`j*N0&$i(i0J?,QqE1S/gRWs("(HeCoKq3e>8JK%XtEe[Em;5-*0jl:K%BI+Rd0`N(OoJ[_:<+t]iUQVHZe#T=-rZWFER9K`i^pKC>HM5*/39K\p&llOss[Bi^lMK]#)/.eYVj&7Q%l[%bN2fl+E]f0#pP28VtblV,jE-BXtIWj+1f&U^O(,!4<59-k'6nZ?!b.nR]gClYq@\SUfYqt#@(T8IsK#a3%W=_<0&oK]'@T+^m[)^%)V*+pQEH:bR]kRV=.A$l\,WsdLQ)O/CdcPfftkE-@l=8"^+f2V=$\:r*7=;eU_][:Qh4LN&M;8KQ<H[L/O&@*L!jB*8qS@Q#1HWl%"AMgCV*R3od2Jfe&?f&==)_KtA:O2A*KQus\+;S_.la`oF5CkS`-K$nlaFiZ*Pm$7H1FM'l>b[Pn*NO87\&'GgenrY(KQ'-?JQR,%.6+NqYut:MhB%jPi8%aJ=,LFGbcBrqkqX\Vf1_f.=c/&J&]N=<@T&(n`F`!kc3!;GM`!pep+O:EXFD)857HfV#Xbn0D5R9ls$qoA%7ODc//j1(GHEsHmQP@EfC/k^"*n4pV9nek>nsZ_Kn[T:3PW:lR1QkrAC[`J>?\&GrNo1A<rBiHt&</-,?;!/MV&In4E-b_,:4++9%)OR4#!?MBil\]N_cDdJY4@hRRj?^Q^<O0TRhU!5u7-]"B%9SAC&)t\ZRe/#t+N%ejO5Z0])C0HQP/N!c-_kASUN\N0F>ZFjiM:Eu%Rs:$s^qtDnN^ps+o'XGK&L?VW=?K->G`W9u,oDa2aulW6q/,g+cK4DrgQ2)24:%Og^aCbe'*EN@,'_Gs9_q]Ams3Nn$sQ.A@qr0_%#2/E-7sH"Q3p!m7<&JRu%htHC@-\_ARF--lmh;=*_4J*ZfdGFo-JZ51@C_>q)RL]m"`4Xc/WV5^g6uLU]B%N_O+o78#GJJTDq=,L%91=+uUIY!iWp!"&i?^P!,anobe>?m+XJ,?cH1)S:K<)NFfdN;Wf?NeeU1iM(Ml'e+*-eQN(>XYEP:q^Mc)4(<<I]j)KeF#Nq%BYR%?QqcL/_LcY?1R%=d@us5hTUakH:t&K@QA8nF!GB+?Og<1VD")ZhD't$o&U]X1W4<)@u6q6^Fbo*ZUBQ6/WhLEe#1lf[mYu:/WhBG%aDeg=dekE.QF;%Af;5rEk("bp2bUcNQH4$Yj`&0$7ao$3:rW&qe%FcZ6M$LQ#gHQ`Be3,gn@(j8HC"o'ffLot5(/m[0+i#M^-n!j%7)7^T&inAQ5tbF0YLb)0Z[0"B,sjO=HW9U&#Y.\6@2n(d7a_^M*4@eSOYlMI6YNW)NZg6708DZU-sHE#U1q;6A>irtr%7Bb*8OsG%h;M"[7(u'DcBh)K6qb6^;O=ssU4K3JhTUcAT-?W7bMhp2-lTaa/ViBTn0jb"NaXc80?5c8-C.";?PG*iD:,`I,uQS)*1AgY*mO?q%SW6;m/Wo?T3lU#Mj@Y@@>I#Q<]B""C7uL[tGVbsA_cn<RjicUbhWIATn?mX(>VUY(2!H#JBSKWL+Z,`CLHN:!>56jHC%;mr/CSq9%Ce1`F12VJ@+'GVg?g)"@[F5h(9u5@S?b#W>^aM?kaV:6dM-O@B"fE.nd?9Ep;O<!aRfhau;fFqL@j@j"\@UoFa_7.$lBZY4UM7.f%7Ll'tY!.dk\@Oeg-sHE#U1q:b/I'J(-$$ZooOoY7M'W3Ma-Xm@Q3`^`^-oE:7*,D]H_i>8Yscm1-%\)IWD^AT1/&i1C#8#BdWD`6%VDipc1eST/#LFHq*(+DJOH$'@7+&m/(/9_63kQ-$q^R1F0.E(8iQ4`MYB>*\Os4Z^iY9L?MGkd6IC'K&2s\3/+\iG>M^Q>2dC^.Q%a;R>tc$RJBRWi4qd):d'`tCfKIp4b3GDR$1=#'>\P%&+7G->?\G=euILb3rf6Ucp0(rDb"nYi@.\7.JrM_1*(MrjF]ap=I.NZg5R%/B8<j.[Isk9/J6uD:,^sH-('E&m:fFj3_]C/i"DF/<P,mOUB0q8@j_`AZoRA`)7#k/J(qk*P5AZN22lT8mio=]OM3VL>8g47aODB%l;7U-C#NugVF<%u'!Xhs`"LaHmh.Wae.UGXmh.Wa]HpI%QcO>sQQqZ*pF\rMc$RJbRMN.J;)C.>3ML3GDi:J]kjGTl8s'g):D<8@%G=s?=^=E;ejbfaJ?@eEN:e4$A[ON!/JQ`;u:U*E<7YbfP.=jZ]MkjKb3IF:48b:dnQj,o9_Tt^"'VP[+@u6rQHs8GpY@nsR\,S1`%c2L8.qX>^E9Bgss0!pOps3_lBVSccrMfCQa_c0kG1_0i*d2ZB^cjc?ke%kA63F=n;%a(G^BjBm+&^3#h+%4WnC2'\na)Y1P-<`IA%6![Zo`YrT;`DdhL(:d4P8!>EWVdid\aC2+1d--!I.]B2]*jgIi'MYn)MLuGV\#B6sUAKKepe'!Q:4etN$k=J5'`Oarde-;`](ml-%G=p*ZZW$E9k--lp8;b9.0$b!sBdBqaX/5c.U2.YY6SfIHV@<)&+DF#6[%qW%FtPUnPVI>6%Y^cIop,pEKB_-5Il\cE-9F@E6f'pp%O@8gF8MGBp+%cT_RdCi(&.t_b#=Xd[mbC*,UA^^TP2OVsHP^PBQA-3gSN#J2BVPm&lS'7E82C/m)P^L*IVe92*S^9ZU7l(q%WuKT%)E!36;DB38Vt%HYn'Y?KkR*@Tp<(,kLTW,85r7QK1nSCB'c3Jg?cN/8GfMKV*5J.YUM0G1iNYeu_VZ,'PF#k5=WT\2g:tOIoglRp%c8c/9VLu_uC5DYOB;.Bnm;BG/1pLalI!&,8W0U#lYDrWiMPg5,ee1GgfjmQq%8/P-*Sp7"0f_$=8F5]*9S-QDbtb&&eWJNL7?^!!%:i/69VV.T[],s?@/f/sjJcpt;)]D*I.J,ogUk,%]d$-NiB;_P,VEg-mEnH\pO*Hs]E+Wq3PYp%%;&F!W(PQ;$lR3*e1sqJh(@lof%U7o[s@8;`kD.+P\WoctZ]7N[F@1n[<YG<S0_?Da7];;5m]_`itP@&6\8NOK#jZu:r66?n5)RsYa4f9Q7gU_[R0MHL4"7t)W+p8?$%&Ok+BIK\1pF&YW:'bWW:_^Yisc()dW_D+=c'Dk`[9siD,bOT@e[k>hUe<`a3*/B:UcNY%an>&39PMe&I?$6h=iU'#'\fX>WY;:rt%0L[WSL^6oRK-Em>\*h#mPk8j!OL]Ls$h0Cd9dV:X'#bG(G<Kk(Q;0iue;9<>phMAsi@S`;-&FSk&(b>$*B&hG(3A6I84]1jnD85C%]mreN(cm)-mCIC)UI]@0<MhN$7XpTbIP;)<6hnJ'&o7S-1l)E8k^t'N"1R[4kEPUT>=/G:DArds.8qHT.a]pb>Sg6`2K3q"10;pF%C8g;qgQ6*MTu2MNThA*;78)!_%A+DSkMf<?A2a^fDug+O*NEP1ggSooL`YfW#q-.l/,I\iG7:1]"kN9]'Fg&Y_6HDW_VZ,')mkV)%R@iE/NbK$u+c$i>Kk$uca<"[&^4!P_<FZo`WU5BX#B+;P&N;*PC+/E+%(hO3E7pB$OAG'Y[iSG?V*dWc>#I_Y?RULQ)EJ(01p9OS%"=;7\BlPFG'f9mp$T`E1Mu#cT'.u2ud9QO*UtKWlEUd0?1.CT*&']IA0H0GsSnFg3k[t9a08^PE[V4B&n`c\A$!p4KUc??5.Mr/a%&c["-\7drK,`[n8=VH%6a&Qs!"[3,@"nF#1(i'mcJO!ga8+/d_Jl3?(SOK$:iYj5\q_Zr"Y3Ib](Ml=.C75oU<D?O]1tL+@'=bbb%#Q$?NV5'u_5(RJ7L(WWJd,M=!^mA0!6mI/E`COU4Br4`QmtDUjeX,?@5EKEo,+6.)MBIU:.$A[2_;[!F`q/mfURO;XC@D`S"^\QD%4A.N]!hIXMmPMn\)Qp&[O&(kW>"X2mL?$@'@ShToXOU4@89HafPPaucEIDrc>P5Y'.\qcf-7I>P,Y3:I6PJnk).4R]O%E8Zd^4h8%7+&m/(/::n*;hULGUUYOTn>V3CK=ch/_oVT9aBof'jTVCI&`q*`4Ib<:0/_[C[(KuDpmHLT.4Tgif<R*"KDZ0A=u^aMg6E>DftWZ%_nQ<de?CT6)ao&<6PJq<[)"Tf*CFLD9UZH$d6_?"U4p?6RPt!'nBWB>9qdr"_f685:BC"9+Xu6F@7m*4%Y]q*Y(E[RN2nI(LrNVU%kMcDZ2:W0.WH&9M@%T^7D++p+.;1GS$@gPDRh4oo<BBEgA[J@!1rg^.5aiRSVT#@q&S$ZlKtf4.2Yg);cQqLE@DV:I)MmX8#Y+AV%G$]B8ISX>s#q%4He;@\h!>;dR&*n+>Zfq8Y80GVi-=sDG,W\W0&H)o5bT"D</dBNtn-Z%2Qo#)(Oe/:=r-afFhOgU`+c4M_6?7DW%&O?bR:aBcG9B"cLhV]I%d$kMK\ulqoag5q6<)Y=_BGppnn4euD?nL=jVTnN0bmr-'9;t_=e5Y9PUF@[/B[[IaM7JEZf.-MDBJJrV%s/i^8UrM`B'dM\R`mHX5:/r<.1Lee^Qo$C(/5`eD[med6-G'E[R6`eE'L,Te+i#DAeM)qdf>s-"6=(WIBBW_k_D@tG(+5*ri&\1G%*FM\ObQ.OZYZt)?d&)IN[N:E2VpRk>ZhP6R@F>^oZpjbd,)f/3=(UT]8b%lHNp^&IJ`,b'Yr->sh&Xn0k(rO2BhpLDVbs3HSTH3K%#MW(+V8*o^p'$u7V9g;WVcZKn(!JUpfC=1X./\ML)2VrMj:t@]h\2k0=Fp3d8p<`CQ.O.t\^sdTqmqpIm,'2(]3nI6eittEDarWP%ZUV3%r2hLCY(45Q-aCqHE'.&+\b98u\6I&U"R"I9M3]&?fj*HYR$PWn)NJS-1tE:'J\o84#)W(*O['#+/RadPhe!m+r5Wk3kt*'"%.tVh)9AU/t@*q+I]UIEA3=#ebbMjj+?'AJqH.B:_SpUlp?$Ac4U&/)cPr]!GUhc:o3_nqb8:qPW]Q*Ol_OoD=qV&P9cH8B#f^lLm%pYb*UNd]bb*QS2@$RZE2'Xt(C#8*0+9iYUMPBpQQS&1p`q(t&dCqDoWO%,5,-f8Pb9b_)bJ4I-9UgU2mJ:pE]ZpTn19tH<t-7Emb%"&fF=KD25H89-en7REX0)0*EDUd.##:uVAP+];]i=DT,4c6EMHBl6^.5mjuOW=$*JUd.#^&@8)8.=kX<[-9h+5mapH'F%5Y2%ucN%4+sL<p;SP4<[a;:A?kcq#u[E:?8B@R3(7_=>K>)r;d+X2'PI`80&!9J;P5%(HLS%g&m0QYW%HI,XM,fs2GP'5014/=QF2S,JsXFI%N2gYZdZZ'k5X`e+#P)#li=8n6S@m`(['WhfhWT)2BQOEW%Q>f9E5.ef>uj-`cWc.FMGd0JV9NIW1c7Z/p8Pi>F]e.H:G_U2D<mlZ%'pDY:OS]a!\>kiR((at5G!YlLT&fkk(;>[W7a7X.7%:TI7a!6r)ps+jdX]ii%/8i/OlAUgd84N-B)R`tH:+kL'R7h@Ph4(X(uA-9%f6&=QGat8mT?6FURI?n=:AiEB:Ajdp$2*bBAuPF\ItdLG?_PHA9Juf"rr-qRj+b[7n;;5OPDo!g&aBCV];,?1No&ZcW5!hl[1U3[%a*kqak9%_$hb\h&%Jg>rIH/'$n+0]Bn+0]BmiRJ&5>V:]Qg3JC/(D=`.`OUc6.LWY!8)Q1@rMiL"[/0N2EeDpM2&6nW5,)g>BNe?%6V'FXKkMpJ%B"<iq<U'`b=JbbSt=HYqsZV,L?0mAGLl3h_9[`%'9qpD5:XF5h:#<tqmqpI4JjG%T,I#XU[R7b_Xn=Df3*j,W<fS-%BVU^?:Y.2MG6PNP*qXl=I^*"L!p1$H2Ra9%?D7M`_bk+P"AQ3OKEcF''b+@S)F7+IWgCo2\LN(n;(t/_L`8O1it-Lk\nda^BE?PF%:NFh+!#d*8WHb#!"7nc"cN_Z#?-:M;"<p.KO/"B$HLWHD<S\OL#"u#,TPo,sTnO"V6iU_fd%0^Hj#%G+^cUfVW,C+/NhO5f1P,+@%`irl]$8t>j?tg0i@?tT,DdkVH78Pkh;PH`724Y:^1q?D=-FJg4G#^K>oA84JRbZ=hH<^5&\Y\]e[e+9S9?^-;\+FD*[k#/PP\>)1%256ocfi%-a]0m%NI.+O;1qBHXosXL,nerrPcalb+\YWp2[e+9S9;?\a8Mmt(7N7+eqD>aZ("(HeChZDPh2Zlp*V&N?e@-[_B9mI9%\27JI7,g[W::.ZW*_D9)kOiJ$Y5_t7@:/?3JO$mYY,5^j9iXQc_5AH?cjY*D)6,!]a;;qT@o0h=9FJ9SZj"JZZkP@J;L5s5R9T7:%&R#jSc!oOen-/u9(o]0ZP1Y(p:GU2=K5^j=;o;9tNM3@fQubr2YT1ia!9_;9Dh^%/[B_5BbO<Lsn@.@TJcnu8lek-:2jf1"'-Y&J%;rBB[8>;A6Csc2-a)rUkGW^9BTBY\uSaR7VDW;<rHb6CA3mS=E1sKRZXiNN\N_-akaF-I\+JPRQKBf6R/VYu,pBVD6l6phS8!&cP%`sQu=BJC`-^#q(pL^!bMd[k!<+X3EjP$?%:J;p?8i0<X<ahATT,./&9pH%joQN*IF6i9mb&G19hHf!q3cZt-UNVmdSNdAFB)u7J5%*LVE>Zep/Ec[b#?2`/Yr6Jt(n6AYgSpFXeV2UrO.[98eJ[^8@Xel)7AVBP\i+\.EG^_7_4;2)d,*I>)[DH)*.G`=H!NZQo<9N0p>%l5#'U.uqcH[A[)58r*P+!1$Bd<E!e3o^nr4hUe#?blEc8WO#o,kU6qTc_KE>HrNuoX/DlbpN7^qGoT?>5L\;03oAUs6otGn''Et(%/_&1@QU`s].cNB0`;lc#J'f_1'f-qVbT@g3TeNIWC&>98R7^G[*"J0$-]7Q60^2.QBe1kW1\:u1LbeG(&]OCQN_a%KL5qru1mF/U%rHJI_InGerJl%VVZ,<cN]ncOUG`@Yi2rUt*7XaKC^S$elBaImr`8E_sTIaB@Aq4F9P70$3csVNqb46@M&<4(3:Lc;MAt+>m<S^/\%o_VV8;FN.amo.TmVPT+3n15DKYV/:hP%^)\L9_]VgH4mL"d<FHkmKJI98OODjTJa94Zt6fpN<<N"@\+J@/QVc6jDNr./9;LQ/BaL%kpcOYh8jLUK@BcTSc,JXIH[d@][K_dl^E^&f3%#oL^Z<h.7AK>-J@`OX<fWPAAf[kYt030+<j@M%uMW,Ql>Pa3GF,O6/[XF4.)n&%M7ASH0V&tH>'1TZDMuk'F9*3s>Q_.RT_!8`ZDZ'\!lDD1e&[KA@<<Y1/51u30",9,LnM"rn:$WFdpU`a<Tii61cRD%)Ac/0hI(BS%PfKHid[k!<a_it'_qOSqT*5T3fc!@OnL1@4JekLs@("l!^67KJrLQ-/-)/7%Ra"5<W@'(^3_nU]S:](4U[hT6,PQKkIpY/*S&_p]%r%k,HB(UMk5W^;YV]mf25<HsN.GFu*9Q>7>H'GiO_q1TH)FHGcW1ZWo%8Alkcm;gS=A+DZR%Q1;Jd)RV`JtesPWVSqXDfDYJ7BQ=%*J:rfo<:or.c))>4ioO7H!Uohl:dc*k^mm_gPR>.I0$6fakL6$7Y95!-cD\^'Ku7+r]WO5N2AE!me;A]1;(I%pB_2@:Q3G7jc/']%.K"VMaDW-?QhJaIp79K+U1'#n6J2-h_iDh3#[IT7*`*2?FA:eu(e.GH7Uo14>u8qQ_A^!OP&Ti.,%d;n_&b<mfFf'3?B7Xr@EMj_%>28%ZD^_P;'7a.;m7H^f@i-2OX)C"sGUbUe-&n3h\s.?;gP4KSn**@R]rik]RL3sVRkO49k;N)n60Z\iA+Ej74WT6kXrI2U@g0@A%1RZXSaW9K#Y%hKo;=Hg:?SJ8=DmLJ?VNcPKAN"ql%ag[De_jDK;;*".:=-5`Vo=^\:PIs`__M<G&];mnj.b3&j"iF!PbB"@itJdI%M2###"\g"&o:Ha99:mXOTH=+D$nd:'#nOST4)6gCi5^8uG)5i;d;6k$W<6i5ZP)WDaHQ6\0tqjda+AU)Uf1D#11o6IT47ee-.9dt%9T*+!D2o^-\'PIrg4U[)1VYihHTF]gL?cebKP=4;%<Oge7B#0pWId1>Tn"k4+Xem,mJgtjgj8!=XoSA-oH3cqJ6a9:%d2\2=bmHq%:sm'LJ,i"]aQos<5SleNS,2%:gu^qDQD?EYJ6%!cK0Pot)p\qJ1ZoCuWP4Nnj)WYJ19jVb"ttF\#!0:;A&d%F_Y.]nVBY(K"c`Df%C\Ds12!]'$1\h!['A[cSMU_[KR$DWmO"e.oKXp[Bi,b^/^&b\AqOS5olhbVaYAYMbO0t%oMk9X.iaQO6B"RHj"qs`nb:\<Y+,V=!%\S@;!IYBMX%MQI+KGDF"C7gYt03Y1*7&D\@$;C.M#3NXr*0\tq3?^of&iCO&,*KKmlGHXWMp/=60IOWSK9&#.f.hAg?H(F$/M/mF%>FRcRKq=&NI;LeNYtHtW]JT$/H5U&(BG$=!9ls1Hp?!C9J>)<c*?WsW<fGr?,saGA&+D]oks`r'>n@D;**nLI<(;bR=tsio?@<<=%nbc9f4mY/)dNQ6&)<M7hdEWW<X.A8_T\/$V-I1gAG&1C?Rnub#*0[f\.2/\!G>^.t'9nBDW[*N'(^K^?fpu*Eb#5e3\YO6FG0N2m%H%>iUU'F3\rkr3O]LW9aGVmAG^X6r!O&km5fs"tn&Y;]N#CKoNTCU)0A''2#4A*K'[;<=-P+9320p]b]G/]6&S7/*6&BqtG=%jU4%T]`%7&)[gi.NPgqMI?cHbg_9"\We<L&(g&hN<Y*b\KuhcQ<N9+'e-d.2RY4eO]:6+UgcJX_89/D!ql&-Ki.,.A9UpT<MXYRE_5<j%m@&GeEoK3BkeRiGh^PoUd#iZM6-$-rYu,AP-V?=q:d;G2,qC1P5KZQG`4C\A7-P`3,87IU>-E$V/.#\V:.=H!1LcE8(g[u#DZ(:]%/3g*b3NARSX."0?2N2MdQlHco60!!>9aKMT+aE[15np`,V=;B(/jI;R3"r9/G>^/Tklf?[3L(9e],]qt"RlR$2(=BH7]0-2?/%6K%HdqH/o11dNHb\^1(fO-&Xrj0U-:W</^gTSFCL#mK4;0GEr!T&n1(Oe@pGa7BD/tR#7psNU=A3Vc3telt"h&T98><W&.-%B_EHn8s%N_5rno;1-oNe/htL9>DXXNbC7[8;g3/Ba<IL[;$Q)HtV[.On26M@JHW,e+XWE'&TAG@"?K>nEK`>Z)_ChsR:LYakA7PRBf.jC*0t%GgVgHAZ=I(.;7/A?*hSl9ZZD54><-Qh&Q52V(HUuYA:#&TiPC"-^#4F,]QZng*b""eRd_Y2j1O3[*#an>%V3N,_h-p9,:Q$L+nl$%XkM/HCXUM2fd#%/<,K`km1lZJqe=q<<_81p)`cU0l*eJIUbQ..HHj:C$&^5:pp90CiB6;-]WRXRPR*aKV\a\hJ;uF_)YbeUU^*;6%8ZaS0(cc(U$IV@KAh+ZeH4P!m'!pHQL(7s?Gaq$2i[k49]R]HJPqm58OVGN[T^)%X)ouo:o]nD/af%!iPV*Llb[?s40R%5QAs^0.%2b`t(RVhR)&0nGiB`$ZU*)4Lu-/em;]LB0#&_b[IRcZ#4G%+%+2&l9$3XL[U$X9O^fT[LIGsbpP(/J<Q=Za[fnaj=\/3b3mW)%8n%MOku9V]QZ[mYBT%p*gl%UPY#YkpJ>R/$p2go;p1RF-FJN="JAS%t6[_>)]iSqFHc8b^L3uP,TVU(`%e>-ZpcE;P!@V,=ST]3_Lg9%BI8esV,pB#A5#.1l2Yl#KeeF84Qgtm?U8S^L++!_VMU=2lDHR7O0J]OIud9tft(^3TA+`]eu-:a-&OM_V&lkJ;'fE*88#b"OE?eh%,"Z!$3Z]u<%,s'H`KJN0K4*+rZ:'m/P'&bK/6TrUcB<g1dRCH0PV/,A8Eh=$@S.HY3iI._bYb3p?kl^'bE]TcAVdA%dRC<,Q7dc3%B^$_/@nRWS._'S_/((2O?l`Rb8ET]q7Bd+QD4NfX.`/RcHGg"6<\^ImOb4e*75@B$/qR)jl(St?c?.Hl;5!.gl,iG>@*lSOEqW2>%MBETM?+!PU5O?oOZE$f(L&A:i%5d?H'-4ET5LH0NP[X;.CNB&OXB[I(ZF0JsK8Z*j/PV<sW'qUV*@DbV;6EA,0gP=)];\8Ae&T4R%_CFWENG+t^LRRG_@mW'P_(,!Jj'1eY6eD</N(R`qguSOCmHNJ._>bl)G05^6)h$?n*WW`tiAj*`P9.XEkYdH*1OM3cJ*N)>kcDe(%S*KN>-`7d<^:J[dro<G*j6b+Qh&!$ao\r;0:UTLp@O65#e;LZ>=1d;OlaO>6QRM\C$9u5NQs;D`f(n_4nnRdUeXO'oF8b@smU:0[%qt]CQrT8M-Y6PiN2Cuq`rV5=f&]VV'&QSCpnCd3H_sK<S46%-QJ%Y`uU>Nf%CqBJRCtR_0?,TH`OJsq?`gX\5P[nrQ,VWD2QinP"%117ludV5G'DQ0``CX"D%d`PW+$%d91PM++WPMr@(]ScJL%emu-="U5#Xql$L+bh$SEamTf;YWA+VKZG\R>;(`K/QEFW&%.)CVp&B%L?$"RcMfAm41Kag!\^,HUu&<UD*pQ]!EddUg3GSq_kq"?*(kJD`?@a.-G,;%hIi-"-/4WG&fpfp\5:gM7>@*rcD>.7_802'pJpa3%_,VFWI[DIC;1j*7g,X`c.FeL)Oe6,hI00q*dNZ"Yr1lfVV7uF>),.FM@J.Sq,>II(ZMGo&X/=-EJ"/*nNKuBS;`%'Nl8)(rEkS);%oJqGeHIP"BBMG1!&\\=^dht44_Riamq:]"C-;\(p]f)"YB1^lJ[mYK2(f]BX_k+6VXSP,[O]]<nU,@bl1g==0+W6(i$6Cd]q3&hW%9;:IV!PK.&8"@U`'UAl-khVn"pfNF$A@0o;"<,-'7>bu1c/rsZP8eFMH\s!#Af^(,,8Y7.=)5*@`=df955B&RR1p1CC.jJE]%08j%qY]CZB;4C!nO7G<d$U+3A6i7F%2?4?NuCWUm2:("`QX%>X\`+4KY<?a()]-&94ht7[:"BB_"5F_aOZ8'K6f8BQa5<R4m<$/&tQlZ%@]>A6(>2H"OniJ=TA.e'j1_qSX?o.4:ID%&"LYY=e)WH/>qu,'GIUJUOc^lH75dp(84BE=NDX:=kTs#C<M\lCFgA6Z<jXOs\1D`>%k@^ZUbml(&Q2W_1QRop+Sjp`+a\j,ebUCU']#6YO?<jn7`?p"KZWWiJ*hS0^_oH4sS[Rl>HsJIaZKsuWks0hF+jp8iD;<'q-F4sG%op-dfd^)^';WJ1UL(E,not^g?1,hBW>eu&9A<5SZ/r_6uk7*2CWaQZGQ(IY"lB5(<BgmqSHIZW6gAIa:Au`o@AP)\RaS7E/7&nI_%@?uj0IH7=oY]HK9#)67H8<8HN6&L5#(C?6SOripej9e&)VALuP]Ld/gE9q+mi5K.'gC2Z$hXEMtMTfYc/Ch#@SDlO-Mlbr?@GR4b%S+Ni-B!qG[Hj2Wk)GN0`\0Z-LGK\SQK:OrT5A$["GTf%t4aZpJ0n[b&$$'"V\k"249o6"%BP<:cZ6B]7R3*=X4-uPESAT<F89)Y<%9Vo7.(oYi;K.PQX`,#cc\%nYpIb^5))u$JZAi9F1HpFH@D:WBaK)689fYFT(o:F/MqQBOT[6#l5(?E(h8b*$<#hY-)MBtPp#O3LA%hr1(SCuqoA-7q19$)cGm<6%2IGPE4u4jJpC;_m5b>,`i]lS_CY/2>1L[7+]gh,Lk[`Q!=AZe<7-kOE9Q2`d.E]%]\T^l"gA^JA`S%4mOr%3q8AFcAPFFQ39XSX!2u?BjkeJq+^.,`;#O<H2N'\9&F6o4<NcO\_/!4VMrtToC@9pQqbo)C.jJEqpoB"Kd>q*Ol,fo\&XtO%R+54[X]tWle8oH?f(653doUJS`Ts#fkEfQLGMdecs$,7fpio./<"2X+q=Ij-gr@B/O5"OHf53(eo62Q8*Zj0DhJN75^Y_2egmm9/%m0gZ,q/>F\^%m-Kk7,UAM#;IAGH\Rcp]^T+]!5>+=82oID)P#J7er$q-^t$7Xa9q`J$\$c<@oEJM_NVK0"%Q2C:-c%o@Q8:+VaDL%rq"`9CG"E@j.G/iI6)8+>@m"(+22^$KMG&HSR^,-]7O+YET/^RpgXP'n=93+jW%]WY_+-H\_bK1?@90^55iTi(=l_Q(uV4rgX1(.%U%kaEFGYQ\7!(*;Ar[m3.C-!PLKUWeJbA5i]7tH4D+AGWYt<j,XBp0Ue*-FZb7FIlmk-h2J\HTC^\mhTF*VhZAi0B\n<_CT]DXld%g&:(4QePl0^e^-gl07NKs5i=V:UTR/~>%AI9_PrivateDataEnd